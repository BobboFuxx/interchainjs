"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "../core/index.ts":
/*!************************!*\
  !*** ../core/index.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src */ \"../core/src/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src__WEBPACK_IMPORTED_MODULE_0__]);\n_src__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _src__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _src__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// for dev mode only\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3JlL2luZGV4LnRzPzhkZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZm9yIGRldiBtb2RlIG9ubHlcbmV4cG9ydCAqIGZyb20gXCIuL3NyY1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core/index.ts\n");

/***/ }),

/***/ "../core/src/auth.ts":
/*!***************************!*\
  !*** ../core/src/auth.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Secp256k1Auth\": () => (/* binding */ Secp256k1Auth),\n/* harmony export */   \"defaultHdPath\": () => (/* binding */ defaultHdPath)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! elliptic */ \"elliptic\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(elliptic__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/key */ \"../core/src/utils/key.ts\");\n/* harmony import */ var _utils_mnemonic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/mnemonic */ \"../core/src/utils/mnemonic.ts\");\n/* harmony import */ var _utils_signature__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/signature */ \"../core/src/utils/signature.ts\");\n/* harmony import */ var _utils_slip10__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/slip10 */ \"../core/src/utils/slip10.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_key__WEBPACK_IMPORTED_MODULE_2__, _utils_mnemonic__WEBPACK_IMPORTED_MODULE_3__, _utils_slip10__WEBPACK_IMPORTED_MODULE_5__]);\n([_utils_key__WEBPACK_IMPORTED_MODULE_2__, _utils_mnemonic__WEBPACK_IMPORTED_MODULE_3__, _utils_slip10__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n\n\n\n\n\nvar secp256k1 = new (elliptic__WEBPACK_IMPORTED_MODULE_1___default().ec)(\"secp256k1\");\nvar secp256k1N = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", \"hex\");\nvar derTagInteger = 0x02;\nvar defaultHdPath = [_utils_slip10__WEBPACK_IMPORTED_MODULE_5__.Slip10RawIndex.hardened(44), _utils_slip10__WEBPACK_IMPORTED_MODULE_5__.Slip10RawIndex.hardened(118), _utils_slip10__WEBPACK_IMPORTED_MODULE_5__.Slip10RawIndex.hardened(0), _utils_slip10__WEBPACK_IMPORTED_MODULE_5__.Slip10RawIndex.normal(0), _utils_slip10__WEBPACK_IMPORTED_MODULE_5__.Slip10RawIndex.normal(0)];\nvar Secp256k1Auth = /*#__PURE__*/function () {\n  function Secp256k1Auth() {\n    _classCallCheck(this, Secp256k1Auth);\n    _defineProperty(this, \"_keyPair\", {});\n    _defineProperty(this, \"_key\", void 0);\n    _defineProperty(this, \"_privkey\", void 0);\n    _defineProperty(this, \"_seed\", void 0);\n    _defineProperty(this, \"_hdPath\", void 0);\n    _defineProperty(this, \"algo\", \"secp256k1\");\n  }\n  _createClass(Secp256k1Auth, [{\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"updateSeed\",\n    value: function updateSeed(seed) {\n      this._seed = seed;\n      if (this._hdPath) {\n        this.updateHdPath(this._hdPath);\n      }\n    }\n\n    /**\n     *\n     * @param hdPath string format example: \"m/0'/1/2'/2/1000000000\"\n     */\n  }, {\n    key: \"updateHdPath\",\n    value: function updateHdPath(hdPath) {\n      if (typeof hdPath === \"string\") {\n        this._hdPath = (0,_utils_slip10__WEBPACK_IMPORTED_MODULE_5__.stringToPath)(hdPath);\n      } else {\n        this._hdPath = hdPath;\n      }\n      if (this._seed) {\n        var _Slip10$derivePath = _utils_slip10__WEBPACK_IMPORTED_MODULE_5__.Slip10.derivePath(_utils_slip10__WEBPACK_IMPORTED_MODULE_5__.Slip10Curve.Secp256k1, this._seed, this._hdPath),\n          privkey = _Slip10$derivePath.privkey;\n        this.updatePrivKey(privkey);\n      }\n    }\n  }, {\n    key: \"updatePrivKey\",\n    value: function updatePrivKey(privkey) {\n      this._assertPrivKey(privkey);\n      this._privkey = privkey;\n      var keypair = secp256k1.keyFromPrivate(privkey);\n      if (keypair.validate().result !== true) {\n        throw new Error(\"input data is not a valid secp256k1 private key\");\n      }\n      this._keyPair[\"fromPrivKey\"] = keypair;\n      var pubkey = (0,_utils_key__WEBPACK_IMPORTED_MODULE_2__.getCompressedPubkey)(secp256k1, keypair);\n      this.updatePubKey(pubkey);\n    }\n  }, {\n    key: \"updatePubKey\",\n    value: function updatePubKey(pubkey) {\n      var keypair = secp256k1.keyFromPublic(pubkey);\n      this._keyPair[\"fromPubKey\"] = keypair;\n      this._key = {\n        pubkey: pubkey,\n        address: (0,_utils_key__WEBPACK_IMPORTED_MODULE_2__.toAddress)(pubkey)\n      };\n    }\n  }, {\n    key: \"_assertPrivKey\",\n    value: function _assertPrivKey(privkey) {\n      if (privkey.length !== 32) {\n        throw new Error(\"Input data is not a valid secp256k1 private key\");\n      }\n      var privkeyAsBigInteger = new (bn_js__WEBPACK_IMPORTED_MODULE_0___default())(privkey);\n      if (privkeyAsBigInteger.gte(secp256k1N)) {\n        throw new Error(\"Input data is not a valid secp256k1 private key\");\n      }\n    }\n  }, {\n    key: \"_assertHash\",\n    value: function _assertHash(hash) {\n      if (hash.length === 0) {\n        throw new Error(\"Message hash must not be empty\");\n      }\n      if (hash.length > 32) {\n        throw new Error(\"Message hash length must not exceed 32 bytes\");\n      }\n    }\n  }, {\n    key: \"_toDer\",\n    value: function _toDer(r, s) {\n      // DER supports negative integers but our data is unsigned. Thus we need to prepend\n      // a leading 0 byte when the higest bit is set to differentiate nagative values\n      var rEncoded = r[0] >= 0x80 ? new Uint8Array([0].concat(_toConsumableArray(r))) : r;\n      var sEncoded = s[0] >= 0x80 ? new Uint8Array([0].concat(_toConsumableArray(s))) : s;\n      var rLength = rEncoded.length;\n      var sLength = sEncoded.length;\n      var data = new Uint8Array([derTagInteger, rLength].concat(_toConsumableArray(rEncoded), [derTagInteger, sLength], _toConsumableArray(sEncoded)));\n      return new Uint8Array([0x30, data.length].concat(_toConsumableArray(data)));\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(hash) {\n      if (!this._keyPair.fromPrivKey) {\n        throw new Error(\"No keyPair from private key initialized. Please try `updateSeed`, `updateHdPath` or `updatePrivKey` before signing.\");\n      }\n      this._assertHash(hash);\n      var sigObj = this._keyPair.fromPrivKey.sign(hash, {\n        // the `canonical` option ensures creation of lowS signature representations\n        canonical: true\n      });\n      return (0,_utils_signature__WEBPACK_IMPORTED_MODULE_4__.toSigObj)(sigObj);\n    }\n  }, {\n    key: \"verify\",\n    value: function verify(hash, sigObj) {\n      if (!this._keyPair.fromPubKey) {\n        throw new Error(\"No keyPair from public key initialized. Please try `updateSeed`, `updateHdPath` or `updatePrivKey` before signing.\");\n      }\n      this._assertHash(hash);\n      try {\n        return this._keyPair.fromPubKey.verify(hash, this._toDer(sigObj.r, sigObj.s));\n      } catch (error) {\n        return false;\n      }\n    }\n  }], [{\n    key: \"fromMnemonic\",\n    value: function fromMnemonic(mnemonic, password) {\n      var auth = new Secp256k1Auth();\n      auth.updateSeed((0,_utils_mnemonic__WEBPACK_IMPORTED_MODULE_3__.getSeedFromMnemonic)(mnemonic, password));\n      auth.updateHdPath(defaultHdPath);\n      return auth;\n    }\n  }, {\n    key: \"fromPrivKey\",\n    value: function fromPrivKey(privkey) {\n      var auth = new Secp256k1Auth();\n      auth.updatePrivKey(privkey);\n      return auth;\n    }\n  }, {\n    key: \"fromPubKey\",\n    value: function fromPubKey(pubkey) {\n      var auth = new Secp256k1Auth();\n      auth.updatePubKey(pubkey);\n      return auth;\n    }\n  }]);\n  return Secp256k1Auth;\n}();\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../core/src/auth.ts\n");

/***/ }),

/***/ "../core/src/index.ts":
/*!****************************!*\
  !*** ../core/src/index.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"../core/src/auth.ts\");\n/* harmony import */ var _signer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./signer */ \"../core/src/signer.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _signer__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _signer__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"../core/src/types.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_decimal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/decimal */ \"../core/src/utils/decimal.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_decimal__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_decimal__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/encoding */ \"../core/src/utils/encoding.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_encoding__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_encoding__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_mnemonic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/mnemonic */ \"../core/src/utils/mnemonic.ts\");\n/* harmony import */ var _utils_operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/operation */ \"../core/src/utils/operation.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_operation__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_operation__WEBPACK_IMPORTED_MODULE_6__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_slip10__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/slip10 */ \"../core/src/utils/slip10.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_auth__WEBPACK_IMPORTED_MODULE_0__, _utils_mnemonic__WEBPACK_IMPORTED_MODULE_5__, _utils_slip10__WEBPACK_IMPORTED_MODULE_7__]);\n([_auth__WEBPACK_IMPORTED_MODULE_0__, _utils_mnemonic__WEBPACK_IMPORTED_MODULE_5__, _utils_slip10__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _auth__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _auth__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_mnemonic__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_mnemonic__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_slip10__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_slip10__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVCO0FBQ0U7QUFDRDtBQUNRO0FBQ0M7QUFDQTtBQUNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3JlL3NyYy9pbmRleC50cz8yN2I3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2F1dGhcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3NpZ25lclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzL2RlY2ltYWxcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzL2VuY29kaW5nXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9tbmVtb25pY1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvb3BlcmF0aW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9zbGlwMTBcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../core/src/index.ts\n");

/***/ }),

/***/ "../core/src/signer.ts":
/*!*****************************!*\
  !*** ../core/src/signer.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseSigner\": () => (/* binding */ BaseSigner)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar BaseSigner = /*#__PURE__*/function () {\n  function BaseSigner(Query) {\n    _classCallCheck(this, BaseSigner);\n    _defineProperty(this, \"_Query\", void 0);\n    _defineProperty(this, \"_query\", void 0);\n    _defineProperty(this, \"_auth\", void 0);\n    this._Query = Query;\n  }\n  _createClass(BaseSigner, [{\n    key: \"query\",\n    get: function get() {\n      this._assertQuery();\n      return this._query;\n    }\n  }, {\n    key: \"auth\",\n    get: function get() {\n      this._assertAuth();\n      return this._auth;\n    }\n  }, {\n    key: \"on\",\n    value: function on(endpoint) {\n      this._query = new this._Query(endpoint);\n      return this;\n    }\n  }, {\n    key: \"by\",\n    value: function by(auth) {\n      this._auth = auth;\n      return this;\n    }\n  }, {\n    key: \"_assertQuery\",\n    value: function _assertQuery() {\n      if (!this._query) {\n        throw new Error(\"Please provide rpc endpoint before signing (using `on` method).\");\n      }\n    }\n  }, {\n    key: \"_assertAuth\",\n    value: function _assertAuth() {\n      if (!this._auth) {\n        throw new Error(\"Please provide auth info before signing (using `by` method).\");\n      }\n    }\n  }, {\n    key: \"_signArbitrary\",\n    value: function _signArbitrary(raw) {\n      var rawHash = this._hash(raw);\n      var sigObj = this.auth.sign(rawHash);\n      var signature = this._toSignature(sigObj);\n      return signature;\n    }\n  }, {\n    key: \"verifyArbitrary\",\n    value: function verifyArbitrary(raw, signature) {\n      var rawHash = this._hash(raw);\n      var sigObj = this._toSigObj(signature);\n      return this.auth.verify(rawHash, sigObj);\n    }\n  }]);\n  return BaseSigner;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvc2lnbmVyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRU8sSUFBZUEsVUFBVTtFQU05QixTQUFBQSxXQUFZQyxLQUFvQyxFQUFFO0lBQUFDLGVBQUEsT0FBQUYsVUFBQTtJQUFBRyxlQUFBO0lBQUFBLGVBQUE7SUFBQUEsZUFBQTtJQUNoRCxJQUFJLENBQUNDLE1BQU0sR0FBR0gsS0FBSztFQUNyQjtFQUFDSSxZQUFBLENBQUFMLFVBQUE7SUFBQU0sR0FBQTtJQUFBQyxHQUFBLEVBRUQsU0FBQUEsSUFBQSxFQUFZO01BQ1YsSUFBSSxDQUFDQyxZQUFZLENBQUMsQ0FBQztNQUNuQixPQUFPLElBQUksQ0FBQ0MsTUFBTTtJQUNwQjtFQUFDO0lBQUFILEdBQUE7SUFBQUMsR0FBQSxFQUVELFNBQUFBLElBQUEsRUFBVztNQUNULElBQUksQ0FBQ0csV0FBVyxDQUFDLENBQUM7TUFDbEIsT0FBTyxJQUFJLENBQUNDLEtBQUs7SUFDbkI7RUFBQztJQUFBTCxHQUFBO0lBQUFNLEtBQUEsRUFFRCxTQUFBQyxHQUFHQyxRQUFnQixFQUFFO01BQ25CLElBQUksQ0FBQ0wsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDTCxNQUFNLENBQUNVLFFBQVEsQ0FBQztNQUN2QyxPQUFPLElBQUk7SUFDYjtFQUFDO0lBQUFSLEdBQUE7SUFBQU0sS0FBQSxFQUVELFNBQUFHLEdBQUdDLElBQVUsRUFBRTtNQUNiLElBQUksQ0FBQ0wsS0FBSyxHQUFHSyxJQUFJO01BQ2pCLE9BQU8sSUFBSTtJQUNiO0VBQUM7SUFBQVYsR0FBQTtJQUFBTSxLQUFBLEVBRUQsU0FBQUosYUFBQSxFQUF5QjtNQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDQyxNQUFNLEVBQUU7UUFDaEIsTUFBTSxJQUFJUSxLQUFLLENBQ2IsaUVBQ0YsQ0FBQztNQUNIO0lBQ0Y7RUFBQztJQUFBWCxHQUFBO0lBQUFNLEtBQUEsRUFFRCxTQUFBRixZQUFBLEVBQXdCO01BQ3RCLElBQUksQ0FBQyxJQUFJLENBQUNDLEtBQUssRUFBRTtRQUNmLE1BQU0sSUFBSU0sS0FBSyxDQUNiLDhEQUNGLENBQUM7TUFDSDtJQUNGO0VBQUM7SUFBQVgsR0FBQTtJQUFBTSxLQUFBLEVBTUQsU0FBQU0sZUFBeUJDLEdBQWUsRUFBYztNQUNwRCxJQUFNQyxPQUFPLEdBQUcsSUFBSSxDQUFDQyxLQUFLLENBQUNGLEdBQUcsQ0FBQztNQUMvQixJQUFNRyxNQUFNLEdBQUcsSUFBSSxDQUFDTixJQUFJLENBQUNPLElBQUksQ0FBQ0gsT0FBTyxDQUFDO01BQ3RDLElBQU1JLFNBQVMsR0FBRyxJQUFJLENBQUNDLFlBQVksQ0FBQ0gsTUFBTSxDQUFDO01BQzNDLE9BQU9FLFNBQVM7SUFDbEI7RUFBQztJQUFBbEIsR0FBQTtJQUFBTSxLQUFBLEVBRUQsU0FBQWMsZ0JBQWdCUCxHQUFlLEVBQUVLLFNBQXFCLEVBQVc7TUFDL0QsSUFBTUosT0FBTyxHQUFHLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixHQUFHLENBQUM7TUFDL0IsSUFBTUcsTUFBTSxHQUFHLElBQUksQ0FBQ0ssU0FBUyxDQUFDSCxTQUFTLENBQUM7TUFDeEMsT0FBTyxJQUFJLENBQUNSLElBQUksQ0FBQ1ksTUFBTSxDQUFDUixPQUFPLEVBQUVFLE1BQU0sQ0FBQztJQUMxQztFQUFDO0VBQUEsT0FBQXRCLFVBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzaWduL2V4YW1wbGUvLi4vY29yZS9zcmMvc2lnbmVyLnRzPzdlM2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXV0aCwgU2lnT2JqIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEJhc2VTaWduZXI8VD4ge1xuICBwcml2YXRlIF9RdWVyeT86IHsgbmV3IChlbmRwb2ludDogc3RyaW5nKTogVCB9O1xuXG4gIHByb3RlY3RlZCBfcXVlcnk/OiBUO1xuICBwcm90ZWN0ZWQgX2F1dGg/OiBBdXRoO1xuXG4gIGNvbnN0cnVjdG9yKFF1ZXJ5OiB7IG5ldyAoZW5kcG9pbnQ6IHN0cmluZyk6IFQgfSkge1xuICAgIHRoaXMuX1F1ZXJ5ID0gUXVlcnk7XG4gIH1cblxuICBnZXQgcXVlcnkoKSB7XG4gICAgdGhpcy5fYXNzZXJ0UXVlcnkoKTtcbiAgICByZXR1cm4gdGhpcy5fcXVlcnkhO1xuICB9XG5cbiAgZ2V0IGF1dGgoKSB7XG4gICAgdGhpcy5fYXNzZXJ0QXV0aCgpO1xuICAgIHJldHVybiB0aGlzLl9hdXRoITtcbiAgfVxuXG4gIG9uKGVuZHBvaW50OiBzdHJpbmcpIHtcbiAgICB0aGlzLl9xdWVyeSA9IG5ldyB0aGlzLl9RdWVyeShlbmRwb2ludCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBieShhdXRoOiBBdXRoKSB7XG4gICAgdGhpcy5fYXV0aCA9IGF1dGg7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBwcm90ZWN0ZWQgX2Fzc2VydFF1ZXJ5KCkge1xuICAgIGlmICghdGhpcy5fcXVlcnkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJQbGVhc2UgcHJvdmlkZSBycGMgZW5kcG9pbnQgYmVmb3JlIHNpZ25pbmcgKHVzaW5nIGBvbmAgbWV0aG9kKS5cIlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgX2Fzc2VydEF1dGgoKSB7XG4gICAgaWYgKCF0aGlzLl9hdXRoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiUGxlYXNlIHByb3ZpZGUgYXV0aCBpbmZvIGJlZm9yZSBzaWduaW5nICh1c2luZyBgYnlgIG1ldGhvZCkuXCJcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IF9oYXNoKHJhdzogVWludDhBcnJheSk6IFVpbnQ4QXJyYXk7XG4gIHByb3RlY3RlZCBhYnN0cmFjdCBfdG9TaWduYXR1cmUoc2lnT2JqOiBTaWdPYmopOiBVaW50OEFycmF5O1xuICBwcm90ZWN0ZWQgYWJzdHJhY3QgX3RvU2lnT2JqKHNpZ25hdHVyZTogVWludDhBcnJheSk6IFNpZ09iajtcblxuICBwcm90ZWN0ZWQgX3NpZ25BcmJpdHJhcnkocmF3OiBVaW50OEFycmF5KTogVWludDhBcnJheSB7XG4gICAgY29uc3QgcmF3SGFzaCA9IHRoaXMuX2hhc2gocmF3KTtcbiAgICBjb25zdCBzaWdPYmogPSB0aGlzLmF1dGguc2lnbihyYXdIYXNoKTtcbiAgICBjb25zdCBzaWduYXR1cmUgPSB0aGlzLl90b1NpZ25hdHVyZShzaWdPYmopO1xuICAgIHJldHVybiBzaWduYXR1cmU7XG4gIH1cblxuICB2ZXJpZnlBcmJpdHJhcnkocmF3OiBVaW50OEFycmF5LCBzaWduYXR1cmU6IFVpbnQ4QXJyYXkpOiBib29sZWFuIHtcbiAgICBjb25zdCByYXdIYXNoID0gdGhpcy5faGFzaChyYXcpO1xuICAgIGNvbnN0IHNpZ09iaiA9IHRoaXMuX3RvU2lnT2JqKHNpZ25hdHVyZSk7XG4gICAgcmV0dXJuIHRoaXMuYXV0aC52ZXJpZnkocmF3SGFzaCwgc2lnT2JqKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkJhc2VTaWduZXIiLCJRdWVyeSIsIl9jbGFzc0NhbGxDaGVjayIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9RdWVyeSIsIl9jcmVhdGVDbGFzcyIsImtleSIsImdldCIsIl9hc3NlcnRRdWVyeSIsIl9xdWVyeSIsIl9hc3NlcnRBdXRoIiwiX2F1dGgiLCJ2YWx1ZSIsIm9uIiwiZW5kcG9pbnQiLCJieSIsImF1dGgiLCJFcnJvciIsIl9zaWduQXJiaXRyYXJ5IiwicmF3IiwicmF3SGFzaCIsIl9oYXNoIiwic2lnT2JqIiwic2lnbiIsInNpZ25hdHVyZSIsIl90b1NpZ25hdHVyZSIsInZlcmlmeUFyYml0cmFyeSIsIl90b1NpZ09iaiIsInZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../core/src/signer.ts\n");

/***/ }),

/***/ "../core/src/types.ts":
/*!****************************!*\
  !*** ../core/src/types.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "../core/src/utils/decimal.ts":
/*!************************************!*\
  !*** ../core/src/utils/decimal.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Decimal\": () => (/* binding */ Decimal)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar Decimal = /*#__PURE__*/function () {\n  /**\n   * @param ground is the int value without the decimal point\n   * @param level is the number of decimal digits\n   */\n  function Decimal(ground) {\n    var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    _classCallCheck(this, Decimal);\n    _defineProperty(this, \"ground\", void 0);\n    _defineProperty(this, \"level\", void 0);\n    if (level < 0) {\n      throw new Error(\"Level of Decimal cannot be less than zero.\");\n    }\n    this.ground = ground;\n    this.level = level;\n  }\n  _createClass(Decimal, [{\n    key: \"round\",\n    value: function round() {\n      var gStr = this.ground.toString();\n      return Number.parseInt(gStr.at(-this.level) || \"0\") < 5 ? this.floor() : this.ceil();\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      var gStr = this.ground.toString();\n      var r = BigInt(gStr.slice(0, gStr.length - this.level));\n      return r;\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      return this.floor() + 1n;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(n) {\n      var dec = typeof n === \"bigint\" ? Decimal.fromBigInt(n) : typeof n === \"number\" ? Decimal.fromNumber(n) : n;\n      return new Decimal(this.ground * dec.ground, this.level + dec.level);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var gStr = this.ground.toString();\n      var uidx = gStr.length - this.level; // the unit digit index\n      if (uidx <= 0) {\n        gStr = gStr.padStart(this.level, \"0\");\n        return \"0.\".concat(gStr);\n      }\n      return \"\".concat(gStr.slice(0, uidx), \".\").concat(gStr.slice(uidx));\n    }\n  }], [{\n    key: \"fromBigInt\",\n    value: function fromBigInt(n) {\n      return new Decimal(n);\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(n) {\n      var _n$toString$match;\n      var level = (((_n$toString$match = n.toString().match(/\\.\\d*/)) === null || _n$toString$match === void 0 ? void 0 : _n$toString$match[0].length) || 1) - 1;\n      var ground = BigInt(n * Math.pow(10, level));\n      return new Decimal(ground, level);\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(n) {\n      var matchResult = n.match(/(\\d+)\\.?(\\d*)/);\n      if (!matchResult) {\n        throw new Error(\"Invalid decimal string\");\n      }\n      var _matchResult = _slicedToArray(matchResult, 3),\n        _ = _matchResult[0],\n        intpart = _matchResult[1],\n        decpart = _matchResult[2];\n      return new Decimal(BigInt(\"\".concat(intpart).concat(decpart)), decpart.length);\n    }\n  }]);\n  return Decimal;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvdXRpbHMvZGVjaW1hbC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFPLElBQU1BLE9BQU87RUFJbEI7QUFDRjtBQUNBO0FBQ0E7RUFDRSxTQUFBQSxRQUFZQyxNQUFjLEVBQXFCO0lBQUEsSUFBbkJDLEtBQWEsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUcsQ0FBQztJQUFBRyxlQUFBLE9BQUFOLE9BQUE7SUFBQU8sZUFBQTtJQUFBQSxlQUFBO0lBQzNDLElBQUlMLEtBQUssR0FBRyxDQUFDLEVBQUU7TUFDYixNQUFNLElBQUlNLEtBQUssQ0FBQyw0Q0FBNEMsQ0FBQztJQUMvRDtJQUNBLElBQUksQ0FBQ1AsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQSxLQUFLO0VBQ3BCO0VBQUNPLFlBQUEsQ0FBQVQsT0FBQTtJQUFBVSxHQUFBO0lBQUFDLEtBQUEsRUFxQkQsU0FBQUMsTUFBQSxFQUFnQjtNQUNkLElBQU1DLElBQUksR0FBRyxJQUFJLENBQUNaLE1BQU0sQ0FBQ2EsUUFBUSxDQUFDLENBQUM7TUFDbkMsT0FBT0MsTUFBTSxDQUFDQyxRQUFRLENBQUNILElBQUksQ0FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDZixLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQ25ELElBQUksQ0FBQ2dCLEtBQUssQ0FBQyxDQUFDLEdBQ1osSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQztJQUNqQjtFQUFDO0lBQUFULEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFPLE1BQUEsRUFBZ0I7TUFDZCxJQUFNTCxJQUFJLEdBQUcsSUFBSSxDQUFDWixNQUFNLENBQUNhLFFBQVEsQ0FBQyxDQUFDO01BQ25DLElBQU1NLENBQUMsR0FBR0MsTUFBTSxDQUFDUixJQUFJLENBQUNTLEtBQUssQ0FBQyxDQUFDLEVBQUVULElBQUksQ0FBQ1QsTUFBTSxHQUFHLElBQUksQ0FBQ0YsS0FBSyxDQUFDLENBQUM7TUFDekQsT0FBT2tCLENBQUM7SUFDVjtFQUFDO0lBQUFWLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFRLEtBQUEsRUFBZTtNQUNiLE9BQU8sSUFBSSxDQUFDRCxLQUFLLENBQUMsQ0FBQyxHQUFHLEVBQUU7SUFDMUI7RUFBQztJQUFBUixHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBWSxTQUFTQyxDQUE0QixFQUFXO01BQzlDLElBQU1DLEdBQVksR0FDaEIsT0FBT0QsQ0FBQyxLQUFLLFFBQVEsR0FDakJ4QixPQUFPLENBQUMwQixVQUFVLENBQUNGLENBQUMsQ0FBQyxHQUNyQixPQUFPQSxDQUFDLEtBQUssUUFBUSxHQUNyQnhCLE9BQU8sQ0FBQzJCLFVBQVUsQ0FBQ0gsQ0FBQyxDQUFDLEdBQ3JCQSxDQUFDO01BQ1AsT0FBTyxJQUFJeEIsT0FBTyxDQUFDLElBQUksQ0FBQ0MsTUFBTSxHQUFHd0IsR0FBRyxDQUFDeEIsTUFBTSxFQUFFLElBQUksQ0FBQ0MsS0FBSyxHQUFHdUIsR0FBRyxDQUFDdkIsS0FBSyxDQUFDO0lBQ3RFO0VBQUM7SUFBQVEsR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQUcsU0FBQSxFQUFXO01BQ1QsSUFBSUQsSUFBSSxHQUFHLElBQUksQ0FBQ1osTUFBTSxDQUFDYSxRQUFRLENBQUMsQ0FBQztNQUNqQyxJQUFNYyxJQUFJLEdBQUdmLElBQUksQ0FBQ1QsTUFBTSxHQUFHLElBQUksQ0FBQ0YsS0FBSyxDQUFDLENBQUM7TUFDdkMsSUFBSTBCLElBQUksSUFBSSxDQUFDLEVBQUU7UUFDYmYsSUFBSSxHQUFHQSxJQUFJLENBQUNnQixRQUFRLENBQUMsSUFBSSxDQUFDM0IsS0FBSyxFQUFFLEdBQUcsQ0FBQztRQUNyQyxZQUFBNEIsTUFBQSxDQUFZakIsSUFBSTtNQUNsQjtNQUNBLFVBQUFpQixNQUFBLENBQVVqQixJQUFJLENBQUNTLEtBQUssQ0FBQyxDQUFDLEVBQUVNLElBQUksQ0FBQyxPQUFBRSxNQUFBLENBQUlqQixJQUFJLENBQUNTLEtBQUssQ0FBQ00sSUFBSSxDQUFDO0lBQ25EO0VBQUM7SUFBQWxCLEdBQUE7SUFBQUMsS0FBQSxFQXRERCxTQUFBZSxXQUFrQkYsQ0FBUyxFQUFFO01BQzNCLE9BQU8sSUFBSXhCLE9BQU8sQ0FBQ3dCLENBQUMsQ0FBQztJQUN2QjtFQUFDO0lBQUFkLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFnQixXQUFrQkgsQ0FBUyxFQUFFO01BQUEsSUFBQU8saUJBQUE7TUFDM0IsSUFBTTdCLEtBQUssR0FBRyxDQUFDLEVBQUE2QixpQkFBQSxHQUFBUCxDQUFDLENBQUNWLFFBQVEsQ0FBQyxDQUFDLENBQUNrQixLQUFLLENBQUMsT0FBTyxDQUFDLGNBQUFELGlCQUFBLHVCQUEzQkEsaUJBQUEsQ0FBOEIsQ0FBQyxDQUFDLENBQUMzQixNQUFNLEtBQUksQ0FBQyxJQUFJLENBQUM7TUFDaEUsSUFBTUgsTUFBTSxHQUFHb0IsTUFBTSxDQUFDRyxDQUFDLEdBQUFTLElBQUEsQ0FBQUMsR0FBQSxDQUFHLEVBQUUsRUFBSWhDLEtBQUssRUFBQztNQUN0QyxPQUFPLElBQUlGLE9BQU8sQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLENBQUM7SUFDbkM7RUFBQztJQUFBUSxHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBd0IsV0FBa0JYLENBQVMsRUFBRTtNQUMzQixJQUFNWSxXQUFXLEdBQUdaLENBQUMsQ0FBQ1EsS0FBSyxDQUFDLGVBQWUsQ0FBQztNQUM1QyxJQUFJLENBQUNJLFdBQVcsRUFBRTtRQUNoQixNQUFNLElBQUk1QixLQUFLLENBQUMsd0JBQXdCLENBQUM7TUFDM0M7TUFDQSxJQUFBNkIsWUFBQSxHQUFBQyxjQUFBLENBQThCRixXQUFXO1FBQWxDRyxDQUFDLEdBQUFGLFlBQUE7UUFBRUcsT0FBTyxHQUFBSCxZQUFBO1FBQUVJLE9BQU8sR0FBQUosWUFBQTtNQUMxQixPQUFPLElBQUlyQyxPQUFPLENBQUNxQixNQUFNLElBQUFTLE1BQUEsQ0FBSVUsT0FBTyxFQUFBVixNQUFBLENBQUdXLE9BQU8sQ0FBRSxDQUFDLEVBQUVBLE9BQU8sQ0FBQ3JDLE1BQU0sQ0FBQztJQUNwRTtFQUFDO0VBQUEsT0FBQUosT0FBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3JlL3NyYy91dGlscy9kZWNpbWFsLnRzPzc5OTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIERlY2ltYWwge1xuICBncm91bmQ6IGJpZ2ludDtcbiAgbGV2ZWw6IG51bWJlcjtcblxuICAvKipcbiAgICogQHBhcmFtIGdyb3VuZCBpcyB0aGUgaW50IHZhbHVlIHdpdGhvdXQgdGhlIGRlY2ltYWwgcG9pbnRcbiAgICogQHBhcmFtIGxldmVsIGlzIHRoZSBudW1iZXIgb2YgZGVjaW1hbCBkaWdpdHNcbiAgICovXG4gIGNvbnN0cnVjdG9yKGdyb3VuZDogYmlnaW50LCBsZXZlbDogbnVtYmVyID0gMCkge1xuICAgIGlmIChsZXZlbCA8IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkxldmVsIG9mIERlY2ltYWwgY2Fubm90IGJlIGxlc3MgdGhhbiB6ZXJvLlwiKTtcbiAgICB9XG4gICAgdGhpcy5ncm91bmQgPSBncm91bmQ7XG4gICAgdGhpcy5sZXZlbCA9IGxldmVsO1xuICB9XG5cbiAgc3RhdGljIGZyb21CaWdJbnQobjogYmlnaW50KSB7XG4gICAgcmV0dXJuIG5ldyBEZWNpbWFsKG4pO1xuICB9XG5cbiAgc3RhdGljIGZyb21OdW1iZXIobjogbnVtYmVyKSB7XG4gICAgY29uc3QgbGV2ZWwgPSAobi50b1N0cmluZygpLm1hdGNoKC9cXC5cXGQqLyk/LlswXS5sZW5ndGggfHwgMSkgLSAxO1xuICAgIGNvbnN0IGdyb3VuZCA9IEJpZ0ludChuICogMTAgKiogbGV2ZWwpO1xuICAgIHJldHVybiBuZXcgRGVjaW1hbChncm91bmQsIGxldmVsKTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tU3RyaW5nKG46IHN0cmluZykge1xuICAgIGNvbnN0IG1hdGNoUmVzdWx0ID0gbi5tYXRjaCgvKFxcZCspXFwuPyhcXGQqKS8pO1xuICAgIGlmICghbWF0Y2hSZXN1bHQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZGVjaW1hbCBzdHJpbmdcIik7XG4gICAgfVxuICAgIGNvbnN0IFtfLCBpbnRwYXJ0LCBkZWNwYXJ0XSA9IG1hdGNoUmVzdWx0O1xuICAgIHJldHVybiBuZXcgRGVjaW1hbChCaWdJbnQoYCR7aW50cGFydH0ke2RlY3BhcnR9YCksIGRlY3BhcnQubGVuZ3RoKTtcbiAgfVxuXG4gIHJvdW5kKCk6IGJpZ2ludCB7XG4gICAgY29uc3QgZ1N0ciA9IHRoaXMuZ3JvdW5kLnRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUludChnU3RyLmF0KC10aGlzLmxldmVsKSB8fCBcIjBcIikgPCA1XG4gICAgICA/IHRoaXMuZmxvb3IoKVxuICAgICAgOiB0aGlzLmNlaWwoKTtcbiAgfVxuXG4gIGZsb29yKCk6IGJpZ2ludCB7XG4gICAgY29uc3QgZ1N0ciA9IHRoaXMuZ3JvdW5kLnRvU3RyaW5nKCk7XG4gICAgY29uc3QgciA9IEJpZ0ludChnU3RyLnNsaWNlKDAsIGdTdHIubGVuZ3RoIC0gdGhpcy5sZXZlbCkpO1xuICAgIHJldHVybiByO1xuICB9XG5cbiAgY2VpbCgpOiBiaWdpbnQge1xuICAgIHJldHVybiB0aGlzLmZsb29yKCkgKyAxbjtcbiAgfVxuXG4gIG11bHRpcGx5KG46IGJpZ2ludCB8IG51bWJlciB8IERlY2ltYWwpOiBEZWNpbWFsIHtcbiAgICBjb25zdCBkZWM6IERlY2ltYWwgPVxuICAgICAgdHlwZW9mIG4gPT09IFwiYmlnaW50XCJcbiAgICAgICAgPyBEZWNpbWFsLmZyb21CaWdJbnQobilcbiAgICAgICAgOiB0eXBlb2YgbiA9PT0gXCJudW1iZXJcIlxuICAgICAgICA/IERlY2ltYWwuZnJvbU51bWJlcihuKVxuICAgICAgICA6IG47XG4gICAgcmV0dXJuIG5ldyBEZWNpbWFsKHRoaXMuZ3JvdW5kICogZGVjLmdyb3VuZCwgdGhpcy5sZXZlbCArIGRlYy5sZXZlbCk7XG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICBsZXQgZ1N0ciA9IHRoaXMuZ3JvdW5kLnRvU3RyaW5nKCk7XG4gICAgY29uc3QgdWlkeCA9IGdTdHIubGVuZ3RoIC0gdGhpcy5sZXZlbDsgLy8gdGhlIHVuaXQgZGlnaXQgaW5kZXhcbiAgICBpZiAodWlkeCA8PSAwKSB7XG4gICAgICBnU3RyID0gZ1N0ci5wYWRTdGFydCh0aGlzLmxldmVsLCBcIjBcIik7XG4gICAgICByZXR1cm4gYDAuJHtnU3RyfWA7XG4gICAgfVxuICAgIHJldHVybiBgJHtnU3RyLnNsaWNlKDAsIHVpZHgpfS4ke2dTdHIuc2xpY2UodWlkeCl9YDtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkRlY2ltYWwiLCJncm91bmQiLCJsZXZlbCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIl9jbGFzc0NhbGxDaGVjayIsIl9kZWZpbmVQcm9wZXJ0eSIsIkVycm9yIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJyb3VuZCIsImdTdHIiLCJ0b1N0cmluZyIsIk51bWJlciIsInBhcnNlSW50IiwiYXQiLCJmbG9vciIsImNlaWwiLCJyIiwiQmlnSW50Iiwic2xpY2UiLCJtdWx0aXBseSIsIm4iLCJkZWMiLCJmcm9tQmlnSW50IiwiZnJvbU51bWJlciIsInVpZHgiLCJwYWRTdGFydCIsImNvbmNhdCIsIl9uJHRvU3RyaW5nJG1hdGNoIiwibWF0Y2giLCJNYXRoIiwicG93IiwiZnJvbVN0cmluZyIsIm1hdGNoUmVzdWx0IiwiX21hdGNoUmVzdWx0IiwiX3NsaWNlZFRvQXJyYXkiLCJfIiwiaW50cGFydCIsImRlY3BhcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core/src/utils/decimal.ts\n");

/***/ }),

/***/ "../core/src/utils/encoding.ts":
/*!*************************************!*\
  !*** ../core/src/utils/encoding.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromAscii\": () => (/* binding */ fromAscii),\n/* harmony export */   \"fromBase64\": () => (/* binding */ fromBase64),\n/* harmony export */   \"fromHex\": () => (/* binding */ fromHex),\n/* harmony export */   \"fromUtf8\": () => (/* binding */ fromUtf8),\n/* harmony export */   \"toAscii\": () => (/* binding */ toAscii),\n/* harmony export */   \"toBase64\": () => (/* binding */ toBase64),\n/* harmony export */   \"toHex\": () => (/* binding */ toHex),\n/* harmony export */   \"toUtf8\": () => (/* binding */ toUtf8)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction fromUtf8(str) {\n  return Uint8Array.from(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(str, \"utf-8\"));\n}\nfunction toUtf8(bytes) {\n  return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(bytes).toString(\"utf-8\");\n}\nfunction fromBase64(str) {\n  return Uint8Array.from(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(str, \"base64\"));\n}\nfunction toBase64(bytes) {\n  return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(bytes).toString(\"base64\");\n}\nfunction fromHex(str) {\n  return Uint8Array.from(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(str, \"hex\"));\n}\nfunction toHex(bytes) {\n  return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(bytes).toString(\"hex\");\n}\nfunction fromAscii(str) {\n  return Uint8Array.from(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(str, \"ascii\"));\n}\nfunction toAscii(bytes) {\n  return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(bytes).toString(\"ascii\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvdXRpbHMvZW5jb2RpbmcudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFnQztBQUV6QixTQUFTQyxRQUFRQSxDQUFDQyxHQUFXLEVBQWM7RUFDaEQsT0FBT0MsVUFBVSxDQUFDQyxJQUFJLENBQUNKLCtDQUFXLENBQUNFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNuRDtBQUVPLFNBQVNHLE1BQU1BLENBQUNDLEtBQWlCLEVBQVU7RUFDaEQsT0FBT04sK0NBQVcsQ0FBQ00sS0FBSyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxPQUFPLENBQUM7QUFDN0M7QUFFTyxTQUFTQyxVQUFVQSxDQUFDTixHQUFXLEVBQWM7RUFDbEQsT0FBT0MsVUFBVSxDQUFDQyxJQUFJLENBQUNKLCtDQUFXLENBQUNFLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNwRDtBQUVPLFNBQVNPLFFBQVFBLENBQUNILEtBQWlCLEVBQVU7RUFDbEQsT0FBT04sK0NBQVcsQ0FBQ00sS0FBSyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxRQUFRLENBQUM7QUFDOUM7QUFFTyxTQUFTRyxPQUFPQSxDQUFDUixHQUFXLEVBQWM7RUFDL0MsT0FBT0MsVUFBVSxDQUFDQyxJQUFJLENBQUNKLCtDQUFXLENBQUNFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNqRDtBQUVPLFNBQVNTLEtBQUtBLENBQUNMLEtBQWlCLEVBQVU7RUFDL0MsT0FBT04sK0NBQVcsQ0FBQ00sS0FBSyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxLQUFLLENBQUM7QUFDM0M7QUFFTyxTQUFTSyxTQUFTQSxDQUFDVixHQUFXLEVBQWM7RUFDakQsT0FBT0MsVUFBVSxDQUFDQyxJQUFJLENBQUNKLCtDQUFXLENBQUNFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNuRDtBQUVPLFNBQVNXLE9BQU9BLENBQUNQLEtBQWlCLEVBQVU7RUFDakQsT0FBT04sK0NBQVcsQ0FBQ00sS0FBSyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxPQUFPLENBQUM7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2NvcmUvc3JjL3V0aWxzL2VuY29kaW5nLnRzPzdjNmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZnJvbVV0Zjgoc3RyOiBzdHJpbmcpOiBVaW50OEFycmF5IHtcbiAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShCdWZmZXIuZnJvbShzdHIsIFwidXRmLThcIikpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9VdGY4KGJ5dGVzOiBVaW50OEFycmF5KTogc3RyaW5nIHtcbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJ5dGVzKS50b1N0cmluZyhcInV0Zi04XCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbUJhc2U2NChzdHI6IHN0cmluZyk6IFVpbnQ4QXJyYXkge1xuICByZXR1cm4gVWludDhBcnJheS5mcm9tKEJ1ZmZlci5mcm9tKHN0ciwgXCJiYXNlNjRcIikpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9CYXNlNjQoYnl0ZXM6IFVpbnQ4QXJyYXkpOiBzdHJpbmcge1xuICByZXR1cm4gQnVmZmVyLmZyb20oYnl0ZXMpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChzdHI6IHN0cmluZyk6IFVpbnQ4QXJyYXkge1xuICByZXR1cm4gVWludDhBcnJheS5mcm9tKEJ1ZmZlci5mcm9tKHN0ciwgXCJoZXhcIikpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoYnl0ZXM6IFVpbnQ4QXJyYXkpOiBzdHJpbmcge1xuICByZXR1cm4gQnVmZmVyLmZyb20oYnl0ZXMpLnRvU3RyaW5nKFwiaGV4XCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbUFzY2lpKHN0cjogc3RyaW5nKTogVWludDhBcnJheSB7XG4gIHJldHVybiBVaW50OEFycmF5LmZyb20oQnVmZmVyLmZyb20oc3RyLCBcImFzY2lpXCIpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvQXNjaWkoYnl0ZXM6IFVpbnQ4QXJyYXkpOiBzdHJpbmcge1xuICByZXR1cm4gQnVmZmVyLmZyb20oYnl0ZXMpLnRvU3RyaW5nKFwiYXNjaWlcIik7XG59XG4iXSwibmFtZXMiOlsiQnVmZmVyIiwiZnJvbVV0ZjgiLCJzdHIiLCJVaW50OEFycmF5IiwiZnJvbSIsInRvVXRmOCIsImJ5dGVzIiwidG9TdHJpbmciLCJmcm9tQmFzZTY0IiwidG9CYXNlNjQiLCJmcm9tSGV4IiwidG9IZXgiLCJmcm9tQXNjaWkiLCJ0b0FzY2lpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../core/src/utils/encoding.ts\n");

/***/ }),

/***/ "../core/src/utils/key.ts":
/*!********************************!*\
  !*** ../core/src/utils/key.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCompressedPubkey\": () => (/* binding */ getCompressedPubkey),\n/* harmony export */   \"toAddress\": () => (/* binding */ toAddress)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"@noble/hashes/ripemd160\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"@noble/hashes/sha256\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__, _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__]);\n([_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__, _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nfunction getCompressedPubkey(ec, keypair) {\n  var pubkey = Uint8Array.from(keypair.getPublic(\"array\"));\n  switch (pubkey.length) {\n    case 33:\n      return pubkey;\n    case 65:\n      return Uint8Array.from(ec.keyFromPublic(pubkey).getPublic(true, \"array\"));\n    default:\n      throw new Error(\"Invalid pubkey length\");\n  }\n}\nfunction toAddress(pubKey) {\n  if (pubKey.length !== 33) {\n    throw new Error(\"Invalid Secp256k1 pubkey length (compressed): \".concat(pubKey.length));\n  }\n  return (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_0__.ripemd160)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(pubKey));\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvdXRpbHMva2V5LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBb0Q7QUFDTjtBQUd2QyxTQUFTRSxtQkFBbUJBLENBQ2pDQyxFQUFlLEVBQ2ZDLE9BQTRCLEVBQ2hCO0VBQ1osSUFBTUMsTUFBTSxHQUFHQyxVQUFVLENBQUNDLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7RUFDMUQsUUFBUUgsTUFBTSxDQUFDSSxNQUFNO0lBQ25CLEtBQUssRUFBRTtNQUNMLE9BQU9KLE1BQU07SUFDZixLQUFLLEVBQUU7TUFDTCxPQUFPQyxVQUFVLENBQUNDLElBQUksQ0FBQ0osRUFBRSxDQUFDTyxhQUFhLENBQUNMLE1BQU0sQ0FBQyxDQUFDRyxTQUFTLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzNFO01BQ0UsTUFBTSxJQUFJRyxLQUFLLENBQUMsdUJBQXVCLENBQUM7RUFDNUM7QUFDRjtBQUVPLFNBQVNDLFNBQVNBLENBQUNDLE1BQWtCLEVBQUU7RUFDNUMsSUFBSUEsTUFBTSxDQUFDSixNQUFNLEtBQUssRUFBRSxFQUFFO0lBQ3hCLE1BQU0sSUFBSUUsS0FBSyxrREFBQUcsTUFBQSxDQUNvQ0QsTUFBTSxDQUFDSixNQUFNLENBQ2hFLENBQUM7RUFDSDtFQUNBLE9BQU9ULGtFQUFTLENBQUNDLDREQUFNLENBQUNZLE1BQU0sQ0FBQyxDQUFDO0FBQ2xDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2NvcmUvc3JjL3V0aWxzL2tleS50cz9iOTRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJpcGVtZDE2MCB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3JpcGVtZDE2MFwiO1xuaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCI7XG5pbXBvcnQgZWxsaXB0aWMgZnJvbSBcImVsbGlwdGljXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb21wcmVzc2VkUHVia2V5KFxuICBlYzogZWxsaXB0aWMuZWMsXG4gIGtleXBhaXI6IGVsbGlwdGljLmVjLktleVBhaXJcbik6IFVpbnQ4QXJyYXkge1xuICBjb25zdCBwdWJrZXkgPSBVaW50OEFycmF5LmZyb20oa2V5cGFpci5nZXRQdWJsaWMoXCJhcnJheVwiKSk7XG4gIHN3aXRjaCAocHVia2V5Lmxlbmd0aCkge1xuICAgIGNhc2UgMzM6XG4gICAgICByZXR1cm4gcHVia2V5O1xuICAgIGNhc2UgNjU6XG4gICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKGVjLmtleUZyb21QdWJsaWMocHVia2V5KS5nZXRQdWJsaWModHJ1ZSwgXCJhcnJheVwiKSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcHVia2V5IGxlbmd0aFwiKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9BZGRyZXNzKHB1YktleTogVWludDhBcnJheSkge1xuICBpZiAocHViS2V5Lmxlbmd0aCAhPT0gMzMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgSW52YWxpZCBTZWNwMjU2azEgcHVia2V5IGxlbmd0aCAoY29tcHJlc3NlZCk6ICR7cHViS2V5Lmxlbmd0aH1gXG4gICAgKTtcbiAgfVxuICByZXR1cm4gcmlwZW1kMTYwKHNoYTI1NihwdWJLZXkpKTtcbn1cbiJdLCJuYW1lcyI6WyJyaXBlbWQxNjAiLCJzaGEyNTYiLCJnZXRDb21wcmVzc2VkUHVia2V5IiwiZWMiLCJrZXlwYWlyIiwicHVia2V5IiwiVWludDhBcnJheSIsImZyb20iLCJnZXRQdWJsaWMiLCJsZW5ndGgiLCJrZXlGcm9tUHVibGljIiwiRXJyb3IiLCJ0b0FkZHJlc3MiLCJwdWJLZXkiLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core/src/utils/key.ts\n");

/***/ }),

/***/ "../core/src/utils/mnemonic.ts":
/*!*************************************!*\
  !*** ../core/src/utils/mnemonic.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSeedFromMnemonic\": () => (/* binding */ getSeedFromMnemonic)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"@noble/hashes/pbkdf2\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"@noble/hashes/sha512\");\n/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encoding */ \"../core/src/utils/encoding.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__, _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__]);\n([_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__, _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nfunction getSeedFromMnemonic(mnemonic, password) {\n  var mnemonicBytes = (0,_encoding__WEBPACK_IMPORTED_MODULE_2__.fromUtf8)(mnemonic.normalize(\"NFKD\"));\n  var salt = \"mnemonic\" + (password ? password.normalize(\"NFKD\") : \"\");\n  var seed = (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__.pbkdf2)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512, mnemonicBytes, salt, {\n    c: 2048,\n    dkLen: 64\n  });\n  return seed;\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvdXRpbHMvbW5lbW9uaWMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QztBQUNBO0FBRVI7QUFFL0IsU0FBU0csbUJBQW1CQSxDQUFDQyxRQUFnQixFQUFFQyxRQUFpQixFQUFFO0VBQ3ZFLElBQU1DLGFBQWEsR0FBR0osbURBQVEsQ0FBQ0UsUUFBUSxDQUFDRyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7RUFDMUQsSUFBTUMsSUFBSSxHQUFHLFVBQVUsSUFBSUgsUUFBUSxHQUFHQSxRQUFRLENBQUNFLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7RUFDdEUsSUFBTUUsSUFBSSxHQUFHVCw0REFBTSxDQUFDQyx3REFBTSxFQUFFSyxhQUFhLEVBQUVFLElBQUksRUFBRTtJQUFFRSxDQUFDLEVBQUUsSUFBSTtJQUFFQyxLQUFLLEVBQUU7RUFBRyxDQUFDLENBQUM7RUFDeEUsT0FBT0YsSUFBSTtBQUNiLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2NvcmUvc3JjL3V0aWxzL21uZW1vbmljLnRzPzI5MDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGJrZGYyIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvcGJrZGYyXCI7XG5pbXBvcnQgeyBzaGE1MTIgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zaGE1MTJcIjtcblxuaW1wb3J0IHsgZnJvbVV0ZjggfSBmcm9tIFwiLi9lbmNvZGluZ1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VlZEZyb21NbmVtb25pYyhtbmVtb25pYzogc3RyaW5nLCBwYXNzd29yZD86IHN0cmluZykge1xuICBjb25zdCBtbmVtb25pY0J5dGVzID0gZnJvbVV0ZjgobW5lbW9uaWMubm9ybWFsaXplKFwiTkZLRFwiKSk7XG4gIGNvbnN0IHNhbHQgPSBcIm1uZW1vbmljXCIgKyAocGFzc3dvcmQgPyBwYXNzd29yZC5ub3JtYWxpemUoXCJORktEXCIpIDogXCJcIik7XG4gIGNvbnN0IHNlZWQgPSBwYmtkZjIoc2hhNTEyLCBtbmVtb25pY0J5dGVzLCBzYWx0LCB7IGM6IDIwNDgsIGRrTGVuOiA2NCB9KTtcbiAgcmV0dXJuIHNlZWQ7XG59XG4iXSwibmFtZXMiOlsicGJrZGYyIiwic2hhNTEyIiwiZnJvbVV0ZjgiLCJnZXRTZWVkRnJvbU1uZW1vbmljIiwibW5lbW9uaWMiLCJwYXNzd29yZCIsIm1uZW1vbmljQnl0ZXMiLCJub3JtYWxpemUiLCJzYWx0Iiwic2VlZCIsImMiLCJka0xlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../core/src/utils/mnemonic.ts\n");

/***/ }),

/***/ "../core/src/utils/operation.ts":
/*!**************************************!*\
  !*** ../core/src/utils/operation.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multiply\": () => (/* binding */ multiply)\n/* harmony export */ });\nfunction getMultiplier(n) {\n  var _n$toString$match;\n  return (((_n$toString$match = n.toString().match(/\\.\\d*/)) === null || _n$toString$match === void 0 ? void 0 : _n$toString$match[0].length) || 1) - 1;\n}\nfunction divide10s(n, i) {\n  var nStr = n.toString();\n  var r = BigInt(nStr.slice(0, nStr.length - i));\n  return Number.parseInt(nStr.at(-i) || \"0\") < 5 ? r : r + 1n;\n}\nfunction multiply(a, b) {\n  if (typeof a === \"bigint\" && typeof b === \"bigint\") {\n    return a * b;\n  }\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return BigInt((a * b).toFixed());\n  }\n  if (typeof a === \"bigint\" && typeof b === \"number\") {\n    var m = getMultiplier(b);\n    return divide10s(a * BigInt(b * Math.pow(10, m)), m);\n  }\n  if (typeof a === \"number\" && typeof b === \"bigint\") {\n    var _m = getMultiplier(a);\n    return divide10s(BigInt(a * Math.pow(10, _m)) * b, _m);\n  }\n  throw new Error(\"Wrong argument type.\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvdXRpbHMvb3BlcmF0aW9uLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxTQUFTQSxhQUFhQSxDQUFDQyxDQUFTLEVBQVU7RUFBQSxJQUFBQyxpQkFBQTtFQUN4QyxPQUFPLENBQUMsRUFBQUEsaUJBQUEsR0FBQUQsQ0FBQyxDQUFDRSxRQUFRLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsT0FBTyxDQUFDLGNBQUFGLGlCQUFBLHVCQUEzQkEsaUJBQUEsQ0FBOEIsQ0FBQyxDQUFDLENBQUNHLE1BQU0sS0FBSSxDQUFDLElBQUksQ0FBQztBQUMzRDtBQUVBLFNBQVNDLFNBQVNBLENBQUNMLENBQVMsRUFBRU0sQ0FBUyxFQUFVO0VBQy9DLElBQU1DLElBQUksR0FBR1AsQ0FBQyxDQUFDRSxRQUFRLENBQUMsQ0FBQztFQUN6QixJQUFNTSxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0YsSUFBSSxDQUFDRyxLQUFLLENBQUMsQ0FBQyxFQUFFSCxJQUFJLENBQUNILE1BQU0sR0FBR0UsQ0FBQyxDQUFDLENBQUM7RUFDaEQsT0FBT0ssTUFBTSxDQUFDQyxRQUFRLENBQUNMLElBQUksQ0FBQ00sRUFBRSxDQUFDLENBQUNQLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBR0UsQ0FBQyxHQUFHQSxDQUFDLEdBQUcsRUFBRTtBQUM3RDtBQUVPLFNBQVNNLFFBQVFBLENBQUNDLENBQWtCLEVBQUVDLENBQWtCLEVBQVU7RUFDdkUsSUFBSSxPQUFPRCxDQUFDLEtBQUssUUFBUSxJQUFJLE9BQU9DLENBQUMsS0FBSyxRQUFRLEVBQUU7SUFDbEQsT0FBT0QsQ0FBQyxHQUFHQyxDQUFDO0VBQ2Q7RUFDQSxJQUFJLE9BQU9ELENBQUMsS0FBSyxRQUFRLElBQUksT0FBT0MsQ0FBQyxLQUFLLFFBQVEsRUFBRTtJQUNsRCxPQUFPUCxNQUFNLENBQUMsQ0FBQ00sQ0FBQyxHQUFHQyxDQUFDLEVBQUVDLE9BQU8sQ0FBQyxDQUFDLENBQUM7RUFDbEM7RUFDQSxJQUFJLE9BQU9GLENBQUMsS0FBSyxRQUFRLElBQUksT0FBT0MsQ0FBQyxLQUFLLFFBQVEsRUFBRTtJQUNsRCxJQUFNRSxDQUFDLEdBQUduQixhQUFhLENBQUNpQixDQUFDLENBQUM7SUFDMUIsT0FBT1gsU0FBUyxDQUFDVSxDQUFDLEdBQUdOLE1BQU0sQ0FBQ08sQ0FBQyxHQUFBRyxJQUFBLENBQUFDLEdBQUEsQ0FBRyxFQUFFLEVBQUlGLENBQUMsRUFBQyxFQUFFQSxDQUFDLENBQUM7RUFDOUM7RUFDQSxJQUFJLE9BQU9ILENBQUMsS0FBSyxRQUFRLElBQUksT0FBT0MsQ0FBQyxLQUFLLFFBQVEsRUFBRTtJQUNsRCxJQUFNRSxFQUFDLEdBQUduQixhQUFhLENBQUNnQixDQUFDLENBQUM7SUFDMUIsT0FBT1YsU0FBUyxDQUFDSSxNQUFNLENBQUNNLENBQUMsR0FBQUksSUFBQSxDQUFBQyxHQUFBLENBQUcsRUFBRSxFQUFJRixFQUFDLEVBQUMsR0FBR0YsQ0FBQyxFQUFFRSxFQUFDLENBQUM7RUFDOUM7RUFDQSxNQUFNLElBQUlHLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzaWduL2V4YW1wbGUvLi4vY29yZS9zcmMvdXRpbHMvb3BlcmF0aW9uLnRzPzU3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0TXVsdGlwbGllcihuOiBudW1iZXIpOiBudW1iZXIge1xuICByZXR1cm4gKG4udG9TdHJpbmcoKS5tYXRjaCgvXFwuXFxkKi8pPy5bMF0ubGVuZ3RoIHx8IDEpIC0gMTtcbn1cblxuZnVuY3Rpb24gZGl2aWRlMTBzKG46IGJpZ2ludCwgaTogbnVtYmVyKTogYmlnaW50IHtcbiAgY29uc3QgblN0ciA9IG4udG9TdHJpbmcoKTtcbiAgY29uc3QgciA9IEJpZ0ludChuU3RyLnNsaWNlKDAsIG5TdHIubGVuZ3RoIC0gaSkpO1xuICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KG5TdHIuYXQoLWkpIHx8IFwiMFwiKSA8IDUgPyByIDogciArIDFuO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbXVsdGlwbHkoYTogYmlnaW50IHwgbnVtYmVyLCBiOiBiaWdpbnQgfCBudW1iZXIpOiBiaWdpbnQge1xuICBpZiAodHlwZW9mIGEgPT09IFwiYmlnaW50XCIgJiYgdHlwZW9mIGIgPT09IFwiYmlnaW50XCIpIHtcbiAgICByZXR1cm4gYSAqIGI7XG4gIH1cbiAgaWYgKHR5cGVvZiBhID09PSBcIm51bWJlclwiICYmIHR5cGVvZiBiID09PSBcIm51bWJlclwiKSB7XG4gICAgcmV0dXJuIEJpZ0ludCgoYSAqIGIpLnRvRml4ZWQoKSk7XG4gIH1cbiAgaWYgKHR5cGVvZiBhID09PSBcImJpZ2ludFwiICYmIHR5cGVvZiBiID09PSBcIm51bWJlclwiKSB7XG4gICAgY29uc3QgbSA9IGdldE11bHRpcGxpZXIoYik7XG4gICAgcmV0dXJuIGRpdmlkZTEwcyhhICogQmlnSW50KGIgKiAxMCAqKiBtKSwgbSk7XG4gIH1cbiAgaWYgKHR5cGVvZiBhID09PSBcIm51bWJlclwiICYmIHR5cGVvZiBiID09PSBcImJpZ2ludFwiKSB7XG4gICAgY29uc3QgbSA9IGdldE11bHRpcGxpZXIoYSk7XG4gICAgcmV0dXJuIGRpdmlkZTEwcyhCaWdJbnQoYSAqIDEwICoqIG0pICogYiwgbSk7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKFwiV3JvbmcgYXJndW1lbnQgdHlwZS5cIik7XG59XG4iXSwibmFtZXMiOlsiZ2V0TXVsdGlwbGllciIsIm4iLCJfbiR0b1N0cmluZyRtYXRjaCIsInRvU3RyaW5nIiwibWF0Y2giLCJsZW5ndGgiLCJkaXZpZGUxMHMiLCJpIiwiblN0ciIsInIiLCJCaWdJbnQiLCJzbGljZSIsIk51bWJlciIsInBhcnNlSW50IiwiYXQiLCJtdWx0aXBseSIsImEiLCJiIiwidG9GaXhlZCIsIm0iLCJNYXRoIiwicG93IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../core/src/utils/operation.ts\n");

/***/ }),

/***/ "../core/src/utils/signature.ts":
/*!**************************************!*\
  !*** ../core/src/utils/signature.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toSigObj\": () => (/* binding */ toSigObj),\n/* harmony export */   \"toSignature\": () => (/* binding */ toSignature)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction toFixLength(bytes, length) {\n  if (length === undefined) {\n    return bytes;\n  } else {\n    var paddingLength = length - bytes.length;\n    if (paddingLength < 0) {\n      throw new Error(\"Length too small to hold parameter s\");\n    }\n    var padding = new Uint8Array(paddingLength);\n    return new Uint8Array([].concat(_toConsumableArray(padding), _toConsumableArray(bytes)));\n  }\n}\nfunction toSigObj(_ref) {\n  var r = _ref.r,\n    s = _ref.s,\n    recoveryParam = _ref.recoveryParam;\n  if (typeof recoveryParam !== \"number\") {\n    throw new Error(\"Recovery param missing\");\n  }\n  if (!Number.isInteger(recoveryParam)) {\n    throw new Error(\"The recovery parameter must be an integer.\");\n  }\n  if (recoveryParam < 0 || recoveryParam > 4) {\n    throw new Error(\"The recovery parameter must be one of 0, 1, 2, 3.\");\n  }\n  var _map = [r, s].map(function (bn) {\n      var array = Uint8Array.from(bn.toArray());\n      if (array.length > 32 || array.length === 0 || array[0] === 0x00) {\n        throw new Error(\"Unsigned integer r/s must be encoded as unpadded big endian.\");\n      }\n      return toFixLength(array, 32);\n    }),\n    _map2 = _slicedToArray(_map, 2),\n    rbytes = _map2[0],\n    sbytes = _map2[1];\n  return {\n    r: rbytes,\n    s: sbytes,\n    recoveryId: BigInt(recoveryParam)\n  };\n}\nfunction toSignature(sigObj) {\n  return new Uint8Array([].concat(_toConsumableArray(sigObj.r), _toConsumableArray(sigObj.s)));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvdXRpbHMvc2lnbmF0dXJlLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUlBLFNBQVNBLFdBQVdBLENBQUNDLEtBQWlCLEVBQUVDLE1BQWUsRUFBYztFQUNuRSxJQUFJQSxNQUFNLEtBQUtDLFNBQVMsRUFBRTtJQUN4QixPQUFPRixLQUFLO0VBQ2QsQ0FBQyxNQUFNO0lBQ0wsSUFBTUcsYUFBYSxHQUFHRixNQUFNLEdBQUdELEtBQUssQ0FBQ0MsTUFBTTtJQUMzQyxJQUFJRSxhQUFhLEdBQUcsQ0FBQyxFQUFFO01BQ3JCLE1BQU0sSUFBSUMsS0FBSyxDQUFDLHNDQUFzQyxDQUFDO0lBQ3pEO0lBQ0EsSUFBTUMsT0FBTyxHQUFHLElBQUlDLFVBQVUsQ0FBQ0gsYUFBYSxDQUFDO0lBQzdDLE9BQU8sSUFBSUcsVUFBVSxJQUFBQyxNQUFBLENBQUFDLGtCQUFBLENBQUtILE9BQU8sR0FBQUcsa0JBQUEsQ0FBS1IsS0FBSyxFQUFDLENBQUM7RUFDL0M7QUFDRjtBQUVPLFNBQVNTLFFBQVFBLENBQUFDLElBQUEsRUFJVTtFQUFBLElBSGhDQyxDQUFDLEdBQUFELElBQUEsQ0FBREMsQ0FBQztJQUNEQyxDQUFDLEdBQUFGLElBQUEsQ0FBREUsQ0FBQztJQUNEQyxhQUFhLEdBQUFILElBQUEsQ0FBYkcsYUFBYTtFQUViLElBQUksT0FBT0EsYUFBYSxLQUFLLFFBQVEsRUFBRTtJQUNyQyxNQUFNLElBQUlULEtBQUssQ0FBQyx3QkFBd0IsQ0FBQztFQUMzQztFQUNBLElBQUksQ0FBQ1UsTUFBTSxDQUFDQyxTQUFTLENBQUNGLGFBQWEsQ0FBQyxFQUFFO0lBQ3BDLE1BQU0sSUFBSVQsS0FBSyxDQUFDLDRDQUE0QyxDQUFDO0VBQy9EO0VBQ0EsSUFBSVMsYUFBYSxHQUFHLENBQUMsSUFBSUEsYUFBYSxHQUFHLENBQUMsRUFBRTtJQUMxQyxNQUFNLElBQUlULEtBQUssQ0FBQyxtREFBbUQsQ0FBQztFQUN0RTtFQUNBLElBQUFZLElBQUEsR0FBeUIsQ0FBQ0wsQ0FBQyxFQUFFQyxDQUFDLENBQUMsQ0FBQ0ssR0FBRyxDQUFDLFVBQUNDLEVBQUUsRUFBSztNQUMxQyxJQUFNQyxLQUFLLEdBQUdiLFVBQVUsQ0FBQ2MsSUFBSSxDQUFDRixFQUFFLENBQUNHLE9BQU8sQ0FBQyxDQUFDLENBQUM7TUFDM0MsSUFBSUYsS0FBSyxDQUFDbEIsTUFBTSxHQUFHLEVBQUUsSUFBSWtCLEtBQUssQ0FBQ2xCLE1BQU0sS0FBSyxDQUFDLElBQUlrQixLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ2hFLE1BQU0sSUFBSWYsS0FBSyxDQUNiLDhEQUNGLENBQUM7TUFDSDtNQUNBLE9BQU9MLFdBQVcsQ0FBQ29CLEtBQUssRUFBRSxFQUFFLENBQUM7SUFDL0IsQ0FBQyxDQUFDO0lBQUFHLEtBQUEsR0FBQUMsY0FBQSxDQUFBUCxJQUFBO0lBUktRLE1BQU0sR0FBQUYsS0FBQTtJQUFFRyxNQUFNLEdBQUFILEtBQUE7RUFTckIsT0FBTztJQUNMWCxDQUFDLEVBQUVhLE1BQU07SUFDVFosQ0FBQyxFQUFFYSxNQUFNO0lBQ1RDLFVBQVUsRUFBRUMsTUFBTSxDQUFDZCxhQUFhO0VBQ2xDLENBQUM7QUFDSDtBQUVPLFNBQVNlLFdBQVdBLENBQUNDLE1BQWMsRUFBYztFQUN0RCxPQUFPLElBQUl2QixVQUFVLElBQUFDLE1BQUEsQ0FBQUMsa0JBQUEsQ0FBS3FCLE1BQU0sQ0FBQ2xCLENBQUMsR0FBQUgsa0JBQUEsQ0FBS3FCLE1BQU0sQ0FBQ2pCLENBQUMsRUFBQyxDQUFDO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3JlL3NyYy91dGlscy9zaWduYXR1cmUudHM/OTVmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZWxsaXB0aWMgZnJvbSBcImVsbGlwdGljXCI7XG5cbmltcG9ydCB7IFNpZ09iaiB9IGZyb20gXCIuLi90eXBlc1wiO1xuXG5mdW5jdGlvbiB0b0ZpeExlbmd0aChieXRlczogVWludDhBcnJheSwgbGVuZ3RoPzogbnVtYmVyKTogVWludDhBcnJheSB7XG4gIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBieXRlcztcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBwYWRkaW5nTGVuZ3RoID0gbGVuZ3RoIC0gYnl0ZXMubGVuZ3RoO1xuICAgIGlmIChwYWRkaW5nTGVuZ3RoIDwgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTGVuZ3RoIHRvbyBzbWFsbCB0byBob2xkIHBhcmFtZXRlciBzXCIpO1xuICAgIH1cbiAgICBjb25zdCBwYWRkaW5nID0gbmV3IFVpbnQ4QXJyYXkocGFkZGluZ0xlbmd0aCk7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsuLi5wYWRkaW5nLCAuLi5ieXRlc10pO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b1NpZ09iaih7XG4gIHIsXG4gIHMsXG4gIHJlY292ZXJ5UGFyYW0sXG59OiBlbGxpcHRpYy5lYy5TaWduYXR1cmUpOiBTaWdPYmoge1xuICBpZiAodHlwZW9mIHJlY292ZXJ5UGFyYW0gIT09IFwibnVtYmVyXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWNvdmVyeSBwYXJhbSBtaXNzaW5nXCIpO1xuICB9XG4gIGlmICghTnVtYmVyLmlzSW50ZWdlcihyZWNvdmVyeVBhcmFtKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSByZWNvdmVyeSBwYXJhbWV0ZXIgbXVzdCBiZSBhbiBpbnRlZ2VyLlwiKTtcbiAgfVxuICBpZiAocmVjb3ZlcnlQYXJhbSA8IDAgfHwgcmVjb3ZlcnlQYXJhbSA+IDQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgcmVjb3ZlcnkgcGFyYW1ldGVyIG11c3QgYmUgb25lIG9mIDAsIDEsIDIsIDMuXCIpO1xuICB9XG4gIGNvbnN0IFtyYnl0ZXMsIHNieXRlc10gPSBbciwgc10ubWFwKChibikgPT4ge1xuICAgIGNvbnN0IGFycmF5ID0gVWludDhBcnJheS5mcm9tKGJuLnRvQXJyYXkoKSk7XG4gICAgaWYgKGFycmF5Lmxlbmd0aCA+IDMyIHx8IGFycmF5Lmxlbmd0aCA9PT0gMCB8fCBhcnJheVswXSA9PT0gMHgwMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlVuc2lnbmVkIGludGVnZXIgci9zIG11c3QgYmUgZW5jb2RlZCBhcyB1bnBhZGRlZCBiaWcgZW5kaWFuLlwiXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gdG9GaXhMZW5ndGgoYXJyYXksIDMyKTtcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgcjogcmJ5dGVzLFxuICAgIHM6IHNieXRlcyxcbiAgICByZWNvdmVyeUlkOiBCaWdJbnQocmVjb3ZlcnlQYXJhbSksXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b1NpZ25hdHVyZShzaWdPYmo6IFNpZ09iaik6IFVpbnQ4QXJyYXkge1xuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWy4uLnNpZ09iai5yLCAuLi5zaWdPYmouc10pO1xufVxuIl0sIm5hbWVzIjpbInRvRml4TGVuZ3RoIiwiYnl0ZXMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJwYWRkaW5nTGVuZ3RoIiwiRXJyb3IiLCJwYWRkaW5nIiwiVWludDhBcnJheSIsImNvbmNhdCIsIl90b0NvbnN1bWFibGVBcnJheSIsInRvU2lnT2JqIiwiX3JlZiIsInIiLCJzIiwicmVjb3ZlcnlQYXJhbSIsIk51bWJlciIsImlzSW50ZWdlciIsIl9tYXAiLCJtYXAiLCJibiIsImFycmF5IiwiZnJvbSIsInRvQXJyYXkiLCJfbWFwMiIsIl9zbGljZWRUb0FycmF5IiwicmJ5dGVzIiwic2J5dGVzIiwicmVjb3ZlcnlJZCIsIkJpZ0ludCIsInRvU2lnbmF0dXJlIiwic2lnT2JqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../core/src/utils/signature.ts\n");

/***/ }),

/***/ "../core/src/utils/slip10.ts":
/*!***********************************!*\
  !*** ../core/src/utils/slip10.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Slip10\": () => (/* binding */ Slip10),\n/* harmony export */   \"Slip10Curve\": () => (/* binding */ Slip10Curve),\n/* harmony export */   \"Slip10RawIndex\": () => (/* binding */ Slip10RawIndex),\n/* harmony export */   \"slip10CurveFromString\": () => (/* binding */ slip10CurveFromString),\n/* harmony export */   \"stringToPath\": () => (/* binding */ stringToPath)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/hmac */ \"@noble/hashes/hmac\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"@noble/hashes/sha512\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bn.js */ \"bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! elliptic */ \"elliptic\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(elliptic__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding */ \"../core/src/utils/encoding.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__, _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__]);\n([_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__, _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n/**\n * Raw values must match the curve string in SLIP-0010 master key generation\n *\n * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md#master-key-generation\n */\nvar Slip10Curve = /*#__PURE__*/function (Slip10Curve) {\n  Slip10Curve[\"Secp256k1\"] = \"Bitcoin seed\";\n  Slip10Curve[\"Ed25519\"] = \"ed25519 seed\";\n  return Slip10Curve;\n}({});\n\n/**\n * Reverse mapping of Slip10Curve\n */\nfunction slip10CurveFromString(curveString) {\n  switch (curveString) {\n    case Slip10Curve.Ed25519:\n      return Slip10Curve.Ed25519;\n    case Slip10Curve.Secp256k1:\n      return Slip10Curve.Secp256k1;\n    default:\n      throw new Error(\"Unknown curve string: '\".concat(curveString, \"'\"));\n  }\n}\nvar Slip10RawIndex = /*#__PURE__*/function () {\n  function Slip10RawIndex(input) {\n    _classCallCheck(this, Slip10RawIndex);\n    _defineProperty(this, \"data\", void 0);\n    if (Number.isNaN(input)) {\n      throw new Error(\"Input is not a number\");\n    }\n    if (!Number.isInteger(input)) {\n      throw new Error(\"Input is not an integer\");\n    }\n    if (input < 0 || input > 4294967295) {\n      throw new Error(\"Input not in uint32 range: \" + input.toString());\n    }\n    this.data = input;\n  }\n  _createClass(Slip10RawIndex, [{\n    key: \"isHardened\",\n    value: function isHardened() {\n      return this.data >= Math.pow(2, 31);\n    }\n  }, {\n    key: \"toBytesBigEndian\",\n    value: function toBytesBigEndian() {\n      return (0,_encoding__WEBPACK_IMPORTED_MODULE_4__.fromHex)(this.data.toString(16).padStart(8, \"0\"));\n    }\n  }], [{\n    key: \"hardened\",\n    value: function hardened(hardenedIndex) {\n      return new Slip10RawIndex(hardenedIndex + Math.pow(2, 31));\n    }\n  }, {\n    key: \"normal\",\n    value: function normal(normalIndex) {\n      return new Slip10RawIndex(normalIndex);\n    }\n  }]);\n  return Slip10RawIndex;\n}();\n\n/**\n * An array of raw SLIP10 indices.\n *\n * This can be constructed via string parsing:\n *\n * ```ts\n *\n * const path = stringToPath(\"m/0'/1/2'/2/1000000000\");\n * ```\n *\n * or manually:\n *\n * ```ts\n *\n * // m/0'/1/2'/2/1000000000\n * const path: HdPath = [\n *   Slip10RawIndex.hardened(0),\n *   Slip10RawIndex.normal(1),\n *   Slip10RawIndex.hardened(2),\n *   Slip10RawIndex.normal(2),\n *   Slip10RawIndex.normal(1000000000),\n * ];\n * ```\n */\n\nvar secp256k1 = new (elliptic__WEBPACK_IMPORTED_MODULE_3___default().ec)(\"secp256k1\");\n\n// Universal private key derivation accoring to\n// https://github.com/satoshilabs/slips/blob/master/slip-0010.md\nvar Slip10 = /*#__PURE__*/function () {\n  function Slip10() {\n    _classCallCheck(this, Slip10);\n  }\n  _createClass(Slip10, null, [{\n    key: \"derivePath\",\n    value: function derivePath(curve, seed, path) {\n      var result = this.master(curve, seed);\n      var _iterator = _createForOfIteratorHelper(path),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var rawIndex = _step.value;\n          result = this.child(curve, result.privkey, result.chainCode, rawIndex);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"master\",\n    value: function master(curve, seed) {\n      var i = (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512, (0,_encoding__WEBPACK_IMPORTED_MODULE_4__.fromAscii)(curve), seed);\n      var il = i.slice(0, 32);\n      var ir = i.slice(32, 64);\n      if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {\n        return this.master(curve, i);\n      }\n      return {\n        chainCode: ir,\n        privkey: il\n      };\n    }\n  }, {\n    key: \"child\",\n    value: function child(curve, parentPrivkey, parentChainCode, rawIndex) {\n      var i;\n      if (rawIndex.isHardened()) {\n        var payload = new Uint8Array([0x00].concat(_toConsumableArray(parentPrivkey), _toConsumableArray(rawIndex.toBytesBigEndian())));\n        i = (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512, parentChainCode, payload);\n      } else {\n        if (curve === Slip10Curve.Ed25519) {\n          throw new Error(\"Normal keys are not allowed with ed25519\");\n        } else {\n          // Step 1 of https://github.com/satoshilabs/slips/blob/master/slip-0010.md#private-parent-key--private-child-key\n          // Calculate I = HMAC-SHA512(Key = c_par, Data = ser_P(point(k_par)) || ser_32(i)).\n          // where the functions point() and ser_p() are defined in BIP-0032\n          var data = new Uint8Array([].concat(_toConsumableArray(Slip10.serializedPoint(curve, new (bn_js__WEBPACK_IMPORTED_MODULE_2___default())(parentPrivkey))), _toConsumableArray(rawIndex.toBytesBigEndian())));\n          i = (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512, parentChainCode, data);\n        }\n      }\n      return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i);\n    }\n\n    /**\n     * Implementation of ser_P(point(k_par)) from BIP-0032\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n     */\n  }, {\n    key: \"serializedPoint\",\n    value: function serializedPoint(curve, p) {\n      switch (curve) {\n        case Slip10Curve.Secp256k1:\n          return (0,_encoding__WEBPACK_IMPORTED_MODULE_4__.fromHex)(secp256k1.g.mul(p).encodeCompressed(\"hex\"));\n        default:\n          throw new Error(\"curve not supported\");\n      }\n    }\n  }, {\n    key: \"childImpl\",\n    value: function childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i) {\n      // step 2 (of the Private parent key → private child key algorithm)\n\n      var il = i.slice(0, 32);\n      var ir = i.slice(32, 64);\n\n      // step 3\n      var returnChainCode = ir;\n\n      // step 4\n      if (curve === Slip10Curve.Ed25519) {\n        return {\n          chainCode: returnChainCode,\n          privkey: il\n        };\n      }\n\n      // step 5\n      var n = this.n(curve);\n      var returnChildKeyAsNumber = new (bn_js__WEBPACK_IMPORTED_MODULE_2___default())(il).add(new (bn_js__WEBPACK_IMPORTED_MODULE_2___default())(parentPrivkey)).mod(n);\n      var returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray(\"be\", 32));\n\n      // step 6\n      if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {\n        var newI = (0,_noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_0__.hmac)(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_1__.sha512, parentChainCode, new Uint8Array([0x01].concat(_toConsumableArray(ir), _toConsumableArray(rawIndex.toBytesBigEndian()))));\n        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);\n      }\n\n      // step 7\n      return {\n        chainCode: returnChainCode,\n        privkey: returnChildKey\n      };\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero(privkey) {\n      return privkey.every(function (_byte) {\n        return _byte === 0;\n      });\n    }\n  }, {\n    key: \"isGteN\",\n    value: function isGteN(curve, privkey) {\n      var keyAsNumber = new (bn_js__WEBPACK_IMPORTED_MODULE_2___default())(privkey);\n      return keyAsNumber.gte(this.n(curve));\n    }\n  }, {\n    key: \"n\",\n    value: function n(curve) {\n      switch (curve) {\n        case Slip10Curve.Secp256k1:\n          return new (bn_js__WEBPACK_IMPORTED_MODULE_2___default())(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16);\n        default:\n          throw new Error(\"curve not supported\");\n      }\n    }\n  }]);\n  return Slip10;\n}();\nfunction stringToPath(input) {\n  if (!input.startsWith(\"m\")) throw new Error(\"Path string must start with 'm'\");\n  var rest = input.slice(1);\n  var out = new Array();\n  while (rest) {\n    var match = rest.match(/^\\/([0-9]+)('?)/);\n    if (!match) throw new Error(\"Syntax error while reading path component\");\n    var _match = _slicedToArray(match, 3),\n      fullMatch = _match[0],\n      numberString = _match[1],\n      apostrophe = _match[2];\n    var value = Number.parseInt(numberString);\n    if (value >= Math.pow(2, 31)) throw new Error(\"Component value too high. Must not exceed 2**31-1.\");\n    if (apostrophe) out.push(Slip10RawIndex.hardened(value));else out.push(Slip10RawIndex.normal(value));\n    rest = rest.slice(fullMatch.length);\n  }\n  return out;\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29yZS9zcmMvdXRpbHMvc2xpcDEwLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQztBQUNJO0FBQ3ZCO0FBQ1M7QUFFZ0I7QUFPaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQUtNLFdBQVcsMEJBQVhBLFdBQVc7RUFBWEEsV0FBVztFQUFYQSxXQUFXO0VBQUEsT0FBWEEsV0FBVztBQUFBOztBQUt2QjtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxxQkFBcUJBLENBQUNDLFdBQW1CLEVBQWU7RUFDdEUsUUFBUUEsV0FBVztJQUNqQixLQUFLRixXQUFXLENBQUNHLE9BQU87TUFDdEIsT0FBT0gsV0FBVyxDQUFDRyxPQUFPO0lBQzVCLEtBQUtILFdBQVcsQ0FBQ0ksU0FBUztNQUN4QixPQUFPSixXQUFXLENBQUNJLFNBQVM7SUFDOUI7TUFDRSxNQUFNLElBQUlDLEtBQUssMkJBQUFDLE1BQUEsQ0FBMkJKLFdBQVcsTUFBRyxDQUFDO0VBQzdEO0FBQ0Y7QUFFTyxJQUFNSyxjQUFjO0VBR3pCLFNBQUFBLGVBQVlDLEtBQWEsRUFBRTtJQUFBQyxlQUFBLE9BQUFGLGNBQUE7SUFBQUcsZUFBQTtJQUN6QixJQUFJQyxNQUFNLENBQUNDLEtBQUssQ0FBQ0osS0FBSyxDQUFDLEVBQUU7TUFDdkIsTUFBTSxJQUFJSCxLQUFLLENBQUMsdUJBQXVCLENBQUM7SUFDMUM7SUFFQSxJQUFJLENBQUNNLE1BQU0sQ0FBQ0UsU0FBUyxDQUFDTCxLQUFLLENBQUMsRUFBRTtNQUM1QixNQUFNLElBQUlILEtBQUssQ0FBQyx5QkFBeUIsQ0FBQztJQUM1QztJQUVBLElBQUlHLEtBQUssR0FBRyxDQUFDLElBQUlBLEtBQUssR0FBRyxVQUFVLEVBQUU7TUFDbkMsTUFBTSxJQUFJSCxLQUFLLENBQUMsNkJBQTZCLEdBQUdHLEtBQUssQ0FBQ00sUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNuRTtJQUNBLElBQUksQ0FBQ0MsSUFBSSxHQUFHUCxLQUFLO0VBQ25CO0VBQUNRLFlBQUEsQ0FBQVQsY0FBQTtJQUFBVSxHQUFBO0lBQUFDLEtBQUEsRUFVRCxTQUFBQyxXQUFBLEVBQXNCO01BQ3BCLE9BQU8sSUFBSSxDQUFDSixJQUFJLElBQUFLLElBQUEsQ0FBQUMsR0FBQSxDQUFJLENBQUMsRUFBSSxFQUFFO0lBQzdCO0VBQUM7SUFBQUosR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQUksaUJBQUEsRUFBK0I7TUFDN0IsT0FBT3ZCLGtEQUFPLENBQUMsSUFBSSxDQUFDZ0IsSUFBSSxDQUFDRCxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUNTLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDekQ7RUFBQztJQUFBTixHQUFBO0lBQUFDLEtBQUEsRUFkRCxTQUFBTSxTQUFnQkMsYUFBcUIsRUFBa0I7TUFDckQsT0FBTyxJQUFJbEIsY0FBYyxDQUFDa0IsYUFBYSxHQUFBTCxJQUFBLENBQUFDLEdBQUEsQ0FBRyxDQUFDLEVBQUksRUFBRSxFQUFDO0lBQ3BEO0VBQUM7SUFBQUosR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQVEsT0FBY0MsV0FBbUIsRUFBa0I7TUFDakQsT0FBTyxJQUFJcEIsY0FBYyxDQUFDb0IsV0FBVyxDQUFDO0lBQ3hDO0VBQUM7RUFBQSxPQUFBcEIsY0FBQTtBQUFBOztBQVdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxJQUFNcUIsU0FBUyxHQUFHLElBQUkvQixvREFBVyxDQUFDLFdBQVcsQ0FBQzs7QUFFOUM7QUFDQTtBQUNPLElBQU1pQyxNQUFNO0VBQUEsU0FBQUEsT0FBQTtJQUFBckIsZUFBQSxPQUFBcUIsTUFBQTtFQUFBO0VBQUFkLFlBQUEsQ0FBQWMsTUFBQTtJQUFBYixHQUFBO0lBQUFDLEtBQUEsRUFDakIsU0FBQWEsV0FDRUMsS0FBa0IsRUFDbEJDLElBQWdCLEVBQ2hCQyxJQUFZLEVBQ0U7TUFDZCxJQUFJQyxNQUFNLEdBQUcsSUFBSSxDQUFDQyxNQUFNLENBQUNKLEtBQUssRUFBRUMsSUFBSSxDQUFDO01BQUMsSUFBQUksU0FBQSxHQUFBQywwQkFBQSxDQUNmSixJQUFJO1FBQUFLLEtBQUE7TUFBQTtRQUEzQixLQUFBRixTQUFBLENBQUFHLENBQUEsTUFBQUQsS0FBQSxHQUFBRixTQUFBLENBQUFJLENBQUEsSUFBQUMsSUFBQSxHQUE2QjtVQUFBLElBQWxCQyxRQUFRLEdBQUFKLEtBQUEsQ0FBQXJCLEtBQUE7VUFDakJpQixNQUFNLEdBQUcsSUFBSSxDQUFDUyxLQUFLLENBQUNaLEtBQUssRUFBRUcsTUFBTSxDQUFDVSxPQUFPLEVBQUVWLE1BQU0sQ0FBQ1csU0FBUyxFQUFFSCxRQUFRLENBQUM7UUFDeEU7TUFBQyxTQUFBSSxHQUFBO1FBQUFWLFNBQUEsQ0FBQVcsQ0FBQSxDQUFBRCxHQUFBO01BQUE7UUFBQVYsU0FBQSxDQUFBWSxDQUFBO01BQUE7TUFDRCxPQUFPZCxNQUFNO0lBQ2Y7RUFBQztJQUFBbEIsR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQWtCLE9BQXNCSixLQUFrQixFQUFFQyxJQUFnQixFQUFnQjtNQUN4RSxJQUFNaUIsQ0FBQyxHQUFHeEQsd0RBQUksQ0FBQ0Msd0RBQU0sRUFBRUcsb0RBQVMsQ0FBQ2tDLEtBQUssQ0FBQyxFQUFFQyxJQUFJLENBQUM7TUFDOUMsSUFBTWtCLEVBQUUsR0FBR0QsQ0FBQyxDQUFDRSxLQUFLLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztNQUN6QixJQUFNQyxFQUFFLEdBQUdILENBQUMsQ0FBQ0UsS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUM7TUFFMUIsSUFDRXBCLEtBQUssS0FBS2hDLFdBQVcsQ0FBQ0csT0FBTyxLQUM1QixJQUFJLENBQUNtRCxNQUFNLENBQUNILEVBQUUsQ0FBQyxJQUFJLElBQUksQ0FBQ0ksTUFBTSxDQUFDdkIsS0FBSyxFQUFFbUIsRUFBRSxDQUFDLENBQUMsRUFDM0M7UUFDQSxPQUFPLElBQUksQ0FBQ2YsTUFBTSxDQUFDSixLQUFLLEVBQUVrQixDQUFDLENBQUM7TUFDOUI7TUFFQSxPQUFPO1FBQ0xKLFNBQVMsRUFBRU8sRUFBRTtRQUNiUixPQUFPLEVBQUVNO01BQ1gsQ0FBQztJQUNIO0VBQUM7SUFBQWxDLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUEwQixNQUNFWixLQUFrQixFQUNsQndCLGFBQXlCLEVBQ3pCQyxlQUEyQixFQUMzQmQsUUFBd0IsRUFDVjtNQUNkLElBQUlPLENBQWE7TUFDakIsSUFBSVAsUUFBUSxDQUFDeEIsVUFBVSxDQUFDLENBQUMsRUFBRTtRQUN6QixJQUFNdUMsT0FBTyxHQUFHLElBQUlDLFVBQVUsRUFDNUIsSUFBSSxFQUFBckQsTUFBQSxDQUFBc0Qsa0JBQUEsQ0FDREosYUFBYSxHQUFBSSxrQkFBQSxDQUNiakIsUUFBUSxDQUFDckIsZ0JBQWdCLENBQUMsQ0FBQyxFQUMvQixDQUFDO1FBQ0Y0QixDQUFDLEdBQUd4RCx3REFBSSxDQUFDQyx3REFBTSxFQUFFOEQsZUFBZSxFQUFFQyxPQUFPLENBQUM7TUFDNUMsQ0FBQyxNQUFNO1FBQ0wsSUFBSTFCLEtBQUssS0FBS2hDLFdBQVcsQ0FBQ0csT0FBTyxFQUFFO1VBQ2pDLE1BQU0sSUFBSUUsS0FBSyxDQUFDLDBDQUEwQyxDQUFDO1FBQzdELENBQUMsTUFBTTtVQUNMO1VBQ0E7VUFDQTtVQUNBLElBQU1VLElBQUksR0FBRyxJQUFJNEMsVUFBVSxJQUFBckQsTUFBQSxDQUFBc0Qsa0JBQUEsQ0FDdEI5QixNQUFNLENBQUMrQixlQUFlLENBQUM3QixLQUFLLEVBQUUsSUFBSXBDLDhDQUFFLENBQUM0RCxhQUFhLENBQUMsQ0FBQyxHQUFBSSxrQkFBQSxDQUNwRGpCLFFBQVEsQ0FBQ3JCLGdCQUFnQixDQUFDLENBQUMsRUFDL0IsQ0FBQztVQUNGNEIsQ0FBQyxHQUFHeEQsd0RBQUksQ0FBQ0Msd0RBQU0sRUFBRThELGVBQWUsRUFBRTFDLElBQUksQ0FBQztRQUN6QztNQUNGO01BRUEsT0FBTyxJQUFJLENBQUMrQyxTQUFTLENBQUM5QixLQUFLLEVBQUV3QixhQUFhLEVBQUVDLGVBQWUsRUFBRWQsUUFBUSxFQUFFTyxDQUFDLENBQUM7SUFDM0U7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUpFO0lBQUFqQyxHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBMkMsZ0JBQStCN0IsS0FBa0IsRUFBRStCLENBQUssRUFBYztNQUNwRSxRQUFRL0IsS0FBSztRQUNYLEtBQUtoQyxXQUFXLENBQUNJLFNBQVM7VUFDeEIsT0FBT0wsa0RBQU8sQ0FBQzZCLFNBQVMsQ0FBQ29DLENBQUMsQ0FBQ0MsR0FBRyxDQUFDRixDQUFDLENBQUMsQ0FBQ0csZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUQ7VUFDRSxNQUFNLElBQUk3RCxLQUFLLENBQUMscUJBQXFCLENBQUM7TUFDMUM7SUFDRjtFQUFDO0lBQUFZLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUE0QyxVQUNFOUIsS0FBa0IsRUFDbEJ3QixhQUF5QixFQUN6QkMsZUFBMkIsRUFDM0JkLFFBQXdCLEVBQ3hCTyxDQUFhLEVBQ0M7TUFDZDs7TUFFQSxJQUFNQyxFQUFFLEdBQUdELENBQUMsQ0FBQ0UsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7TUFDekIsSUFBTUMsRUFBRSxHQUFHSCxDQUFDLENBQUNFLEtBQUssQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDOztNQUUxQjtNQUNBLElBQU1lLGVBQWUsR0FBR2QsRUFBRTs7TUFFMUI7TUFDQSxJQUFJckIsS0FBSyxLQUFLaEMsV0FBVyxDQUFDRyxPQUFPLEVBQUU7UUFDakMsT0FBTztVQUNMMkMsU0FBUyxFQUFFcUIsZUFBZTtVQUMxQnRCLE9BQU8sRUFBRU07UUFDWCxDQUFDO01BQ0g7O01BRUE7TUFDQSxJQUFNVixDQUFDLEdBQUcsSUFBSSxDQUFDQSxDQUFDLENBQUNULEtBQUssQ0FBQztNQUN2QixJQUFNb0Msc0JBQXNCLEdBQUcsSUFBSXhFLDhDQUFFLENBQUN1RCxFQUFFLENBQUMsQ0FBQ2tCLEdBQUcsQ0FBQyxJQUFJekUsOENBQUUsQ0FBQzRELGFBQWEsQ0FBQyxDQUFDLENBQUNjLEdBQUcsQ0FBQzdCLENBQUMsQ0FBQztNQUMzRSxJQUFNOEIsY0FBYyxHQUFHWixVQUFVLENBQUNhLElBQUksQ0FDcENKLHNCQUFzQixDQUFDSyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FDekMsQ0FBQzs7TUFFRDtNQUNBLElBQUksSUFBSSxDQUFDbEIsTUFBTSxDQUFDdkIsS0FBSyxFQUFFbUIsRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDRyxNQUFNLENBQUNpQixjQUFjLENBQUMsRUFBRTtRQUN6RCxJQUFNRyxJQUFJLEdBQUdoRix3REFBSSxDQUNmQyx3REFBTSxFQUNOOEQsZUFBZSxFQUNmLElBQUlFLFVBQVUsRUFBRSxJQUFJLEVBQUFyRCxNQUFBLENBQUFzRCxrQkFBQSxDQUFLUCxFQUFFLEdBQUFPLGtCQUFBLENBQUtqQixRQUFRLENBQUNyQixnQkFBZ0IsQ0FBQyxDQUFDLEVBQUMsQ0FDOUQsQ0FBQztRQUNELE9BQU8sSUFBSSxDQUFDd0MsU0FBUyxDQUNuQjlCLEtBQUssRUFDTHdCLGFBQWEsRUFDYkMsZUFBZSxFQUNmZCxRQUFRLEVBQ1IrQixJQUNGLENBQUM7TUFDSDs7TUFFQTtNQUNBLE9BQU87UUFDTDVCLFNBQVMsRUFBRXFCLGVBQWU7UUFDMUJ0QixPQUFPLEVBQUUwQjtNQUNYLENBQUM7SUFDSDtFQUFDO0lBQUF0RCxHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBb0MsT0FBc0JULE9BQW1CLEVBQVc7TUFDbEQsT0FBT0EsT0FBTyxDQUFDOEIsS0FBSyxDQUFDLFVBQUNDLEtBQUk7UUFBQSxPQUFLQSxLQUFJLEtBQUssQ0FBQztNQUFBLEVBQUM7SUFDNUM7RUFBQztJQUFBM0QsR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQXFDLE9BQXNCdkIsS0FBa0IsRUFBRWEsT0FBbUIsRUFBVztNQUN0RSxJQUFNZ0MsV0FBVyxHQUFHLElBQUlqRiw4Q0FBRSxDQUFDaUQsT0FBTyxDQUFDO01BQ25DLE9BQU9nQyxXQUFXLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUNyQyxDQUFDLENBQUNULEtBQUssQ0FBQyxDQUFDO0lBQ3ZDO0VBQUM7SUFBQWYsR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQXVCLEVBQWlCVCxLQUFrQixFQUFNO01BQ3ZDLFFBQVFBLEtBQUs7UUFDWCxLQUFLaEMsV0FBVyxDQUFDSSxTQUFTO1VBQ3hCLE9BQU8sSUFBSVIsOENBQUUsQ0FDWCxrRUFBa0UsRUFDbEUsRUFDRixDQUFDO1FBQ0g7VUFDRSxNQUFNLElBQUlTLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztNQUMxQztJQUNGO0VBQUM7RUFBQSxPQUFBeUIsTUFBQTtBQUFBO0FBR0ksU0FBU2lELFlBQVlBLENBQUN2RSxLQUFhLEVBQVU7RUFDbEQsSUFBSSxDQUFDQSxLQUFLLENBQUN3RSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQ3hCLE1BQU0sSUFBSTNFLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQztFQUNwRCxJQUFJNEUsSUFBSSxHQUFHekUsS0FBSyxDQUFDNEMsS0FBSyxDQUFDLENBQUMsQ0FBQztFQUV6QixJQUFNOEIsR0FBRyxHQUFHLElBQUlDLEtBQUssQ0FBaUIsQ0FBQztFQUN2QyxPQUFPRixJQUFJLEVBQUU7SUFDWCxJQUFNRyxLQUFLLEdBQUdILElBQUksQ0FBQ0csS0FBSyxDQUFDLGlCQUFpQixDQUFDO0lBQzNDLElBQUksQ0FBQ0EsS0FBSyxFQUFFLE1BQU0sSUFBSS9FLEtBQUssQ0FBQywyQ0FBMkMsQ0FBQztJQUN4RSxJQUFBZ0YsTUFBQSxHQUFBQyxjQUFBLENBQThDRixLQUFLO01BQTVDRyxTQUFTLEdBQUFGLE1BQUE7TUFBRUcsWUFBWSxHQUFBSCxNQUFBO01BQUVJLFVBQVUsR0FBQUosTUFBQTtJQUMxQyxJQUFNbkUsS0FBSyxHQUFHUCxNQUFNLENBQUMrRSxRQUFRLENBQUNGLFlBQVksQ0FBQztJQUMzQyxJQUFJdEUsS0FBSyxJQUFBRSxJQUFBLENBQUFDLEdBQUEsQ0FBSSxDQUFDLEVBQUksRUFBRSxHQUNsQixNQUFNLElBQUloQixLQUFLLENBQUMsb0RBQW9ELENBQUM7SUFDdkUsSUFBSW9GLFVBQVUsRUFBRVAsR0FBRyxDQUFDUyxJQUFJLENBQUNwRixjQUFjLENBQUNpQixRQUFRLENBQUNOLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FDcERnRSxHQUFHLENBQUNTLElBQUksQ0FBQ3BGLGNBQWMsQ0FBQ21CLE1BQU0sQ0FBQ1IsS0FBSyxDQUFDLENBQUM7SUFDM0MrRCxJQUFJLEdBQUdBLElBQUksQ0FBQzdCLEtBQUssQ0FBQ21DLFNBQVMsQ0FBQ0ssTUFBTSxDQUFDO0VBQ3JDO0VBQ0EsT0FBT1YsR0FBRztBQUNaLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2NvcmUvc3JjL3V0aWxzL3NsaXAxMC50cz83M2JlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhtYWMgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9obWFjXCI7XG5pbXBvcnQgeyBzaGE1MTIgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zaGE1MTJcIjtcbmltcG9ydCBCTiBmcm9tIFwiYm4uanNcIjtcbmltcG9ydCBlbGxpcHRpYyBmcm9tIFwiZWxsaXB0aWNcIjtcblxuaW1wb3J0IHsgZnJvbUFzY2lpLCBmcm9tSGV4IH0gZnJvbSBcIi4vZW5jb2RpbmdcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTbGlwMTBSZXN1bHQge1xuICByZWFkb25seSBjaGFpbkNvZGU6IFVpbnQ4QXJyYXk7XG4gIHJlYWRvbmx5IHByaXZrZXk6IFVpbnQ4QXJyYXk7XG59XG5cbi8qKlxuICogUmF3IHZhbHVlcyBtdXN0IG1hdGNoIHRoZSBjdXJ2ZSBzdHJpbmcgaW4gU0xJUC0wMDEwIG1hc3RlciBrZXkgZ2VuZXJhdGlvblxuICpcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3NhdG9zaGlsYWJzL3NsaXBzL2Jsb2IvbWFzdGVyL3NsaXAtMDAxMC5tZCNtYXN0ZXIta2V5LWdlbmVyYXRpb25cbiAqL1xuZXhwb3J0IGVudW0gU2xpcDEwQ3VydmUge1xuICBTZWNwMjU2azEgPSBcIkJpdGNvaW4gc2VlZFwiLFxuICBFZDI1NTE5ID0gXCJlZDI1NTE5IHNlZWRcIixcbn1cblxuLyoqXG4gKiBSZXZlcnNlIG1hcHBpbmcgb2YgU2xpcDEwQ3VydmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNsaXAxMEN1cnZlRnJvbVN0cmluZyhjdXJ2ZVN0cmluZzogc3RyaW5nKTogU2xpcDEwQ3VydmUge1xuICBzd2l0Y2ggKGN1cnZlU3RyaW5nKSB7XG4gICAgY2FzZSBTbGlwMTBDdXJ2ZS5FZDI1NTE5OlxuICAgICAgcmV0dXJuIFNsaXAxMEN1cnZlLkVkMjU1MTk7XG4gICAgY2FzZSBTbGlwMTBDdXJ2ZS5TZWNwMjU2azE6XG4gICAgICByZXR1cm4gU2xpcDEwQ3VydmUuU2VjcDI1NmsxO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgc3RyaW5nOiAnJHtjdXJ2ZVN0cmluZ30nYCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNsaXAxMFJhd0luZGV4IHtcbiAgcmVhZG9ubHkgZGF0YTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKGlucHV0OiBudW1iZXIpIHtcbiAgICBpZiAoTnVtYmVyLmlzTmFOKGlucHV0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW5wdXQgaXMgbm90IGEgbnVtYmVyXCIpO1xuICAgIH1cblxuICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihpbnB1dCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIklucHV0IGlzIG5vdCBhbiBpbnRlZ2VyXCIpO1xuICAgIH1cblxuICAgIGlmIChpbnB1dCA8IDAgfHwgaW5wdXQgPiA0Mjk0OTY3Mjk1KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnB1dCBub3QgaW4gdWludDMyIHJhbmdlOiBcIiArIGlucHV0LnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgICB0aGlzLmRhdGEgPSBpbnB1dDtcbiAgfVxuXG4gIHN0YXRpYyBoYXJkZW5lZChoYXJkZW5lZEluZGV4OiBudW1iZXIpOiBTbGlwMTBSYXdJbmRleCB7XG4gICAgcmV0dXJuIG5ldyBTbGlwMTBSYXdJbmRleChoYXJkZW5lZEluZGV4ICsgMiAqKiAzMSk7XG4gIH1cblxuICBzdGF0aWMgbm9ybWFsKG5vcm1hbEluZGV4OiBudW1iZXIpOiBTbGlwMTBSYXdJbmRleCB7XG4gICAgcmV0dXJuIG5ldyBTbGlwMTBSYXdJbmRleChub3JtYWxJbmRleCk7XG4gIH1cblxuICBpc0hhcmRlbmVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmRhdGEgPj0gMiAqKiAzMTtcbiAgfVxuXG4gIHRvQnl0ZXNCaWdFbmRpYW4oKTogVWludDhBcnJheSB7XG4gICAgcmV0dXJuIGZyb21IZXgodGhpcy5kYXRhLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg4LCBcIjBcIikpO1xuICB9XG59XG5cbi8qKlxuICogQW4gYXJyYXkgb2YgcmF3IFNMSVAxMCBpbmRpY2VzLlxuICpcbiAqIFRoaXMgY2FuIGJlIGNvbnN0cnVjdGVkIHZpYSBzdHJpbmcgcGFyc2luZzpcbiAqXG4gKiBgYGB0c1xuICpcbiAqIGNvbnN0IHBhdGggPSBzdHJpbmdUb1BhdGgoXCJtLzAnLzEvMicvMi8xMDAwMDAwMDAwXCIpO1xuICogYGBgXG4gKlxuICogb3IgbWFudWFsbHk6XG4gKlxuICogYGBgdHNcbiAqXG4gKiAvLyBtLzAnLzEvMicvMi8xMDAwMDAwMDAwXG4gKiBjb25zdCBwYXRoOiBIZFBhdGggPSBbXG4gKiAgIFNsaXAxMFJhd0luZGV4LmhhcmRlbmVkKDApLFxuICogICBTbGlwMTBSYXdJbmRleC5ub3JtYWwoMSksXG4gKiAgIFNsaXAxMFJhd0luZGV4LmhhcmRlbmVkKDIpLFxuICogICBTbGlwMTBSYXdJbmRleC5ub3JtYWwoMiksXG4gKiAgIFNsaXAxMFJhd0luZGV4Lm5vcm1hbCgxMDAwMDAwMDAwKSxcbiAqIF07XG4gKiBgYGBcbiAqL1xuZXhwb3J0IHR5cGUgSGRQYXRoID0gcmVhZG9ubHkgU2xpcDEwUmF3SW5kZXhbXTtcblxuY29uc3Qgc2VjcDI1NmsxID0gbmV3IGVsbGlwdGljLmVjKFwic2VjcDI1NmsxXCIpO1xuXG4vLyBVbml2ZXJzYWwgcHJpdmF0ZSBrZXkgZGVyaXZhdGlvbiBhY2NvcmluZyB0b1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NhdG9zaGlsYWJzL3NsaXBzL2Jsb2IvbWFzdGVyL3NsaXAtMDAxMC5tZFxuZXhwb3J0IGNsYXNzIFNsaXAxMCB7XG4gIHB1YmxpYyBzdGF0aWMgZGVyaXZlUGF0aChcbiAgICBjdXJ2ZTogU2xpcDEwQ3VydmUsXG4gICAgc2VlZDogVWludDhBcnJheSxcbiAgICBwYXRoOiBIZFBhdGhcbiAgKTogU2xpcDEwUmVzdWx0IHtcbiAgICBsZXQgcmVzdWx0ID0gdGhpcy5tYXN0ZXIoY3VydmUsIHNlZWQpO1xuICAgIGZvciAoY29uc3QgcmF3SW5kZXggb2YgcGF0aCkge1xuICAgICAgcmVzdWx0ID0gdGhpcy5jaGlsZChjdXJ2ZSwgcmVzdWx0LnByaXZrZXksIHJlc3VsdC5jaGFpbkNvZGUsIHJhd0luZGV4KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIG1hc3RlcihjdXJ2ZTogU2xpcDEwQ3VydmUsIHNlZWQ6IFVpbnQ4QXJyYXkpOiBTbGlwMTBSZXN1bHQge1xuICAgIGNvbnN0IGkgPSBobWFjKHNoYTUxMiwgZnJvbUFzY2lpKGN1cnZlKSwgc2VlZCk7XG4gICAgY29uc3QgaWwgPSBpLnNsaWNlKDAsIDMyKTtcbiAgICBjb25zdCBpciA9IGkuc2xpY2UoMzIsIDY0KTtcblxuICAgIGlmIChcbiAgICAgIGN1cnZlICE9PSBTbGlwMTBDdXJ2ZS5FZDI1NTE5ICYmXG4gICAgICAodGhpcy5pc1plcm8oaWwpIHx8IHRoaXMuaXNHdGVOKGN1cnZlLCBpbCkpXG4gICAgKSB7XG4gICAgICByZXR1cm4gdGhpcy5tYXN0ZXIoY3VydmUsIGkpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBjaGFpbkNvZGU6IGlyLFxuICAgICAgcHJpdmtleTogaWwsXG4gICAgfTtcbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIGNoaWxkKFxuICAgIGN1cnZlOiBTbGlwMTBDdXJ2ZSxcbiAgICBwYXJlbnRQcml2a2V5OiBVaW50OEFycmF5LFxuICAgIHBhcmVudENoYWluQ29kZTogVWludDhBcnJheSxcbiAgICByYXdJbmRleDogU2xpcDEwUmF3SW5kZXhcbiAgKTogU2xpcDEwUmVzdWx0IHtcbiAgICBsZXQgaTogVWludDhBcnJheTtcbiAgICBpZiAocmF3SW5kZXguaXNIYXJkZW5lZCgpKSB7XG4gICAgICBjb25zdCBwYXlsb2FkID0gbmV3IFVpbnQ4QXJyYXkoW1xuICAgICAgICAweDAwLFxuICAgICAgICAuLi5wYXJlbnRQcml2a2V5LFxuICAgICAgICAuLi5yYXdJbmRleC50b0J5dGVzQmlnRW5kaWFuKCksXG4gICAgICBdKTtcbiAgICAgIGkgPSBobWFjKHNoYTUxMiwgcGFyZW50Q2hhaW5Db2RlLCBwYXlsb2FkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGN1cnZlID09PSBTbGlwMTBDdXJ2ZS5FZDI1NTE5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vcm1hbCBrZXlzIGFyZSBub3QgYWxsb3dlZCB3aXRoIGVkMjU1MTlcIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBTdGVwIDEgb2YgaHR0cHM6Ly9naXRodWIuY29tL3NhdG9zaGlsYWJzL3NsaXBzL2Jsb2IvbWFzdGVyL3NsaXAtMDAxMC5tZCNwcml2YXRlLXBhcmVudC1rZXktLXByaXZhdGUtY2hpbGQta2V5XG4gICAgICAgIC8vIENhbGN1bGF0ZSBJID0gSE1BQy1TSEE1MTIoS2V5ID0gY19wYXIsIERhdGEgPSBzZXJfUChwb2ludChrX3BhcikpIHx8IHNlcl8zMihpKSkuXG4gICAgICAgIC8vIHdoZXJlIHRoZSBmdW5jdGlvbnMgcG9pbnQoKSBhbmQgc2VyX3AoKSBhcmUgZGVmaW5lZCBpbiBCSVAtMDAzMlxuICAgICAgICBjb25zdCBkYXRhID0gbmV3IFVpbnQ4QXJyYXkoW1xuICAgICAgICAgIC4uLlNsaXAxMC5zZXJpYWxpemVkUG9pbnQoY3VydmUsIG5ldyBCTihwYXJlbnRQcml2a2V5KSksXG4gICAgICAgICAgLi4ucmF3SW5kZXgudG9CeXRlc0JpZ0VuZGlhbigpLFxuICAgICAgICBdKTtcbiAgICAgICAgaSA9IGhtYWMoc2hhNTEyLCBwYXJlbnRDaGFpbkNvZGUsIGRhdGEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmNoaWxkSW1wbChjdXJ2ZSwgcGFyZW50UHJpdmtleSwgcGFyZW50Q2hhaW5Db2RlLCByYXdJbmRleCwgaSk7XG4gIH1cblxuICAvKipcbiAgICogSW1wbGVtZW50YXRpb24gb2Ygc2VyX1AocG9pbnQoa19wYXIpKSBmcm9tIEJJUC0wMDMyXG4gICAqXG4gICAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW4vYmlwcy9ibG9iL21hc3Rlci9iaXAtMDAzMi5tZWRpYXdpa2lcbiAgICovXG4gIHByaXZhdGUgc3RhdGljIHNlcmlhbGl6ZWRQb2ludChjdXJ2ZTogU2xpcDEwQ3VydmUsIHA6IEJOKTogVWludDhBcnJheSB7XG4gICAgc3dpdGNoIChjdXJ2ZSkge1xuICAgICAgY2FzZSBTbGlwMTBDdXJ2ZS5TZWNwMjU2azE6XG4gICAgICAgIHJldHVybiBmcm9tSGV4KHNlY3AyNTZrMS5nLm11bChwKS5lbmNvZGVDb21wcmVzc2VkKFwiaGV4XCIpKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImN1cnZlIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgY2hpbGRJbXBsKFxuICAgIGN1cnZlOiBTbGlwMTBDdXJ2ZSxcbiAgICBwYXJlbnRQcml2a2V5OiBVaW50OEFycmF5LFxuICAgIHBhcmVudENoYWluQ29kZTogVWludDhBcnJheSxcbiAgICByYXdJbmRleDogU2xpcDEwUmF3SW5kZXgsXG4gICAgaTogVWludDhBcnJheVxuICApOiBTbGlwMTBSZXN1bHQge1xuICAgIC8vIHN0ZXAgMiAob2YgdGhlIFByaXZhdGUgcGFyZW50IGtleSDihpIgcHJpdmF0ZSBjaGlsZCBrZXkgYWxnb3JpdGhtKVxuXG4gICAgY29uc3QgaWwgPSBpLnNsaWNlKDAsIDMyKTtcbiAgICBjb25zdCBpciA9IGkuc2xpY2UoMzIsIDY0KTtcblxuICAgIC8vIHN0ZXAgM1xuICAgIGNvbnN0IHJldHVybkNoYWluQ29kZSA9IGlyO1xuXG4gICAgLy8gc3RlcCA0XG4gICAgaWYgKGN1cnZlID09PSBTbGlwMTBDdXJ2ZS5FZDI1NTE5KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjaGFpbkNvZGU6IHJldHVybkNoYWluQ29kZSxcbiAgICAgICAgcHJpdmtleTogaWwsXG4gICAgICB9O1xuICAgIH1cblxuICAgIC8vIHN0ZXAgNVxuICAgIGNvbnN0IG4gPSB0aGlzLm4oY3VydmUpO1xuICAgIGNvbnN0IHJldHVybkNoaWxkS2V5QXNOdW1iZXIgPSBuZXcgQk4oaWwpLmFkZChuZXcgQk4ocGFyZW50UHJpdmtleSkpLm1vZChuKTtcbiAgICBjb25zdCByZXR1cm5DaGlsZEtleSA9IFVpbnQ4QXJyYXkuZnJvbShcbiAgICAgIHJldHVybkNoaWxkS2V5QXNOdW1iZXIudG9BcnJheShcImJlXCIsIDMyKVxuICAgICk7XG5cbiAgICAvLyBzdGVwIDZcbiAgICBpZiAodGhpcy5pc0d0ZU4oY3VydmUsIGlsKSB8fCB0aGlzLmlzWmVybyhyZXR1cm5DaGlsZEtleSkpIHtcbiAgICAgIGNvbnN0IG5ld0kgPSBobWFjKFxuICAgICAgICBzaGE1MTIsXG4gICAgICAgIHBhcmVudENoYWluQ29kZSxcbiAgICAgICAgbmV3IFVpbnQ4QXJyYXkoWzB4MDEsIC4uLmlyLCAuLi5yYXdJbmRleC50b0J5dGVzQmlnRW5kaWFuKCldKVxuICAgICAgKTtcbiAgICAgIHJldHVybiB0aGlzLmNoaWxkSW1wbChcbiAgICAgICAgY3VydmUsXG4gICAgICAgIHBhcmVudFByaXZrZXksXG4gICAgICAgIHBhcmVudENoYWluQ29kZSxcbiAgICAgICAgcmF3SW5kZXgsXG4gICAgICAgIG5ld0lcbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gc3RlcCA3XG4gICAgcmV0dXJuIHtcbiAgICAgIGNoYWluQ29kZTogcmV0dXJuQ2hhaW5Db2RlLFxuICAgICAgcHJpdmtleTogcmV0dXJuQ2hpbGRLZXksXG4gICAgfTtcbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIGlzWmVybyhwcml2a2V5OiBVaW50OEFycmF5KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHByaXZrZXkuZXZlcnkoKGJ5dGUpID0+IGJ5dGUgPT09IDApO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgaXNHdGVOKGN1cnZlOiBTbGlwMTBDdXJ2ZSwgcHJpdmtleTogVWludDhBcnJheSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGtleUFzTnVtYmVyID0gbmV3IEJOKHByaXZrZXkpO1xuICAgIHJldHVybiBrZXlBc051bWJlci5ndGUodGhpcy5uKGN1cnZlKSk7XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyBuKGN1cnZlOiBTbGlwMTBDdXJ2ZSk6IEJOIHtcbiAgICBzd2l0Y2ggKGN1cnZlKSB7XG4gICAgICBjYXNlIFNsaXAxMEN1cnZlLlNlY3AyNTZrMTpcbiAgICAgICAgcmV0dXJuIG5ldyBCTihcbiAgICAgICAgICBcIkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZFQkFBRURDRTZBRjQ4QTAzQkJGRDI1RThDRDAzNjQxNDFcIixcbiAgICAgICAgICAxNlxuICAgICAgICApO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY3VydmUgbm90IHN1cHBvcnRlZFwiKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ1RvUGF0aChpbnB1dDogc3RyaW5nKTogSGRQYXRoIHtcbiAgaWYgKCFpbnB1dC5zdGFydHNXaXRoKFwibVwiKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXRoIHN0cmluZyBtdXN0IHN0YXJ0IHdpdGggJ20nXCIpO1xuICBsZXQgcmVzdCA9IGlucHV0LnNsaWNlKDEpO1xuXG4gIGNvbnN0IG91dCA9IG5ldyBBcnJheTxTbGlwMTBSYXdJbmRleD4oKTtcbiAgd2hpbGUgKHJlc3QpIHtcbiAgICBjb25zdCBtYXRjaCA9IHJlc3QubWF0Y2goL15cXC8oWzAtOV0rKSgnPykvKTtcbiAgICBpZiAoIW1hdGNoKSB0aHJvdyBuZXcgRXJyb3IoXCJTeW50YXggZXJyb3Igd2hpbGUgcmVhZGluZyBwYXRoIGNvbXBvbmVudFwiKTtcbiAgICBjb25zdCBbZnVsbE1hdGNoLCBudW1iZXJTdHJpbmcsIGFwb3N0cm9waGVdID0gbWF0Y2g7XG4gICAgY29uc3QgdmFsdWUgPSBOdW1iZXIucGFyc2VJbnQobnVtYmVyU3RyaW5nKTtcbiAgICBpZiAodmFsdWUgPj0gMiAqKiAzMSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbXBvbmVudCB2YWx1ZSB0b28gaGlnaC4gTXVzdCBub3QgZXhjZWVkIDIqKjMxLTEuXCIpO1xuICAgIGlmIChhcG9zdHJvcGhlKSBvdXQucHVzaChTbGlwMTBSYXdJbmRleC5oYXJkZW5lZCh2YWx1ZSkpO1xuICAgIGVsc2Ugb3V0LnB1c2goU2xpcDEwUmF3SW5kZXgubm9ybWFsKHZhbHVlKSk7XG4gICAgcmVzdCA9IHJlc3Quc2xpY2UoZnVsbE1hdGNoLmxlbmd0aCk7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJuYW1lcyI6WyJobWFjIiwic2hhNTEyIiwiQk4iLCJlbGxpcHRpYyIsImZyb21Bc2NpaSIsImZyb21IZXgiLCJTbGlwMTBDdXJ2ZSIsInNsaXAxMEN1cnZlRnJvbVN0cmluZyIsImN1cnZlU3RyaW5nIiwiRWQyNTUxOSIsIlNlY3AyNTZrMSIsIkVycm9yIiwiY29uY2F0IiwiU2xpcDEwUmF3SW5kZXgiLCJpbnB1dCIsIl9jbGFzc0NhbGxDaGVjayIsIl9kZWZpbmVQcm9wZXJ0eSIsIk51bWJlciIsImlzTmFOIiwiaXNJbnRlZ2VyIiwidG9TdHJpbmciLCJkYXRhIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJpc0hhcmRlbmVkIiwiTWF0aCIsInBvdyIsInRvQnl0ZXNCaWdFbmRpYW4iLCJwYWRTdGFydCIsImhhcmRlbmVkIiwiaGFyZGVuZWRJbmRleCIsIm5vcm1hbCIsIm5vcm1hbEluZGV4Iiwic2VjcDI1NmsxIiwiZWMiLCJTbGlwMTAiLCJkZXJpdmVQYXRoIiwiY3VydmUiLCJzZWVkIiwicGF0aCIsInJlc3VsdCIsIm1hc3RlciIsIl9pdGVyYXRvciIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiX3N0ZXAiLCJzIiwibiIsImRvbmUiLCJyYXdJbmRleCIsImNoaWxkIiwicHJpdmtleSIsImNoYWluQ29kZSIsImVyciIsImUiLCJmIiwiaSIsImlsIiwic2xpY2UiLCJpciIsImlzWmVybyIsImlzR3RlTiIsInBhcmVudFByaXZrZXkiLCJwYXJlbnRDaGFpbkNvZGUiLCJwYXlsb2FkIiwiVWludDhBcnJheSIsIl90b0NvbnN1bWFibGVBcnJheSIsInNlcmlhbGl6ZWRQb2ludCIsImNoaWxkSW1wbCIsInAiLCJnIiwibXVsIiwiZW5jb2RlQ29tcHJlc3NlZCIsInJldHVybkNoYWluQ29kZSIsInJldHVybkNoaWxkS2V5QXNOdW1iZXIiLCJhZGQiLCJtb2QiLCJyZXR1cm5DaGlsZEtleSIsImZyb20iLCJ0b0FycmF5IiwibmV3SSIsImV2ZXJ5IiwiYnl0ZSIsImtleUFzTnVtYmVyIiwiZ3RlIiwic3RyaW5nVG9QYXRoIiwic3RhcnRzV2l0aCIsInJlc3QiLCJvdXQiLCJBcnJheSIsIm1hdGNoIiwiX21hdGNoIiwiX3NsaWNlZFRvQXJyYXkiLCJmdWxsTWF0Y2giLCJudW1iZXJTdHJpbmciLCJhcG9zdHJvcGhlIiwicGFyc2VJbnQiLCJwdXNoIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../core/src/utils/slip10.ts\n");

/***/ }),

/***/ "../cosmos-const/index.ts":
/*!********************************!*\
  !*** ../cosmos-const/index.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src */ \"../cosmos-const/src/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src__WEBPACK_IMPORTED_MODULE_0__]);\n_src__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _src__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _src__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// for dev mode only\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zLWNvbnN0L2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2Nvc21vcy1jb25zdC9pbmRleC50cz9kZWEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZvciBkZXYgbW9kZSBvbmx5XG5leHBvcnQgKiBmcm9tIFwiLi9zcmNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cosmos-const/index.ts\n");

/***/ }),

/***/ "../cosmos-const/src/index.ts":
/*!************************************!*\
  !*** ../cosmos-const/src/index.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosmwasmSigner\": () => (/* binding */ cosmwasmSigner)\n/* harmony export */ });\n/* harmony import */ var _sign_cosmos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/cosmos */ \"../cosmos/index.ts\");\n/* harmony import */ var _stargate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stargate */ \"../cosmos-const/src/stargate.ts\");\n/* harmony import */ var _wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wasm */ \"../cosmos-const/src/wasm.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__, _stargate__WEBPACK_IMPORTED_MODULE_1__, _wasm__WEBPACK_IMPORTED_MODULE_2__]);\n([_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__, _stargate__WEBPACK_IMPORTED_MODULE_1__, _wasm__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _stargate__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"cosmwasmSigner\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _stargate__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\nvar cosmwasmSigner = _sign_cosmos__WEBPACK_IMPORTED_MODULE_0__.Signer.fromParsers.apply(_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__.Signer, _toConsumableArray(_stargate__WEBPACK_IMPORTED_MODULE_1__.stargateSigner.parsers).concat(_toConsumableArray(_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmSigner.parsers)));\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zLWNvbnN0L3NyYy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNDO0FBRU07QUFDUjtBQUVUO0FBRXBCLElBQU1HLGNBQWMsR0FBR0gsa0VBQWtCLENBQWxCQSxnREFBTSxFQUFBTSxrQkFBQSxDQUMvQkwsNkRBQXNCLEVBQUFPLE1BQUEsQ0FBQUYsa0JBQUEsQ0FDdEJKLHFEQUFrQixFQUN2QixDQUFDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2Nvc21vcy1jb25zdC9zcmMvaW5kZXgudHM/MThkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaWduZXIgfSBmcm9tIFwiQHNpZ24vY29zbW9zXCI7XG5cbmltcG9ydCB7IHN0YXJnYXRlU2lnbmVyIH0gZnJvbSBcIi4vc3RhcmdhdGVcIjtcbmltcG9ydCB7IHdhc21TaWduZXIgfSBmcm9tIFwiLi93YXNtXCI7XG5cbmV4cG9ydCAqIGZyb20gXCIuL3N0YXJnYXRlXCI7XG5cbmV4cG9ydCBjb25zdCBjb3Ntd2FzbVNpZ25lciA9IFNpZ25lci5mcm9tUGFyc2VycyhcbiAgLi4uc3RhcmdhdGVTaWduZXIucGFyc2VycyxcbiAgLi4ud2FzbVNpZ25lci5wYXJzZXJzXG4pO1xuIl0sIm5hbWVzIjpbIlNpZ25lciIsInN0YXJnYXRlU2lnbmVyIiwid2FzbVNpZ25lciIsImNvc213YXNtU2lnbmVyIiwiZnJvbVBhcnNlcnMiLCJhcHBseSIsIl90b0NvbnN1bWFibGVBcnJheSIsInBhcnNlcnMiLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cosmos-const/src/index.ts\n");

/***/ }),

/***/ "../cosmos-const/src/stargate.ts":
/*!***************************************!*\
  !*** ../cosmos-const/src/stargate.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stargateSigner\": () => (/* binding */ stargateSigner)\n/* harmony export */ });\n/* harmony import */ var _sign_cosmos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/cosmos */ \"../cosmos/index.ts\");\n/* harmony import */ var interchain_query_cosmos_authz_v1beta1_tx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! interchain-query/cosmos/authz/v1beta1/tx */ \"interchain-query/cosmos/authz/v1beta1/tx\");\n/* harmony import */ var interchain_query_cosmos_authz_v1beta1_tx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_authz_v1beta1_tx__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var interchain_query_cosmos_bank_v1beta1_tx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! interchain-query/cosmos/bank/v1beta1/tx */ \"interchain-query/cosmos/bank/v1beta1/tx\");\n/* harmony import */ var interchain_query_cosmos_bank_v1beta1_tx__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_bank_v1beta1_tx__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var interchain_query_cosmos_distribution_v1beta1_tx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! interchain-query/cosmos/distribution/v1beta1/tx */ \"interchain-query/cosmos/distribution/v1beta1/tx\");\n/* harmony import */ var interchain_query_cosmos_distribution_v1beta1_tx__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_distribution_v1beta1_tx__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var interchain_query_cosmos_feegrant_v1beta1_tx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! interchain-query/cosmos/feegrant/v1beta1/tx */ \"interchain-query/cosmos/feegrant/v1beta1/tx\");\n/* harmony import */ var interchain_query_cosmos_feegrant_v1beta1_tx__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_feegrant_v1beta1_tx__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! interchain-query/cosmos/gov/v1/tx */ \"interchain-query/cosmos/gov/v1/tx\");\n/* harmony import */ var interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var interchain_query_cosmos_gov_v1beta1_tx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! interchain-query/cosmos/gov/v1beta1/tx */ \"interchain-query/cosmos/gov/v1beta1/tx\");\n/* harmony import */ var interchain_query_cosmos_gov_v1beta1_tx__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_gov_v1beta1_tx__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! interchain-query/cosmos/group/v1/tx */ \"interchain-query/cosmos/group/v1/tx\");\n/* harmony import */ var interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! interchain-query/cosmos/staking/v1beta1/tx */ \"interchain-query/cosmos/staking/v1beta1/tx\");\n/* harmony import */ var interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var interchain_query_cosmos_vesting_v1beta1_tx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! interchain-query/cosmos/vesting/v1beta1/tx */ \"interchain-query/cosmos/vesting/v1beta1/tx\");\n/* harmony import */ var interchain_query_cosmos_vesting_v1beta1_tx__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_vesting_v1beta1_tx__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var interchain_query_ibc_applications_transfer_v1_tx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! interchain-query/ibc/applications/transfer/v1/tx */ \"interchain-query/ibc/applications/transfer/v1/tx\");\n/* harmony import */ var interchain_query_ibc_applications_transfer_v1_tx__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(interchain_query_ibc_applications_transfer_v1_tx__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! interchain-query/ibc/core/channel/v1/tx */ \"interchain-query/ibc/core/channel/v1/tx\");\n/* harmony import */ var interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var interchain_query_ibc_core_client_v1_tx__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! interchain-query/ibc/core/client/v1/tx */ \"interchain-query/ibc/core/client/v1/tx\");\n/* harmony import */ var interchain_query_ibc_core_client_v1_tx__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(interchain_query_ibc_core_client_v1_tx__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var interchain_query_ibc_core_connection_v1_tx__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! interchain-query/ibc/core/connection/v1/tx */ \"interchain-query/ibc/core/connection/v1/tx\");\n/* harmony import */ var interchain_query_ibc_core_connection_v1_tx__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(interchain_query_ibc_core_connection_v1_tx__WEBPACK_IMPORTED_MODULE_13__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__]);\n_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar MsgAuthzConsts = [interchain_query_cosmos_authz_v1beta1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgGrant, interchain_query_cosmos_authz_v1beta1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgExec, interchain_query_cosmos_authz_v1beta1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgRevoke];\nvar MsgBankConsts = [interchain_query_cosmos_bank_v1beta1_tx__WEBPACK_IMPORTED_MODULE_2__.MsgSend, interchain_query_cosmos_bank_v1beta1_tx__WEBPACK_IMPORTED_MODULE_2__.MsgMultiSend];\nvar MsgDistributionConsts = [interchain_query_cosmos_distribution_v1beta1_tx__WEBPACK_IMPORTED_MODULE_3__.MsgSetWithdrawAddress, interchain_query_cosmos_distribution_v1beta1_tx__WEBPACK_IMPORTED_MODULE_3__.MsgWithdrawDelegatorReward, interchain_query_cosmos_distribution_v1beta1_tx__WEBPACK_IMPORTED_MODULE_3__.MsgWithdrawValidatorCommission, interchain_query_cosmos_distribution_v1beta1_tx__WEBPACK_IMPORTED_MODULE_3__.MsgFundCommunityPool];\nvar MsgFeeGrantConsts = [interchain_query_cosmos_feegrant_v1beta1_tx__WEBPACK_IMPORTED_MODULE_4__.MsgGrantAllowance, interchain_query_cosmos_feegrant_v1beta1_tx__WEBPACK_IMPORTED_MODULE_4__.MsgRevokeAllowance];\nvar MsgGovConsts = [interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5__.MsgDeposit, interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5__.MsgSubmitProposal, interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5__.MsgExecLegacyContent, interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5__.MsgVote, interchain_query_cosmos_gov_v1_tx__WEBPACK_IMPORTED_MODULE_5__.MsgVoteWeighted, interchain_query_cosmos_gov_v1beta1_tx__WEBPACK_IMPORTED_MODULE_6__.MsgSubmitProposal, interchain_query_cosmos_gov_v1beta1_tx__WEBPACK_IMPORTED_MODULE_6__.MsgVote, interchain_query_cosmos_gov_v1beta1_tx__WEBPACK_IMPORTED_MODULE_6__.MsgVoteWeighted, interchain_query_cosmos_gov_v1beta1_tx__WEBPACK_IMPORTED_MODULE_6__.MsgDeposit];\nvar MsgGroupConsts = [interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgCreateGroup, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgUpdateGroupMembers, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgUpdateGroupAdmin, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgUpdateGroupMetadata, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgCreateGroupPolicy, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgCreateGroupWithPolicy, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgUpdateGroupPolicyAdmin, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgUpdateGroupPolicyDecisionPolicy, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgUpdateGroupPolicyMetadata, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgSubmitProposal, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgWithdrawProposal, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgVote, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgExec, interchain_query_cosmos_group_v1_tx__WEBPACK_IMPORTED_MODULE_7__.MsgLeaveGroup];\nvar MsgIbcConsts = [interchain_query_ibc_applications_transfer_v1_tx__WEBPACK_IMPORTED_MODULE_10__.MsgTransfer, interchain_query_ibc_applications_transfer_v1_tx__WEBPACK_IMPORTED_MODULE_10__.MsgTransfer, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgChannelCloseConfirm, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgChannelCloseInit, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgChannelOpenAck, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgChannelOpenConfirm, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgChannelOpenInit, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgChannelOpenTry, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgRecvPacket, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgTimeout, interchain_query_ibc_core_channel_v1_tx__WEBPACK_IMPORTED_MODULE_11__.MsgTimeoutOnClose, interchain_query_ibc_core_client_v1_tx__WEBPACK_IMPORTED_MODULE_12__.MsgCreateClient, interchain_query_ibc_core_client_v1_tx__WEBPACK_IMPORTED_MODULE_12__.MsgSubmitMisbehaviour, interchain_query_ibc_core_client_v1_tx__WEBPACK_IMPORTED_MODULE_12__.MsgUpdateClient, interchain_query_ibc_core_client_v1_tx__WEBPACK_IMPORTED_MODULE_12__.MsgUpgradeClient, interchain_query_ibc_core_connection_v1_tx__WEBPACK_IMPORTED_MODULE_13__.MsgConnectionOpenAck, interchain_query_ibc_core_connection_v1_tx__WEBPACK_IMPORTED_MODULE_13__.MsgConnectionOpenConfirm, interchain_query_ibc_core_connection_v1_tx__WEBPACK_IMPORTED_MODULE_13__.MsgConnectionOpenInit, interchain_query_ibc_core_connection_v1_tx__WEBPACK_IMPORTED_MODULE_13__.MsgConnectionOpenTry];\nvar MsgStakingConsts = [interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8__.MsgCreateValidator, interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8__.MsgEditValidator, interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8__.MsgDelegate, interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8__.MsgBeginRedelegate, interchain_query_cosmos_staking_v1beta1_tx__WEBPACK_IMPORTED_MODULE_8__.MsgUndelegate];\nvar MsgVestingConsts = [interchain_query_cosmos_vesting_v1beta1_tx__WEBPACK_IMPORTED_MODULE_9__.MsgCreateVestingAccount];\nvar stargateSigner = _construct(_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__.Signer, MsgAuthzConsts.concat(MsgBankConsts, MsgDistributionConsts, MsgFeeGrantConsts, MsgGovConsts, MsgGroupConsts, MsgIbcConsts, MsgStakingConsts, MsgVestingConsts));\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos-const/src/stargate.ts\n");

/***/ }),

/***/ "../cosmos-const/src/wasm.ts":
/*!***********************************!*\
  !*** ../cosmos-const/src/wasm.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wasmSigner\": () => (/* binding */ wasmSigner)\n/* harmony export */ });\n/* harmony import */ var _sign_cosmos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/cosmos */ \"../cosmos/index.ts\");\n/* harmony import */ var interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! interchain-query/cosmwasm/wasm/v1/tx */ \"interchain-query/cosmwasm/wasm/v1/tx\");\n/* harmony import */ var interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__]);\n_sign_cosmos__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nvar wasmSigner = new _sign_cosmos__WEBPACK_IMPORTED_MODULE_0__.Signer(interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgClearAdmin, interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgExecuteContract, interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgMigrateContract, interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgStoreCode, interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgInstantiateContract, interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgInstantiateContract2, interchain_query_cosmwasm_wasm_v1_tx__WEBPACK_IMPORTED_MODULE_1__.MsgUpdateAdmin);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zLWNvbnN0L3NyYy93YXNtLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBc0M7QUFTUTtBQUV2QyxJQUFNUSxVQUFVLEdBQUcsSUFBSVIsZ0RBQU0sQ0FDbENDLCtFQUFhLEVBQ2JDLG9GQUFrQixFQUNsQkcsb0ZBQWtCLEVBQ2xCQyw4RUFBWSxFQUNaSCx3RkFBc0IsRUFDdEJDLHlGQUF1QixFQUN2QkcsZ0ZBQ0YsQ0FBQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3MtY29uc3Qvc3JjL3dhc20udHM/NDhmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaWduZXIgfSBmcm9tIFwiQHNpZ24vY29zbW9zXCI7XG5pbXBvcnQge1xuICBNc2dDbGVhckFkbWluLFxuICBNc2dFeGVjdXRlQ29udHJhY3QsXG4gIE1zZ0luc3RhbnRpYXRlQ29udHJhY3QsXG4gIE1zZ0luc3RhbnRpYXRlQ29udHJhY3QyLFxuICBNc2dNaWdyYXRlQ29udHJhY3QsXG4gIE1zZ1N0b3JlQ29kZSxcbiAgTXNnVXBkYXRlQWRtaW4sXG59IGZyb20gXCJpbnRlcmNoYWluLXF1ZXJ5L2Nvc213YXNtL3dhc20vdjEvdHhcIjtcblxuZXhwb3J0IGNvbnN0IHdhc21TaWduZXIgPSBuZXcgU2lnbmVyKFxuICBNc2dDbGVhckFkbWluLFxuICBNc2dFeGVjdXRlQ29udHJhY3QsXG4gIE1zZ01pZ3JhdGVDb250cmFjdCxcbiAgTXNnU3RvcmVDb2RlLFxuICBNc2dJbnN0YW50aWF0ZUNvbnRyYWN0LFxuICBNc2dJbnN0YW50aWF0ZUNvbnRyYWN0MixcbiAgTXNnVXBkYXRlQWRtaW5cbik7XG4iXSwibmFtZXMiOlsiU2lnbmVyIiwiTXNnQ2xlYXJBZG1pbiIsIk1zZ0V4ZWN1dGVDb250cmFjdCIsIk1zZ0luc3RhbnRpYXRlQ29udHJhY3QiLCJNc2dJbnN0YW50aWF0ZUNvbnRyYWN0MiIsIk1zZ01pZ3JhdGVDb250cmFjdCIsIk1zZ1N0b3JlQ29kZSIsIk1zZ1VwZGF0ZUFkbWluIiwid2FzbVNpZ25lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cosmos-const/src/wasm.ts\n");

/***/ }),

/***/ "../cosmos/index.ts":
/*!**************************!*\
  !*** ../cosmos/index.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src */ \"../cosmos/src/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src__WEBPACK_IMPORTED_MODULE_0__]);\n_src__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _src__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _src__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// for dev mode only\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2Nvc21vcy9pbmRleC50cz9hMDEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZvciBkZXYgbW9kZSBvbmx5XG5leHBvcnQgKiBmcm9tIFwiLi9zcmNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cosmos/index.ts\n");

/***/ }),

/***/ "../cosmos/src/const/account.ts":
/*!**************************************!*\
  !*** ../cosmos/src/const/account.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountParserMap\": () => (/* binding */ AccountParserMap),\n/* harmony export */   \"BaseAccountParser\": () => (/* binding */ BaseAccountParser),\n/* harmony export */   \"BaseVestingAccountParser\": () => (/* binding */ BaseVestingAccountParser),\n/* harmony export */   \"ContinuousVestingAccountParser\": () => (/* binding */ ContinuousVestingAccountParser),\n/* harmony export */   \"DelayedVestingAccountParser\": () => (/* binding */ DelayedVestingAccountParser),\n/* harmony export */   \"ModuleAccountParser\": () => (/* binding */ ModuleAccountParser),\n/* harmony export */   \"PeriodicVestingAccountParser\": () => (/* binding */ PeriodicVestingAccountParser)\n/* harmony export */ });\n/* harmony import */ var _interchain_proto_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interchain/proto/auth */ \"../cosmos/src/interchain/proto/auth.ts\");\n/* harmony import */ var _interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../interchain/proto/vesting */ \"../cosmos/src/interchain/proto/vesting.ts\");\n/* harmony import */ var _parsers_account__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parsers/account */ \"../cosmos/src/parsers/account.ts\");\n/* harmony import */ var _parsers_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parsers/base */ \"../cosmos/src/parsers/base.ts\");\n\n\n\n\n\n// account\nvar BaseAccountParser = _parsers_account__WEBPACK_IMPORTED_MODULE_2__.AccountParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_auth__WEBPACK_IMPORTED_MODULE_0__.BaseAccount));\nvar ModuleAccountParser = _parsers_account__WEBPACK_IMPORTED_MODULE_2__.AccountParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_auth__WEBPACK_IMPORTED_MODULE_0__.ModuleAccount));\nvar BaseVestingAccountParser = _parsers_account__WEBPACK_IMPORTED_MODULE_2__.AccountParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_1__.BaseVestingAccount));\nvar ContinuousVestingAccountParser = _parsers_account__WEBPACK_IMPORTED_MODULE_2__.AccountParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_1__.ContinuousVestingAccount));\nvar DelayedVestingAccountParser = _parsers_account__WEBPACK_IMPORTED_MODULE_2__.AccountParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_1__.DelayedVestingAccount));\nvar PeriodicVestingAccountParser = _parsers_account__WEBPACK_IMPORTED_MODULE_2__.AccountParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_1__.PeriodicVestingAccount));\n\n// *************************** COLLECTIONS ***************************\n\nvar AccountParserMap = {\n  BaseAccount: BaseAccountParser,\n  ModuleAccount: ModuleAccountParser,\n  BaseVestingAccount: BaseVestingAccountParser,\n  ContinuousVestingAccount: ContinuousVestingAccountParser,\n  DelayedVestingAccount: DelayedVestingAccountParser,\n  PeriodicVestingAccount: PeriodicVestingAccountParser\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9jb25zdC9hY2NvdW50LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNFO0FBTWpDO0FBQ2M7QUFDTjs7QUFFN0M7QUFDTyxJQUFNUSxpQkFBaUIsR0FBR0Ysc0VBQXdCLENBQ3ZEQyw4REFBbUIsQ0FBQ1AsK0RBQVcsQ0FDakMsQ0FBQztBQUNNLElBQU1XLG1CQUFtQixHQUFHTCxzRUFBd0IsQ0FDekRDLDhEQUFtQixDQUFDTixpRUFBYSxDQUNuQyxDQUFDO0FBQ00sSUFBTVcsd0JBQXdCLEdBQUdOLHNFQUF3QixDQUM5REMsOERBQW1CLENBQUNMLHlFQUFrQixDQUN4QyxDQUFDO0FBQ00sSUFBTVcsOEJBQThCLEdBQUdQLHNFQUF3QixDQUNwRUMsOERBQW1CLENBQUNKLCtFQUF3QixDQUM5QyxDQUFDO0FBQ00sSUFBTVcsMkJBQTJCLEdBQUdSLHNFQUF3QixDQUNqRUMsOERBQW1CLENBQUNILDRFQUFxQixDQUMzQyxDQUFDO0FBQ00sSUFBTVcsNEJBQTRCLEdBQUdULHNFQUF3QixDQUNsRUMsOERBQW1CLENBQUNGLDZFQUFzQixDQUM1QyxDQUFDOztBQUVEOztBQUVPLElBQU1XLGdCQUFnQixHQUFHO0VBQzlCaEIsV0FBVyxFQUFFUSxpQkFBaUI7RUFDOUJQLGFBQWEsRUFBRVUsbUJBQW1CO0VBQ2xDVCxrQkFBa0IsRUFBRVUsd0JBQXdCO0VBQzVDVCx3QkFBd0IsRUFBRVUsOEJBQThCO0VBQ3hEVCxxQkFBcUIsRUFBRVUsMkJBQTJCO0VBQ2xEVCxzQkFBc0IsRUFBRVU7QUFDMUIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzaWduL2V4YW1wbGUvLi4vY29zbW9zL3NyYy9jb25zdC9hY2NvdW50LnRzPzkwMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUFjY291bnQsIE1vZHVsZUFjY291bnQgfSBmcm9tIFwiLi4vaW50ZXJjaGFpbi9wcm90by9hdXRoXCI7XG5pbXBvcnQge1xuICBCYXNlVmVzdGluZ0FjY291bnQsXG4gIENvbnRpbnVvdXNWZXN0aW5nQWNjb3VudCxcbiAgRGVsYXllZFZlc3RpbmdBY2NvdW50LFxuICBQZXJpb2RpY1Zlc3RpbmdBY2NvdW50LFxufSBmcm9tIFwiLi4vaW50ZXJjaGFpbi9wcm90by92ZXN0aW5nXCI7XG5pbXBvcnQgeyBBY2NvdW50UGFyc2VyIH0gZnJvbSBcIi4uL3BhcnNlcnMvYWNjb3VudFwiO1xuaW1wb3J0IHsgQmFzZVBhcnNlciB9IGZyb20gXCIuLi9wYXJzZXJzL2Jhc2VcIjtcblxuLy8gYWNjb3VudFxuZXhwb3J0IGNvbnN0IEJhc2VBY2NvdW50UGFyc2VyID0gQWNjb3VudFBhcnNlci5mcm9tUGFyc2VyKFxuICBCYXNlUGFyc2VyLmZyb21NZXRhKEJhc2VBY2NvdW50KVxuKTtcbmV4cG9ydCBjb25zdCBNb2R1bGVBY2NvdW50UGFyc2VyID0gQWNjb3VudFBhcnNlci5mcm9tUGFyc2VyKFxuICBCYXNlUGFyc2VyLmZyb21NZXRhKE1vZHVsZUFjY291bnQpXG4pO1xuZXhwb3J0IGNvbnN0IEJhc2VWZXN0aW5nQWNjb3VudFBhcnNlciA9IEFjY291bnRQYXJzZXIuZnJvbVBhcnNlcihcbiAgQmFzZVBhcnNlci5mcm9tTWV0YShCYXNlVmVzdGluZ0FjY291bnQpXG4pO1xuZXhwb3J0IGNvbnN0IENvbnRpbnVvdXNWZXN0aW5nQWNjb3VudFBhcnNlciA9IEFjY291bnRQYXJzZXIuZnJvbVBhcnNlcihcbiAgQmFzZVBhcnNlci5mcm9tTWV0YShDb250aW51b3VzVmVzdGluZ0FjY291bnQpXG4pO1xuZXhwb3J0IGNvbnN0IERlbGF5ZWRWZXN0aW5nQWNjb3VudFBhcnNlciA9IEFjY291bnRQYXJzZXIuZnJvbVBhcnNlcihcbiAgQmFzZVBhcnNlci5mcm9tTWV0YShEZWxheWVkVmVzdGluZ0FjY291bnQpXG4pO1xuZXhwb3J0IGNvbnN0IFBlcmlvZGljVmVzdGluZ0FjY291bnRQYXJzZXIgPSBBY2NvdW50UGFyc2VyLmZyb21QYXJzZXIoXG4gIEJhc2VQYXJzZXIuZnJvbU1ldGEoUGVyaW9kaWNWZXN0aW5nQWNjb3VudClcbik7XG5cbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKiBDT0xMRUNUSU9OUyAqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuZXhwb3J0IGNvbnN0IEFjY291bnRQYXJzZXJNYXAgPSB7XG4gIEJhc2VBY2NvdW50OiBCYXNlQWNjb3VudFBhcnNlcixcbiAgTW9kdWxlQWNjb3VudDogTW9kdWxlQWNjb3VudFBhcnNlcixcbiAgQmFzZVZlc3RpbmdBY2NvdW50OiBCYXNlVmVzdGluZ0FjY291bnRQYXJzZXIsXG4gIENvbnRpbnVvdXNWZXN0aW5nQWNjb3VudDogQ29udGludW91c1Zlc3RpbmdBY2NvdW50UGFyc2VyLFxuICBEZWxheWVkVmVzdGluZ0FjY291bnQ6IERlbGF5ZWRWZXN0aW5nQWNjb3VudFBhcnNlcixcbiAgUGVyaW9kaWNWZXN0aW5nQWNjb3VudDogUGVyaW9kaWNWZXN0aW5nQWNjb3VudFBhcnNlcixcbn07XG4iXSwibmFtZXMiOlsiQmFzZUFjY291bnQiLCJNb2R1bGVBY2NvdW50IiwiQmFzZVZlc3RpbmdBY2NvdW50IiwiQ29udGludW91c1Zlc3RpbmdBY2NvdW50IiwiRGVsYXllZFZlc3RpbmdBY2NvdW50IiwiUGVyaW9kaWNWZXN0aW5nQWNjb3VudCIsIkFjY291bnRQYXJzZXIiLCJCYXNlUGFyc2VyIiwiQmFzZUFjY291bnRQYXJzZXIiLCJmcm9tUGFyc2VyIiwiZnJvbU1ldGEiLCJNb2R1bGVBY2NvdW50UGFyc2VyIiwiQmFzZVZlc3RpbmdBY2NvdW50UGFyc2VyIiwiQ29udGludW91c1Zlc3RpbmdBY2NvdW50UGFyc2VyIiwiRGVsYXllZFZlc3RpbmdBY2NvdW50UGFyc2VyIiwiUGVyaW9kaWNWZXN0aW5nQWNjb3VudFBhcnNlciIsIkFjY291bnRQYXJzZXJNYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cosmos/src/const/account.ts\n");

/***/ }),

/***/ "../cosmos/src/const/pubkey.ts":
/*!*************************************!*\
  !*** ../cosmos/src/const/pubkey.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PubKeyEd25519Parser\": () => (/* binding */ PubKeyEd25519Parser),\n/* harmony export */   \"PubKeySecp256k1Parser\": () => (/* binding */ PubKeySecp256k1Parser),\n/* harmony export */   \"PubKeySecp256r1Parser\": () => (/* binding */ PubKeySecp256r1Parser)\n/* harmony export */ });\n/* harmony import */ var _interchain_proto_crypto_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interchain/proto/crypto.ed25519 */ \"../cosmos/src/interchain/proto/crypto.ed25519.ts\");\n/* harmony import */ var _interchain_proto_crypto_secp256k1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../interchain/proto/crypto.secp256k1 */ \"../cosmos/src/interchain/proto/crypto.secp256k1.ts\");\n/* harmony import */ var _interchain_proto_crypto_secp256r1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interchain/proto/crypto.secp256r1 */ \"../cosmos/src/interchain/proto/crypto.secp256r1.ts\");\n/* harmony import */ var _parsers_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parsers/base */ \"../cosmos/src/parsers/base.ts\");\n/* harmony import */ var _parsers_pubkey__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parsers/pubkey */ \"../cosmos/src/parsers/pubkey.ts\");\n\n\n\n\n\nvar PubKeyEd25519Parser = _parsers_pubkey__WEBPACK_IMPORTED_MODULE_4__.PubKeyParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_crypto_ed25519__WEBPACK_IMPORTED_MODULE_0__.PubKey));\nvar PubKeySecp256k1Parser = _parsers_pubkey__WEBPACK_IMPORTED_MODULE_4__.PubKeyParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_crypto_secp256k1__WEBPACK_IMPORTED_MODULE_1__.PubKey));\nvar PubKeySecp256r1Parser = _parsers_pubkey__WEBPACK_IMPORTED_MODULE_4__.PubKeyParser.fromParser(_parsers_base__WEBPACK_IMPORTED_MODULE_3__.BaseParser.fromMeta(_interchain_proto_crypto_secp256r1__WEBPACK_IMPORTED_MODULE_2__.PubKey));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9jb25zdC9wdWJrZXkudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNkU7QUFDSTtBQUNBO0FBQ3BDO0FBQ0k7QUFFMUMsSUFBTU0sbUJBQW1CLEdBQUdELG9FQUF1QixDQUN4REQsOERBQW1CLENBQUNILG9FQUFhLENBQ25DLENBQUM7QUFDTSxJQUFNUSxxQkFBcUIsR0FBR0osb0VBQXVCLENBQzFERCw4REFBbUIsQ0FBQ0Ysc0VBQWUsQ0FDckMsQ0FBQztBQUNNLElBQU1RLHFCQUFxQixHQUFHTCxvRUFBdUIsQ0FDMURELDhEQUFtQixDQUFDRCxzRUFBZSxDQUNyQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL2NvbnN0L3B1YmtleS50cz9iZmIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFB1YktleSBhcyBQdWJLZXlFZDI1NTE5IH0gZnJvbSBcIi4uL2ludGVyY2hhaW4vcHJvdG8vY3J5cHRvLmVkMjU1MTlcIjtcbmltcG9ydCB7IFB1YktleSBhcyBQdWJLZXlTZWNwMjU2azEgfSBmcm9tIFwiLi4vaW50ZXJjaGFpbi9wcm90by9jcnlwdG8uc2VjcDI1NmsxXCI7XG5pbXBvcnQgeyBQdWJLZXkgYXMgUHViS2V5U2VjcDI1NnIxIH0gZnJvbSBcIi4uL2ludGVyY2hhaW4vcHJvdG8vY3J5cHRvLnNlY3AyNTZyMVwiO1xuaW1wb3J0IHsgQmFzZVBhcnNlciB9IGZyb20gXCIuLi9wYXJzZXJzL2Jhc2VcIjtcbmltcG9ydCB7IFB1YktleVBhcnNlciB9IGZyb20gXCIuLi9wYXJzZXJzL3B1YmtleVwiO1xuXG5leHBvcnQgY29uc3QgUHViS2V5RWQyNTUxOVBhcnNlciA9IFB1YktleVBhcnNlci5mcm9tUGFyc2VyKFxuICBCYXNlUGFyc2VyLmZyb21NZXRhKFB1YktleUVkMjU1MTkpXG4pO1xuZXhwb3J0IGNvbnN0IFB1YktleVNlY3AyNTZrMVBhcnNlciA9IFB1YktleVBhcnNlci5mcm9tUGFyc2VyKFxuICBCYXNlUGFyc2VyLmZyb21NZXRhKFB1YktleVNlY3AyNTZrMSlcbik7XG5leHBvcnQgY29uc3QgUHViS2V5U2VjcDI1NnIxUGFyc2VyID0gUHViS2V5UGFyc2VyLmZyb21QYXJzZXIoXG4gIEJhc2VQYXJzZXIuZnJvbU1ldGEoUHViS2V5U2VjcDI1NnIxKVxuKTtcbiJdLCJuYW1lcyI6WyJQdWJLZXkiLCJQdWJLZXlFZDI1NTE5IiwiUHViS2V5U2VjcDI1NmsxIiwiUHViS2V5U2VjcDI1NnIxIiwiQmFzZVBhcnNlciIsIlB1YktleVBhcnNlciIsIlB1YktleUVkMjU1MTlQYXJzZXIiLCJmcm9tUGFyc2VyIiwiZnJvbU1ldGEiLCJQdWJLZXlTZWNwMjU2azFQYXJzZXIiLCJQdWJLZXlTZWNwMjU2cjFQYXJzZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cosmos/src/const/pubkey.ts\n");

/***/ }),

/***/ "../cosmos/src/const/tx.ts":
/*!*********************************!*\
  !*** ../cosmos/src/const/tx.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AuthInfoParser\": () => (/* binding */ AuthInfoParser),\n/* harmony export */   \"FeeParser\": () => (/* binding */ FeeParser),\n/* harmony export */   \"SignDocParser\": () => (/* binding */ SignDocParser),\n/* harmony export */   \"TxBodyParser\": () => (/* binding */ TxBodyParser),\n/* harmony export */   \"TxParser\": () => (/* binding */ TxParser),\n/* harmony export */   \"TxRawParser\": () => (/* binding */ TxRawParser)\n/* harmony export */ });\n/* harmony import */ var _interchain_proto_tx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interchain/proto/tx */ \"../cosmos/src/interchain/proto/tx.ts\");\n/* harmony import */ var _parsers_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parsers/base */ \"../cosmos/src/parsers/base.ts\");\n\n\nvar TxParser = _parsers_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser.fromMeta(_interchain_proto_tx__WEBPACK_IMPORTED_MODULE_0__.Tx);\nvar TxRawParser = _parsers_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser.fromMeta(_interchain_proto_tx__WEBPACK_IMPORTED_MODULE_0__.TxRaw);\nvar TxBodyParser = _parsers_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser.fromMeta(_interchain_proto_tx__WEBPACK_IMPORTED_MODULE_0__.TxBody);\nvar AuthInfoParser = _parsers_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser.fromMeta(_interchain_proto_tx__WEBPACK_IMPORTED_MODULE_0__.AuthInfo);\nvar FeeParser = _parsers_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser.fromMeta(_interchain_proto_tx__WEBPACK_IMPORTED_MODULE_0__.Fee);\nvar SignDocParser = _parsers_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser.fromMeta(_interchain_proto_tx__WEBPACK_IMPORTED_MODULE_0__.SignDoc);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9jb25zdC90eC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQU9nQztBQUNhO0FBRXRDLElBQU1PLFFBQVEsR0FBR0QsOERBQW1CLENBQUNILG9EQUFFLENBQUM7QUFDeEMsSUFBTU0sV0FBVyxHQUFHSCw4REFBbUIsQ0FBQ0QsdURBQUssQ0FBQztBQUM5QyxJQUFNSyxZQUFZLEdBQUdKLDhEQUFtQixDQUFDRix3REFBTSxDQUFDO0FBQ2hELElBQU1PLGNBQWMsR0FBR0wsOERBQW1CLENBQUNOLDBEQUFRLENBQUM7QUFDcEQsSUFBTVksU0FBUyxHQUFHTiw4REFBbUIsQ0FBQ0wscURBQUcsQ0FBQztBQUMxQyxJQUFNWSxhQUFhLEdBQUdQLDhEQUFtQixDQUFDSix5REFBTyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL2NvbnN0L3R4LnRzPzZlNWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQXV0aEluZm8sXG4gIEZlZSxcbiAgU2lnbkRvYyxcbiAgVHgsXG4gIFR4Qm9keSxcbiAgVHhSYXcsXG59IGZyb20gXCIuLi9pbnRlcmNoYWluL3Byb3RvL3R4XCI7XG5pbXBvcnQgeyBCYXNlUGFyc2VyIH0gZnJvbSBcIi4uL3BhcnNlcnMvYmFzZVwiO1xuXG5leHBvcnQgY29uc3QgVHhQYXJzZXIgPSBCYXNlUGFyc2VyLmZyb21NZXRhKFR4KTtcbmV4cG9ydCBjb25zdCBUeFJhd1BhcnNlciA9IEJhc2VQYXJzZXIuZnJvbU1ldGEoVHhSYXcpO1xuZXhwb3J0IGNvbnN0IFR4Qm9keVBhcnNlciA9IEJhc2VQYXJzZXIuZnJvbU1ldGEoVHhCb2R5KTtcbmV4cG9ydCBjb25zdCBBdXRoSW5mb1BhcnNlciA9IEJhc2VQYXJzZXIuZnJvbU1ldGEoQXV0aEluZm8pO1xuZXhwb3J0IGNvbnN0IEZlZVBhcnNlciA9IEJhc2VQYXJzZXIuZnJvbU1ldGEoRmVlKTtcbmV4cG9ydCBjb25zdCBTaWduRG9jUGFyc2VyID0gQmFzZVBhcnNlci5mcm9tTWV0YShTaWduRG9jKTtcbiJdLCJuYW1lcyI6WyJBdXRoSW5mbyIsIkZlZSIsIlNpZ25Eb2MiLCJUeCIsIlR4Qm9keSIsIlR4UmF3IiwiQmFzZVBhcnNlciIsIlR4UGFyc2VyIiwiZnJvbU1ldGEiLCJUeFJhd1BhcnNlciIsIlR4Qm9keVBhcnNlciIsIkF1dGhJbmZvUGFyc2VyIiwiRmVlUGFyc2VyIiwiU2lnbkRvY1BhcnNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cosmos/src/const/tx.ts\n");

/***/ }),

/***/ "../cosmos/src/index.ts":
/*!******************************!*\
  !*** ../cosmos/src/index.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _interchain_proto_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interchain/proto/auth */ \"../cosmos/src/interchain/proto/auth.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _interchain_proto_auth__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _interchain_proto_auth__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _interchain_proto_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interchain/proto/base */ \"../cosmos/src/interchain/proto/base.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _interchain_proto_base__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _interchain_proto_base__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _interchain_proto_tx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interchain/proto/tx */ \"../cosmos/src/interchain/proto/tx.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _interchain_proto_tx__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _interchain_proto_tx__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interchain/proto/vesting */ \"../cosmos/src/interchain/proto/vesting.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _interchain_proto_vesting__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _interchain_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interchain/types */ \"../cosmos/src/interchain/types.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _interchain_types__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _interchain_types__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./query */ \"../cosmos/src/query.ts\");\n/* harmony import */ var _query_parser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./query.parser */ \"../cosmos/src/query.parser.ts\");\n/* harmony import */ var _signer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./signer */ \"../cosmos/src/signer.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types */ \"../cosmos/src/types.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_8__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_bech__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/bech */ \"../cosmos/src/utils/bech.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_bech__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_bech__WEBPACK_IMPORTED_MODULE_9__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_fee__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/fee */ \"../cosmos/src/utils/fee.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_query__WEBPACK_IMPORTED_MODULE_5__, _query_parser__WEBPACK_IMPORTED_MODULE_6__, _signer__WEBPACK_IMPORTED_MODULE_7__, _utils_fee__WEBPACK_IMPORTED_MODULE_10__]);\n([_query__WEBPACK_IMPORTED_MODULE_5__, _query_parser__WEBPACK_IMPORTED_MODULE_6__, _signer__WEBPACK_IMPORTED_MODULE_7__, _utils_fee__WEBPACK_IMPORTED_MODULE_10__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _query__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _query__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _query_parser__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _query_parser__WEBPACK_IMPORTED_MODULE_6__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _signer__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _signer__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_fee__WEBPACK_IMPORTED_MODULE_10__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_fee__WEBPACK_IMPORTED_MODULE_10__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDQTtBQUNGO0FBQ0s7QUFDUjtBQUNYO0FBQ087QUFDTjtBQUNEO0FBQ0siLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2Nvc21vcy9zcmMvaW5kZXgudHM/NWQwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9pbnRlcmNoYWluL3Byb3RvL2F1dGhcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2ludGVyY2hhaW4vcHJvdG8vYmFzZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaW50ZXJjaGFpbi9wcm90by90eFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaW50ZXJjaGFpbi9wcm90by92ZXN0aW5nXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9pbnRlcmNoYWluL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9xdWVyeVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vcXVlcnkucGFyc2VyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zaWduZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9iZWNoXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9mZWVcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cosmos/src/index.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/any.ts":
/*!***************************************!*\
  !*** ../cosmos/src/interchain/any.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Any\": () => (/* binding */ Any)\n/* harmony export */ });\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binary */ \"../cosmos/src/interchain/binary.ts\");\n\nfunction createBaseAny() {\n  return {\n    typeUrl: \"\",\n    value: new Uint8Array()\n  };\n}\nvar Any = {\n  typeUrl: \"/google.protobuf.Any\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.typeUrl !== \"\") {\n      writer.uint32(10).string(message.typeUrl);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAny();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.typeUrl = reader.string();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$typeUrl, _object$value;\n    var message = createBaseAny();\n    message.typeUrl = (_object$typeUrl = object.typeUrl) !== null && _object$typeUrl !== void 0 ? _object$typeUrl : \"\";\n    message.value = (_object$value = object.value) !== null && _object$value !== void 0 ? _object$value : new Uint8Array();\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      typeUrl: object.type,\n      value: object.value\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.type = message.typeUrl;\n    obj.value = message.value;\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/any.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/binary.ts":
/*!******************************************!*\
  !*** ../cosmos/src/interchain/binary.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BinaryReader\": () => (/* binding */ BinaryReader),\n/* harmony export */   \"BinaryWriter\": () => (/* binding */ BinaryWriter),\n/* harmony export */   \"WireType\": () => (/* binding */ WireType)\n/* harmony export */ });\n/* harmony import */ var _utf8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utf8 */ \"../cosmos/src/interchain/utf8.ts\");\n/* harmony import */ var _varint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./varint */ \"../cosmos/src/interchain/varint.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * This file and any referenced files were automatically generated by @osmonauts/telescope@0.99.10\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\n\n// Copyright (c) 2016, Daniel Wirtz  All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n// * Neither the name of its author, nor the names of its contributors\n//   may be used to endorse or promote products derived from this software\n//   without specific prior written permission.\n\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// ---\n\n// Code generated by the command line utilities is owned by the owner\n// of the input file used when generating it. This code is not\n// standalone and requires a support library to be linked with it. This\n// support library is itself covered by the above license.\n\n\n\nvar WireType = /*#__PURE__*/function (WireType) {\n  WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n  WireType[WireType[\"Fixed64\"] = 1] = \"Fixed64\";\n  WireType[WireType[\"Bytes\"] = 2] = \"Bytes\";\n  WireType[WireType[\"Fixed32\"] = 5] = \"Fixed32\";\n  return WireType;\n}({});\n\n// Reader\n\nvar BinaryReader = /*#__PURE__*/function () {\n  function BinaryReader(buf) {\n    _classCallCheck(this, BinaryReader);\n    _defineProperty(this, \"buf\", void 0);\n    _defineProperty(this, \"pos\", void 0);\n    _defineProperty(this, \"type\", void 0);\n    _defineProperty(this, \"len\", void 0);\n    this.buf = buf ? new Uint8Array(buf) : new Uint8Array(0);\n    this.pos = 0;\n    this.type = 0;\n    this.len = this.buf.length;\n  }\n  _createClass(BinaryReader, [{\n    key: \"assertBounds\",\n    value: function assertBounds() {\n      if (this.pos > this.len) throw new RangeError(\"premature EOF\");\n    }\n  }, {\n    key: \"tag\",\n    value: function tag() {\n      var tag = this.uint32(),\n        fieldNo = tag >>> 3,\n        wireType = tag & 7;\n      if (fieldNo <= 0 || wireType < 0 || wireType > 5) throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n      return [fieldNo, wireType, tag];\n    }\n  }, {\n    key: \"skip\",\n    value: function skip(length) {\n      if (typeof length === \"number\") {\n        if (this.pos + length > this.len) throw indexOutOfRange(this, length);\n        this.pos += length;\n      } else {\n        do {\n          if (this.pos >= this.len) throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n      }\n      return this;\n    }\n  }, {\n    key: \"skipType\",\n    value: function skipType(wireType) {\n      switch (wireType) {\n        case WireType.Varint:\n          this.skip();\n          break;\n        case WireType.Fixed64:\n          this.skip(8);\n          break;\n        case WireType.Bytes:\n          this.skip(this.uint32());\n          break;\n        case 3:\n          while ((wireType = this.uint32() & 7) !== 4) {\n            this.skipType(wireType);\n          }\n          break;\n        case WireType.Fixed32:\n          this.skip(4);\n          break;\n\n        /* istanbul ignore next */\n        default:\n          throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n      }\n      return this;\n    }\n  }, {\n    key: \"uint32\",\n    value: function uint32() {\n      return _varint__WEBPACK_IMPORTED_MODULE_1__.varint32read.bind(this)();\n    }\n  }, {\n    key: \"int32\",\n    value: function int32() {\n      return this.uint32() | 0;\n    }\n  }, {\n    key: \"sint32\",\n    value: function sint32() {\n      var num = this.uint32();\n      return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n  }, {\n    key: \"fixed32\",\n    value: function fixed32() {\n      var val = (0,_varint__WEBPACK_IMPORTED_MODULE_1__.readUInt32)(this.buf, this.pos);\n      this.pos += 4;\n      return val;\n    }\n  }, {\n    key: \"sfixed32\",\n    value: function sfixed32() {\n      var val = (0,_varint__WEBPACK_IMPORTED_MODULE_1__.readInt32)(this.buf, this.pos);\n      this.pos += 4;\n      return val;\n    }\n  }, {\n    key: \"int64\",\n    value: function int64() {\n      var _varint64read$bind = _varint__WEBPACK_IMPORTED_MODULE_1__.varint64read.bind(this)(),\n        _varint64read$bind2 = _slicedToArray(_varint64read$bind, 2),\n        lo = _varint64read$bind2[0],\n        hi = _varint64read$bind2[1];\n      return BigInt((0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64ToString)(lo, hi));\n    }\n  }, {\n    key: \"uint64\",\n    value: function uint64() {\n      var _varint64read$bind3 = _varint__WEBPACK_IMPORTED_MODULE_1__.varint64read.bind(this)(),\n        _varint64read$bind4 = _slicedToArray(_varint64read$bind3, 2),\n        lo = _varint64read$bind4[0],\n        hi = _varint64read$bind4[1];\n      return BigInt((0,_varint__WEBPACK_IMPORTED_MODULE_1__.uInt64ToString)(lo, hi));\n    }\n  }, {\n    key: \"sint64\",\n    value: function sint64() {\n      var _varint64read$bind5 = _varint__WEBPACK_IMPORTED_MODULE_1__.varint64read.bind(this)(),\n        _varint64read$bind6 = _slicedToArray(_varint64read$bind5, 2),\n        lo = _varint64read$bind6[0],\n        hi = _varint64read$bind6[1];\n      // zig zag\n      var _zzDecode = (0,_varint__WEBPACK_IMPORTED_MODULE_1__.zzDecode)(lo, hi);\n      var _zzDecode2 = _slicedToArray(_zzDecode, 2);\n      lo = _zzDecode2[0];\n      hi = _zzDecode2[1];\n      return BigInt((0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64ToString)(lo, hi));\n    }\n  }, {\n    key: \"fixed64\",\n    value: function fixed64() {\n      var lo = this.sfixed32();\n      var hi = this.sfixed32();\n      return BigInt((0,_varint__WEBPACK_IMPORTED_MODULE_1__.uInt64ToString)(lo, hi));\n    }\n  }, {\n    key: \"sfixed64\",\n    value: function sfixed64() {\n      var lo = this.sfixed32();\n      var hi = this.sfixed32();\n      return BigInt((0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64ToString)(lo, hi));\n    }\n  }, {\n    key: \"float\",\n    value: function float() {\n      throw new Error(\"float not supported\");\n    }\n  }, {\n    key: \"double\",\n    value: function double() {\n      throw new Error(\"double not supported\");\n    }\n  }, {\n    key: \"bool\",\n    value: function bool() {\n      var _varint64read$bind7 = _varint__WEBPACK_IMPORTED_MODULE_1__.varint64read.bind(this)(),\n        _varint64read$bind8 = _slicedToArray(_varint64read$bind7, 2),\n        lo = _varint64read$bind8[0],\n        hi = _varint64read$bind8[1];\n      return lo !== 0 || hi !== 0;\n    }\n  }, {\n    key: \"bytes\",\n    value: function bytes() {\n      var len = this.uint32(),\n        start = this.pos;\n      this.pos += len;\n      this.assertBounds();\n      return this.buf.subarray(start, start + len);\n    }\n  }, {\n    key: \"string\",\n    value: function string() {\n      var bytes = this.bytes();\n      return (0,_utf8__WEBPACK_IMPORTED_MODULE_0__.utf8Read)(bytes, 0, bytes.length);\n    }\n  }]);\n  return BinaryReader;\n}();\n\n// Writer\nvar Op = /*#__PURE__*/_createClass(function Op(fn, len, val) {\n  _classCallCheck(this, Op);\n  _defineProperty(this, \"fn\", void 0);\n  _defineProperty(this, \"len\", void 0);\n  _defineProperty(this, \"val\", void 0);\n  _defineProperty(this, \"next\", void 0);\n  this.fn = fn;\n  this.len = len;\n  this.val = val;\n});\nvar State = /*#__PURE__*/_createClass(function State(writer) {\n  _classCallCheck(this, State);\n  _defineProperty(this, \"head\", void 0);\n  _defineProperty(this, \"tail\", void 0);\n  _defineProperty(this, \"len\", void 0);\n  _defineProperty(this, \"next\", void 0);\n  this.head = writer.head;\n  this.tail = writer.tail;\n  this.len = writer.len;\n  this.next = writer.states;\n});\nvar BinaryWriter = /*#__PURE__*/function () {\n  function BinaryWriter() {\n    _classCallCheck(this, BinaryWriter);\n    _defineProperty(this, \"len\", 0);\n    _defineProperty(this, \"head\", void 0);\n    _defineProperty(this, \"tail\", void 0);\n    _defineProperty(this, \"states\", void 0);\n    // uint64 is the same with int64\n    _defineProperty(this, \"uint64\", BinaryWriter.prototype.int64);\n    // sfixed64 is the same with fixed64\n    _defineProperty(this, \"sfixed64\", BinaryWriter.prototype.fixed64);\n    // sfixed32 is the same with fixed32\n    _defineProperty(this, \"sfixed32\", BinaryWriter.prototype.fixed32);\n    this.head = new Op(null, 0, 0);\n    this.tail = this.head;\n    this.states = null;\n  }\n  _createClass(BinaryWriter, [{\n    key: \"_push\",\n    value: function _push(fn, len, val) {\n      this.tail = this.tail.next = new Op(fn, len, val);\n      this.len += len;\n      return this;\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      var head = this.head.next,\n        pos = 0;\n      var buf = BinaryWriter.alloc(this.len);\n      while (head) {\n        var _head$fn, _head;\n        (_head$fn = (_head = head).fn) === null || _head$fn === void 0 || _head$fn.call(_head, head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n      }\n      return buf;\n    }\n  }, {\n    key: \"fork\",\n    value: function fork() {\n      this.states = new State(this);\n      this.head = this.tail = new Op(null, 0, 0);\n      this.len = 0;\n      return this;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.states) {\n        this.head = this.states.head;\n        this.tail = this.states.tail;\n        this.len = this.states.len;\n        this.states = this.states.next;\n      } else {\n        this.head = this.tail = new Op(null, 0, 0);\n        this.len = 0;\n      }\n      return this;\n    }\n  }, {\n    key: \"ldelim\",\n    value: function ldelim() {\n      var head = this.head,\n        tail = this.tail,\n        len = this.len;\n      this.reset().uint32(len);\n      if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n      }\n      return this;\n    }\n  }, {\n    key: \"tag\",\n    value: function tag(fieldNo, type) {\n      return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n  }, {\n    key: \"uint32\",\n    value: function uint32(value) {\n      this.len += (this.tail = this.tail.next = new Op(_varint__WEBPACK_IMPORTED_MODULE_1__.writeVarint32, (value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;\n      return this;\n    }\n  }, {\n    key: \"int32\",\n    value: function int32(value) {\n      return value < 0 ? this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeVarint64, 10, (0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value.toString())) // 10 bytes per spec\n      : this.uint32(value);\n    }\n  }, {\n    key: \"sint32\",\n    value: function sint32(value) {\n      return this.uint32((value << 1 ^ value >> 31) >>> 0);\n    }\n  }, {\n    key: \"int64\",\n    value: function int64(value) {\n      var _int64FromString = (0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value.toString()),\n        lo = _int64FromString.lo,\n        hi = _int64FromString.hi;\n      return this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeVarint64, (0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64Length)(lo, hi), {\n        lo: lo,\n        hi: hi\n      });\n    }\n  }, {\n    key: \"sint64\",\n    value: function sint64(value) {\n      var _int64FromString2 = (0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value.toString()),\n        lo = _int64FromString2.lo,\n        hi = _int64FromString2.hi;\n      // zig zag\n      var _zzEncode = (0,_varint__WEBPACK_IMPORTED_MODULE_1__.zzEncode)(lo, hi);\n      var _zzEncode2 = _slicedToArray(_zzEncode, 2);\n      lo = _zzEncode2[0];\n      hi = _zzEncode2[1];\n      return this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeVarint64, (0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64Length)(lo, hi), {\n        lo: lo,\n        hi: hi\n      });\n    }\n  }, {\n    key: \"fixed64\",\n    value: function fixed64(value) {\n      var _int64FromString3 = (0,_varint__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value.toString()),\n        lo = _int64FromString3.lo,\n        hi = _int64FromString3.hi;\n      return this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeFixed32, 4, lo)._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeFixed32, 4, hi);\n    }\n  }, {\n    key: \"bool\",\n    value: function bool(value) {\n      return this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeByte, 1, value ? 1 : 0);\n    }\n  }, {\n    key: \"fixed32\",\n    value: function fixed32(value) {\n      return this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeFixed32, 4, value >>> 0);\n    }\n  }, {\n    key: \"float\",\n    value: function float(value) {\n      throw new Error(\"float not supported\" + value);\n    }\n  }, {\n    key: \"double\",\n    value: function double(value) {\n      throw new Error(\"double not supported\" + value);\n    }\n  }, {\n    key: \"bytes\",\n    value: function bytes(value) {\n      var len = value.length >>> 0;\n      if (!len) return this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeByte, 1, 0);\n      return this.uint32(len)._push(writeBytes, len, value);\n    }\n  }, {\n    key: \"string\",\n    value: function string(value) {\n      var len = (0,_utf8__WEBPACK_IMPORTED_MODULE_0__.utf8Length)(value);\n      return len ? this.uint32(len)._push(_utf8__WEBPACK_IMPORTED_MODULE_0__.utf8Write, len, value) : this._push(_varint__WEBPACK_IMPORTED_MODULE_1__.writeByte, 1, 0);\n    }\n  }], [{\n    key: \"create\",\n    value: function create() {\n      return new BinaryWriter();\n    }\n  }, {\n    key: \"alloc\",\n    value: function alloc(size) {\n      if (typeof Uint8Array !== \"undefined\") {\n        return pool(function (size) {\n          return new Uint8Array(size);\n        }, Uint8Array.prototype.subarray)(size);\n      } else {\n        return new Array(size);\n      }\n    }\n  }]);\n  return BinaryWriter;\n}();\nfunction writeBytes(val, buf, pos) {\n  if (typeof Uint8Array !== \"undefined\") {\n    buf.set(val, pos);\n  } else {\n    for (var i = 0; i < val.length; ++i) buf[pos + i] = val[i];\n  }\n}\nfunction pool(alloc, slice, size) {\n  var SIZE = size || 8192;\n  var MAX = SIZE >>> 1;\n  var slab = null;\n  var offset = SIZE;\n  return function pool_alloc(size) {\n    if (size < 1 || size > MAX) return alloc(size);\n    if (offset + size > SIZE) {\n      slab = alloc(SIZE);\n      offset = 0;\n    }\n    var buf = slice.call(slab, offset, offset += size);\n    if (offset & 7)\n      // align to 32 bit\n      offset = (offset | 7) + 1;\n    return buf;\n  };\n}\nfunction indexOutOfRange(reader, writeLength) {\n  return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/binary.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/helpers.ts":
/*!*******************************************!*\
  !*** ../cosmos/src/interchain/helpers.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isSet\": () => (/* binding */ isSet),\n/* harmony export */   \"signModeFromJSON\": () => (/* binding */ signModeFromJSON)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"../cosmos/src/interchain/types.ts\");\n\n\n/* eslint-disable @typescript-eslint/ban-types */\n\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}\nfunction signModeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return _types__WEBPACK_IMPORTED_MODULE_0__.SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return _types__WEBPACK_IMPORTED_MODULE_0__.SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return _types__WEBPACK_IMPORTED_MODULE_0__.SignMode.SIGN_MODE_TEXTUAL;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return _types__WEBPACK_IMPORTED_MODULE_0__.SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case 191:\n    case \"SIGN_MODE_EIP_191\":\n      return _types__WEBPACK_IMPORTED_MODULE_0__.SignMode.SIGN_MODE_EIP_191;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return _types__WEBPACK_IMPORTED_MODULE_0__.SignMode.UNRECOGNIZED;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL2hlbHBlcnMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1DOztBQUVuQzs7QUFxQk8sU0FBU0MsS0FBS0EsQ0FBQ0MsS0FBVSxFQUFXO0VBQ3pDLE9BQU9BLEtBQUssS0FBSyxJQUFJLElBQUlBLEtBQUssS0FBS0MsU0FBUztBQUM5QztBQUVPLFNBQVNDLGdCQUFnQkEsQ0FBQ0MsTUFBVyxFQUFZO0VBQ3RELFFBQVFBLE1BQU07SUFDWixLQUFLLENBQUM7SUFDTixLQUFLLHVCQUF1QjtNQUMxQixPQUFPTCxrRUFBOEI7SUFDdkMsS0FBSyxDQUFDO0lBQ04sS0FBSyxrQkFBa0I7TUFDckIsT0FBT0EsNkRBQXlCO0lBQ2xDLEtBQUssQ0FBQztJQUNOLEtBQUssbUJBQW1CO01BQ3RCLE9BQU9BLDhEQUEwQjtJQUNuQyxLQUFLLEdBQUc7SUFDUixLQUFLLDZCQUE2QjtNQUNoQyxPQUFPQSx3RUFBb0M7SUFDN0MsS0FBSyxHQUFHO0lBQ1IsS0FBSyxtQkFBbUI7TUFDdEIsT0FBT0EsOERBQTBCO0lBQ25DLEtBQUssQ0FBQyxDQUFDO0lBQ1AsS0FBSyxjQUFjO0lBQ25CO01BQ0UsT0FBT0EseURBQXFCO0VBQ2hDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2Nvc21vcy9zcmMvaW50ZXJjaGFpbi9oZWxwZXJzLnRzPzdmZjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2lnbk1vZGUgfSBmcm9tIFwiLi90eXBlc1wiO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXR5cGVzICovXG50eXBlIEJ1aWx0aW4gPVxuICB8IERhdGVcbiAgfCBGdW5jdGlvblxuICB8IFVpbnQ4QXJyYXlcbiAgfCBzdHJpbmdcbiAgfCBudW1iZXJcbiAgfCBiaWdpbnRcbiAgfCBib29sZWFuXG4gIHwgdW5kZWZpbmVkO1xuXG5leHBvcnQgdHlwZSBEZWVwUGFydGlhbDxUPiA9IFQgZXh0ZW5kcyBCdWlsdGluXG4gID8gVFxuICA6IFQgZXh0ZW5kcyBBcnJheTxpbmZlciBVPlxuICA/IEFycmF5PERlZXBQYXJ0aWFsPFU+PlxuICA6IFQgZXh0ZW5kcyBSZWFkb25seUFycmF5PGluZmVyIFU+XG4gID8gUmVhZG9ubHlBcnJheTxEZWVwUGFydGlhbDxVPj5cbiAgOiBUIGV4dGVuZHMge31cbiAgPyB7IFtLIGluIGtleW9mIFRdPzogRGVlcFBhcnRpYWw8VFtLXT4gfVxuICA6IFBhcnRpYWw8VD47XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1NldCh2YWx1ZTogYW55KTogYm9vbGVhbiB7XG4gIHJldHVybiB2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2lnbk1vZGVGcm9tSlNPTihvYmplY3Q6IGFueSk6IFNpZ25Nb2RlIHtcbiAgc3dpdGNoIChvYmplY3QpIHtcbiAgICBjYXNlIDA6XG4gICAgY2FzZSBcIlNJR05fTU9ERV9VTlNQRUNJRklFRFwiOlxuICAgICAgcmV0dXJuIFNpZ25Nb2RlLlNJR05fTU9ERV9VTlNQRUNJRklFRDtcbiAgICBjYXNlIDE6XG4gICAgY2FzZSBcIlNJR05fTU9ERV9ESVJFQ1RcIjpcbiAgICAgIHJldHVybiBTaWduTW9kZS5TSUdOX01PREVfRElSRUNUO1xuICAgIGNhc2UgMjpcbiAgICBjYXNlIFwiU0lHTl9NT0RFX1RFWFRVQUxcIjpcbiAgICAgIHJldHVybiBTaWduTW9kZS5TSUdOX01PREVfVEVYVFVBTDtcbiAgICBjYXNlIDEyNzpcbiAgICBjYXNlIFwiU0lHTl9NT0RFX0xFR0FDWV9BTUlOT19KU09OXCI6XG4gICAgICByZXR1cm4gU2lnbk1vZGUuU0lHTl9NT0RFX0xFR0FDWV9BTUlOT19KU09OO1xuICAgIGNhc2UgMTkxOlxuICAgIGNhc2UgXCJTSUdOX01PREVfRUlQXzE5MVwiOlxuICAgICAgcmV0dXJuIFNpZ25Nb2RlLlNJR05fTU9ERV9FSVBfMTkxO1xuICAgIGNhc2UgLTE6XG4gICAgY2FzZSBcIlVOUkVDT0dOSVpFRFwiOlxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gU2lnbk1vZGUuVU5SRUNPR05JWkVEO1xuICB9XG59XG4iXSwibmFtZXMiOlsiU2lnbk1vZGUiLCJpc1NldCIsInZhbHVlIiwidW5kZWZpbmVkIiwic2lnbk1vZGVGcm9tSlNPTiIsIm9iamVjdCIsIlNJR05fTU9ERV9VTlNQRUNJRklFRCIsIlNJR05fTU9ERV9ESVJFQ1QiLCJTSUdOX01PREVfVEVYVFVBTCIsIlNJR05fTU9ERV9MRUdBQ1lfQU1JTk9fSlNPTiIsIlNJR05fTU9ERV9FSVBfMTkxIiwiVU5SRUNPR05JWkVEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/helpers.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/auth.ts":
/*!**********************************************!*\
  !*** ../cosmos/src/interchain/proto/auth.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseAccount\": () => (/* binding */ BaseAccount),\n/* harmony export */   \"ModuleAccount\": () => (/* binding */ ModuleAccount)\n/* harmony export */ });\n/* harmony import */ var _any__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../any */ \"../cosmos/src/interchain/any.ts\");\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n/**\n * BaseAccount defines a base account type. It contains all the necessary fields\n * for basic account functionality. Any custom account type should extend this\n * type for additional functionality (e.g. vesting).\n */\n\n/**\n * BaseAccount defines a base account type. It contains all the necessary fields\n * for basic account functionality. Any custom account type should extend this\n * type for additional functionality (e.g. vesting).\n */\n\n/** ModuleAccount defines an account for modules that holds coins on a pool. */\n\n/** ModuleAccount defines an account for modules that holds coins on a pool. */\n\nfunction createBaseBaseAccount() {\n  return {\n    address: \"\",\n    pubKey: undefined,\n    accountNumber: BigInt(0),\n    sequence: BigInt(0)\n  };\n}\nvar BaseAccount = {\n  typeUrl: \"/cosmos.auth.v1beta1.BaseAccount\",\n  aminoType: \"cosmos-sdk/BaseAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.pubKey !== undefined) {\n      _any__WEBPACK_IMPORTED_MODULE_0__.Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.accountNumber !== BigInt(0)) {\n      writer.uint32(24).uint64(message.accountNumber);\n    }\n    if (message.sequence !== BigInt(0)) {\n      writer.uint32(32).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBaseAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.pubKey = _any__WEBPACK_IMPORTED_MODULE_0__.Any.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.accountNumber = reader.uint64();\n          break;\n        case 4:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$address;\n    var message = createBaseBaseAccount();\n    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : \"\";\n    message.pubKey = object.pubKey !== undefined && object.pubKey !== null ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromPartial(object.pubKey) : undefined;\n    message.accountNumber = object.accountNumber !== undefined && object.accountNumber !== null ? BigInt(object.accountNumber.toString()) : BigInt(0);\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? BigInt(object.sequence.toString()) : BigInt(0);\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      address: object.address,\n      pubKey: object !== null && object !== void 0 && object.pub_key ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromAmino(object.pub_key) : undefined,\n      accountNumber: BigInt(object.account_number),\n      sequence: BigInt(object.sequence)\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.address = message.address;\n    obj.pub_key = message.pubKey ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.toAmino(message.pubKey) : undefined;\n    obj.account_number = message.accountNumber ? message.accountNumber.toString() : undefined;\n    obj.sequence = message.sequence ? message.sequence.toString() : undefined;\n    return obj;\n  }\n};\nfunction createBaseModuleAccount() {\n  return {\n    baseAccount: BaseAccount.fromPartial({}),\n    name: \"\",\n    permissions: []\n  };\n}\nvar ModuleAccount = {\n  typeUrl: \"/cosmos.auth.v1beta1.ModuleAccount\",\n  aminoType: \"cosmos-sdk/ModuleAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.baseAccount !== undefined) {\n      BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    var _iterator = _createForOfIteratorHelper(message.permissions),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(26).string(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseModuleAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.name = reader.string();\n          break;\n        case 3:\n          message.permissions.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$name, _object$permissions;\n    var message = createBaseModuleAccount();\n    message.baseAccount = object.baseAccount !== undefined && object.baseAccount !== null ? BaseAccount.fromPartial(object.baseAccount) : undefined;\n    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : \"\";\n    message.permissions = ((_object$permissions = object.permissions) === null || _object$permissions === void 0 ? void 0 : _object$permissions.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      baseAccount: object !== null && object !== void 0 && object.base_account ? BaseAccount.fromAmino(object.base_account) : undefined,\n      name: object.name,\n      permissions: Array.isArray(object === null || object === void 0 ? void 0 : object.permissions) ? object.permissions.map(function (e) {\n        return e;\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.base_account = message.baseAccount ? BaseAccount.toAmino(message.baseAccount) : undefined;\n    obj.name = message.name;\n    if (message.permissions) {\n      obj.permissions = message.permissions.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.permissions = [];\n    }\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/auth.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/base.ts":
/*!**********************************************!*\
  !*** ../cosmos/src/interchain/proto/base.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Coin\": () => (/* binding */ Coin)\n/* harmony export */ });\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\n\n\n/**\n * Coin defines a token with a denomination and an amount.\n *\n * NOTE: The amount field is an Int which implements the custom method\n * signatures required by gogoproto.\n */\n\n/**\n * Coin defines a token with a denomination and an amount.\n *\n * NOTE: The amount field is an Int which implements the custom method\n * signatures required by gogoproto.\n */\n\nfunction createBaseCoin() {\n  return {\n    denom: \"\",\n    amount: \"\"\n  };\n}\nvar Coin = {\n  typeUrl: \"/cosmos.base.v1beta1.Coin\",\n  aminoType: \"cosmos-sdk/Coin\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(18).string(message.amount);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCoin();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.amount = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$denom, _object$amount;\n    var message = createBaseCoin();\n    message.denom = (_object$denom = object.denom) !== null && _object$denom !== void 0 ? _object$denom : \"\";\n    message.amount = (_object$amount = object.amount) !== null && _object$amount !== void 0 ? _object$amount : \"\";\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      denom: object.denom,\n      amount: object.amount\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.denom = message.denom;\n    obj.amount = message.amount;\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL3Byb3RvL2Jhc2UudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBS0EsU0FBU0UsY0FBY0EsQ0FBQSxFQUFTO0VBQzlCLE9BQU87SUFDTEMsS0FBSyxFQUFFLEVBQUU7SUFDVEMsTUFBTSxFQUFFO0VBQ1YsQ0FBQztBQUNIO0FBQ08sSUFBTUMsSUFBSSxHQUFHO0VBQ2xCQyxPQUFPLEVBQUUsMkJBQTJCO0VBQ3BDQyxTQUFTLEVBQUUsaUJBQWlCO0VBQzVCQyxNQUFNLFdBQUFBLE9BQ0pDLE9BQWEsRUFFQztJQUFBLElBRGRDLE1BQW9CLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHVix3REFBbUIsQ0FBQyxDQUFDO0lBRTVDLElBQUlRLE9BQU8sQ0FBQ04sS0FBSyxLQUFLLEVBQUUsRUFBRTtNQUN4Qk8sTUFBTSxDQUFDSyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUNDLE1BQU0sQ0FBQ1AsT0FBTyxDQUFDTixLQUFLLENBQUM7SUFDekM7SUFDQSxJQUFJTSxPQUFPLENBQUNMLE1BQU0sS0FBSyxFQUFFLEVBQUU7TUFDekJNLE1BQU0sQ0FBQ0ssTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDQyxNQUFNLENBQUNQLE9BQU8sQ0FBQ0wsTUFBTSxDQUFDO0lBQzFDO0lBQ0EsT0FBT00sTUFBTTtFQUNmLENBQUM7RUFDRE8sTUFBTSxXQUFBQSxPQUFDQyxLQUFnQyxFQUFFTixNQUFlLEVBQVE7SUFDOUQsSUFBTU8sTUFBTSxHQUNWRCxLQUFLLFlBQVlsQixpREFBWSxHQUFHa0IsS0FBSyxHQUFHLElBQUlsQixpREFBWSxDQUFDa0IsS0FBSyxDQUFDO0lBQ2pFLElBQU1FLEdBQUcsR0FBR1IsTUFBTSxLQUFLQyxTQUFTLEdBQUdNLE1BQU0sQ0FBQ0UsR0FBRyxHQUFHRixNQUFNLENBQUNHLEdBQUcsR0FBR1YsTUFBTTtJQUNuRSxJQUFNSCxPQUFPLEdBQUdQLGNBQWMsQ0FBQyxDQUFDO0lBQ2hDLE9BQU9pQixNQUFNLENBQUNHLEdBQUcsR0FBR0YsR0FBRyxFQUFFO01BQ3ZCLElBQU1HLEdBQUcsR0FBR0osTUFBTSxDQUFDSixNQUFNLENBQUMsQ0FBQztNQUMzQixRQUFRUSxHQUFHLEtBQUssQ0FBQztRQUNmLEtBQUssQ0FBQztVQUNKZCxPQUFPLENBQUNOLEtBQUssR0FBR2dCLE1BQU0sQ0FBQ0gsTUFBTSxDQUFDLENBQUM7VUFDL0I7UUFDRixLQUFLLENBQUM7VUFDSlAsT0FBTyxDQUFDTCxNQUFNLEdBQUdlLE1BQU0sQ0FBQ0gsTUFBTSxDQUFDLENBQUM7VUFDaEM7UUFDRjtVQUNFRyxNQUFNLENBQUNLLFFBQVEsQ0FBQ0QsR0FBRyxHQUFHLENBQUMsQ0FBQztVQUN4QjtNQUNKO0lBQ0Y7SUFDQSxPQUFPZCxPQUFPO0VBQ2hCLENBQUM7RUFDRGdCLFdBQVcsV0FBQUEsWUFBQ0MsTUFBeUIsRUFBUTtJQUFBLElBQUFDLGFBQUEsRUFBQUMsY0FBQTtJQUMzQyxJQUFNbkIsT0FBTyxHQUFHUCxjQUFjLENBQUMsQ0FBQztJQUNoQ08sT0FBTyxDQUFDTixLQUFLLElBQUF3QixhQUFBLEdBQUdELE1BQU0sQ0FBQ3ZCLEtBQUssY0FBQXdCLGFBQUEsY0FBQUEsYUFBQSxHQUFJLEVBQUU7SUFDbENsQixPQUFPLENBQUNMLE1BQU0sSUFBQXdCLGNBQUEsR0FBR0YsTUFBTSxDQUFDdEIsTUFBTSxjQUFBd0IsY0FBQSxjQUFBQSxjQUFBLEdBQUksRUFBRTtJQUNwQyxPQUFPbkIsT0FBTztFQUNoQixDQUFDO0VBQ0RvQixTQUFTLFdBQUFBLFVBQUNILE1BQWlCLEVBQVE7SUFDakMsT0FBTztNQUNMdkIsS0FBSyxFQUFFdUIsTUFBTSxDQUFDdkIsS0FBSztNQUNuQkMsTUFBTSxFQUFFc0IsTUFBTSxDQUFDdEI7SUFDakIsQ0FBQztFQUNILENBQUM7RUFDRDBCLE9BQU8sV0FBQUEsUUFBQ3JCLE9BQWEsRUFBYTtJQUNoQyxJQUFNc0IsR0FBUSxHQUFHLENBQUMsQ0FBQztJQUNuQkEsR0FBRyxDQUFDNUIsS0FBSyxHQUFHTSxPQUFPLENBQUNOLEtBQUs7SUFDekI0QixHQUFHLENBQUMzQixNQUFNLEdBQUdLLE9BQU8sQ0FBQ0wsTUFBTTtJQUMzQixPQUFPMkIsR0FBRztFQUNaO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzaWduL2V4YW1wbGUvLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL3Byb3RvL2Jhc2UudHM/NzFiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaW5hcnlSZWFkZXIsIEJpbmFyeVdyaXRlciB9IGZyb20gXCIuLi9iaW5hcnlcIjtcbmltcG9ydCB7IERlZXBQYXJ0aWFsIH0gZnJvbSBcIi4uL2hlbHBlcnNcIjtcbi8qKlxuICogQ29pbiBkZWZpbmVzIGEgdG9rZW4gd2l0aCBhIGRlbm9taW5hdGlvbiBhbmQgYW4gYW1vdW50LlxuICpcbiAqIE5PVEU6IFRoZSBhbW91bnQgZmllbGQgaXMgYW4gSW50IHdoaWNoIGltcGxlbWVudHMgdGhlIGN1c3RvbSBtZXRob2RcbiAqIHNpZ25hdHVyZXMgcmVxdWlyZWQgYnkgZ29nb3Byb3RvLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENvaW4ge1xuICBkZW5vbTogc3RyaW5nO1xuICBhbW91bnQ6IHN0cmluZztcbn1cbi8qKlxuICogQ29pbiBkZWZpbmVzIGEgdG9rZW4gd2l0aCBhIGRlbm9taW5hdGlvbiBhbmQgYW4gYW1vdW50LlxuICpcbiAqIE5PVEU6IFRoZSBhbW91bnQgZmllbGQgaXMgYW4gSW50IHdoaWNoIGltcGxlbWVudHMgdGhlIGN1c3RvbSBtZXRob2RcbiAqIHNpZ25hdHVyZXMgcmVxdWlyZWQgYnkgZ29nb3Byb3RvLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENvaW5BbWlubyB7XG4gIGRlbm9tOiBzdHJpbmc7XG4gIGFtb3VudDogc3RyaW5nO1xufVxuZnVuY3Rpb24gY3JlYXRlQmFzZUNvaW4oKTogQ29pbiB7XG4gIHJldHVybiB7XG4gICAgZGVub206IFwiXCIsXG4gICAgYW1vdW50OiBcIlwiLFxuICB9O1xufVxuZXhwb3J0IGNvbnN0IENvaW4gPSB7XG4gIHR5cGVVcmw6IFwiL2Nvc21vcy5iYXNlLnYxYmV0YTEuQ29pblwiLFxuICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Db2luXCIsXG4gIGVuY29kZShcbiAgICBtZXNzYWdlOiBDb2luLFxuICAgIHdyaXRlcjogQmluYXJ5V3JpdGVyID0gQmluYXJ5V3JpdGVyLmNyZWF0ZSgpXG4gICk6IEJpbmFyeVdyaXRlciB7XG4gICAgaWYgKG1lc3NhZ2UuZGVub20gIT09IFwiXCIpIHtcbiAgICAgIHdyaXRlci51aW50MzIoMTApLnN0cmluZyhtZXNzYWdlLmRlbm9tKTtcbiAgICB9XG4gICAgaWYgKG1lc3NhZ2UuYW1vdW50ICE9PSBcIlwiKSB7XG4gICAgICB3cml0ZXIudWludDMyKDE4KS5zdHJpbmcobWVzc2FnZS5hbW91bnQpO1xuICAgIH1cbiAgICByZXR1cm4gd3JpdGVyO1xuICB9LFxuICBkZWNvZGUoaW5wdXQ6IEJpbmFyeVJlYWRlciB8IFVpbnQ4QXJyYXksIGxlbmd0aD86IG51bWJlcik6IENvaW4ge1xuICAgIGNvbnN0IHJlYWRlciA9XG4gICAgICBpbnB1dCBpbnN0YW5jZW9mIEJpbmFyeVJlYWRlciA/IGlucHV0IDogbmV3IEJpbmFyeVJlYWRlcihpbnB1dCk7XG4gICAgY29uc3QgZW5kID0gbGVuZ3RoID09PSB1bmRlZmluZWQgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDtcbiAgICBjb25zdCBtZXNzYWdlID0gY3JlYXRlQmFzZUNvaW4oKTtcbiAgICB3aGlsZSAocmVhZGVyLnBvcyA8IGVuZCkge1xuICAgICAgY29uc3QgdGFnID0gcmVhZGVyLnVpbnQzMigpO1xuICAgICAgc3dpdGNoICh0YWcgPj4+IDMpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgIG1lc3NhZ2UuZGVub20gPSByZWFkZXIuc3RyaW5nKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICBtZXNzYWdlLmFtb3VudCA9IHJlYWRlci5zdHJpbmcoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZXNzYWdlO1xuICB9LFxuICBmcm9tUGFydGlhbChvYmplY3Q6IERlZXBQYXJ0aWFsPENvaW4+KTogQ29pbiB7XG4gICAgY29uc3QgbWVzc2FnZSA9IGNyZWF0ZUJhc2VDb2luKCk7XG4gICAgbWVzc2FnZS5kZW5vbSA9IG9iamVjdC5kZW5vbSA/PyBcIlwiO1xuICAgIG1lc3NhZ2UuYW1vdW50ID0gb2JqZWN0LmFtb3VudCA/PyBcIlwiO1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9LFxuICBmcm9tQW1pbm8ob2JqZWN0OiBDb2luQW1pbm8pOiBDb2luIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGVub206IG9iamVjdC5kZW5vbSxcbiAgICAgIGFtb3VudDogb2JqZWN0LmFtb3VudCxcbiAgICB9O1xuICB9LFxuICB0b0FtaW5vKG1lc3NhZ2U6IENvaW4pOiBDb2luQW1pbm8ge1xuICAgIGNvbnN0IG9iajogYW55ID0ge307XG4gICAgb2JqLmRlbm9tID0gbWVzc2FnZS5kZW5vbTtcbiAgICBvYmouYW1vdW50ID0gbWVzc2FnZS5hbW91bnQ7XG4gICAgcmV0dXJuIG9iajtcbiAgfSxcbn07XG4iXSwibmFtZXMiOlsiQmluYXJ5UmVhZGVyIiwiQmluYXJ5V3JpdGVyIiwiY3JlYXRlQmFzZUNvaW4iLCJkZW5vbSIsImFtb3VudCIsIkNvaW4iLCJ0eXBlVXJsIiwiYW1pbm9UeXBlIiwiZW5jb2RlIiwibWVzc2FnZSIsIndyaXRlciIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImNyZWF0ZSIsInVpbnQzMiIsInN0cmluZyIsImRlY29kZSIsImlucHV0IiwicmVhZGVyIiwiZW5kIiwibGVuIiwicG9zIiwidGFnIiwic2tpcFR5cGUiLCJmcm9tUGFydGlhbCIsIm9iamVjdCIsIl9vYmplY3QkZGVub20iLCJfb2JqZWN0JGFtb3VudCIsImZyb21BbWlubyIsInRvQW1pbm8iLCJvYmoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/base.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/crypto.ed25519.ts":
/*!********************************************************!*\
  !*** ../cosmos/src/interchain/proto/crypto.ed25519.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PubKey\": () => (/* binding */ PubKey)\n/* harmony export */ });\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\n\n\n/**\n * PubKey is an ed25519 public key for handling Tendermint keys in SDK.\n * It's needed for Any serialization and SDK compatibility.\n * It must not be used in a non Tendermint key context because it doesn't implement\n * ADR-28. Nevertheless, you will like to use ed25519 in app user level\n * then you must create a new proto message and follow ADR-28 for Address construction.\n */\n\n/**\n * PubKey is an ed25519 public key for handling Tendermint keys in SDK.\n * It's needed for Any serialization and SDK compatibility.\n * It must not be used in a non Tendermint key context because it doesn't implement\n * ADR-28. Nevertheless, you will like to use ed25519 in app user level\n * then you must create a new proto message and follow ADR-28 for Address construction.\n */\n\nfunction createBasePubKey() {\n  return {\n    key: new Uint8Array()\n  };\n}\nvar PubKey = {\n  typeUrl: \"/cosmos.crypto.ed25519.PubKey\",\n  aminoType: \"tendermint/PubKeyEd25519\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePubKey();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key;\n    var message = createBasePubKey();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : new Uint8Array();\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      key: object.key\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.key = message.key;\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL3Byb3RvL2NyeXB0by5lZDI1NTE5LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEOztBQUV2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQSxTQUFTRSxnQkFBZ0JBLENBQUEsRUFBVztFQUNsQyxPQUFPO0lBQ0xDLEdBQUcsRUFBRSxJQUFJQyxVQUFVLENBQUM7RUFDdEIsQ0FBQztBQUNIO0FBQ08sSUFBTUMsTUFBTSxHQUFHO0VBQ3BCQyxPQUFPLEVBQUUsK0JBQStCO0VBQ3hDQyxTQUFTLEVBQUUsMEJBQTBCO0VBQ3JDQyxNQUFNLFdBQUFBLE9BQ0pDLE9BQWUsRUFFRDtJQUFBLElBRGRDLE1BQW9CLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHVix3REFBbUIsQ0FBQyxDQUFDO0lBRTVDLElBQUlRLE9BQU8sQ0FBQ04sR0FBRyxDQUFDUyxNQUFNLEtBQUssQ0FBQyxFQUFFO01BQzVCRixNQUFNLENBQUNLLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsS0FBSyxDQUFDUCxPQUFPLENBQUNOLEdBQUcsQ0FBQztJQUN0QztJQUNBLE9BQU9PLE1BQU07RUFDZixDQUFDO0VBQ0RPLE1BQU0sV0FBQUEsT0FBQ0MsS0FBZ0MsRUFBRU4sTUFBZSxFQUFVO0lBQ2hFLElBQU1PLE1BQU0sR0FDVkQsS0FBSyxZQUFZbEIsaURBQVksR0FBR2tCLEtBQUssR0FBRyxJQUFJbEIsaURBQVksQ0FBQ2tCLEtBQUssQ0FBQztJQUNqRSxJQUFNRSxHQUFHLEdBQUdSLE1BQU0sS0FBS0MsU0FBUyxHQUFHTSxNQUFNLENBQUNFLEdBQUcsR0FBR0YsTUFBTSxDQUFDRyxHQUFHLEdBQUdWLE1BQU07SUFDbkUsSUFBTUgsT0FBTyxHQUFHUCxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ2xDLE9BQU9pQixNQUFNLENBQUNHLEdBQUcsR0FBR0YsR0FBRyxFQUFFO01BQ3ZCLElBQU1HLEdBQUcsR0FBR0osTUFBTSxDQUFDSixNQUFNLENBQUMsQ0FBQztNQUMzQixRQUFRUSxHQUFHLEtBQUssQ0FBQztRQUNmLEtBQUssQ0FBQztVQUNKZCxPQUFPLENBQUNOLEdBQUcsR0FBR2dCLE1BQU0sQ0FBQ0gsS0FBSyxDQUFDLENBQUM7VUFDNUI7UUFDRjtVQUNFRyxNQUFNLENBQUNLLFFBQVEsQ0FBQ0QsR0FBRyxHQUFHLENBQUMsQ0FBQztVQUN4QjtNQUNKO0lBQ0Y7SUFDQSxPQUFPZCxPQUFPO0VBQ2hCLENBQUM7RUFDRGdCLFdBQVcsV0FBQUEsWUFBQ0MsTUFBMkIsRUFBVTtJQUFBLElBQUFDLFdBQUE7SUFDL0MsSUFBTWxCLE9BQU8sR0FBR1AsZ0JBQWdCLENBQUMsQ0FBQztJQUNsQ08sT0FBTyxDQUFDTixHQUFHLElBQUF3QixXQUFBLEdBQUdELE1BQU0sQ0FBQ3ZCLEdBQUcsY0FBQXdCLFdBQUEsY0FBQUEsV0FBQSxHQUFJLElBQUl2QixVQUFVLENBQUMsQ0FBQztJQUM1QyxPQUFPSyxPQUFPO0VBQ2hCLENBQUM7RUFDRG1CLFNBQVMsV0FBQUEsVUFBQ0YsTUFBbUIsRUFBVTtJQUNyQyxPQUFPO01BQ0x2QixHQUFHLEVBQUV1QixNQUFNLENBQUN2QjtJQUNkLENBQUM7RUFDSCxDQUFDO0VBQ0QwQixPQUFPLFdBQUFBLFFBQUNwQixPQUFlLEVBQWU7SUFDcEMsSUFBTXFCLEdBQVEsR0FBRyxDQUFDLENBQUM7SUFDbkJBLEdBQUcsQ0FBQzNCLEdBQUcsR0FBR00sT0FBTyxDQUFDTixHQUFHO0lBQ3JCLE9BQU8yQixHQUFHO0VBQ1o7QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL2ludGVyY2hhaW4vcHJvdG8vY3J5cHRvLmVkMjU1MTkudHM/NjA3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaW5hcnlSZWFkZXIsIEJpbmFyeVdyaXRlciB9IGZyb20gXCIuLi9iaW5hcnlcIjtcbmltcG9ydCB7IERlZXBQYXJ0aWFsIH0gZnJvbSBcIi4uL2hlbHBlcnNcIjtcbi8qKlxuICogUHViS2V5IGlzIGFuIGVkMjU1MTkgcHVibGljIGtleSBmb3IgaGFuZGxpbmcgVGVuZGVybWludCBrZXlzIGluIFNESy5cbiAqIEl0J3MgbmVlZGVkIGZvciBBbnkgc2VyaWFsaXphdGlvbiBhbmQgU0RLIGNvbXBhdGliaWxpdHkuXG4gKiBJdCBtdXN0IG5vdCBiZSB1c2VkIGluIGEgbm9uIFRlbmRlcm1pbnQga2V5IGNvbnRleHQgYmVjYXVzZSBpdCBkb2Vzbid0IGltcGxlbWVudFxuICogQURSLTI4LiBOZXZlcnRoZWxlc3MsIHlvdSB3aWxsIGxpa2UgdG8gdXNlIGVkMjU1MTkgaW4gYXBwIHVzZXIgbGV2ZWxcbiAqIHRoZW4geW91IG11c3QgY3JlYXRlIGEgbmV3IHByb3RvIG1lc3NhZ2UgYW5kIGZvbGxvdyBBRFItMjggZm9yIEFkZHJlc3MgY29uc3RydWN0aW9uLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFB1YktleSB7XG4gIGtleTogVWludDhBcnJheTtcbn1cbi8qKlxuICogUHViS2V5IGlzIGFuIGVkMjU1MTkgcHVibGljIGtleSBmb3IgaGFuZGxpbmcgVGVuZGVybWludCBrZXlzIGluIFNESy5cbiAqIEl0J3MgbmVlZGVkIGZvciBBbnkgc2VyaWFsaXphdGlvbiBhbmQgU0RLIGNvbXBhdGliaWxpdHkuXG4gKiBJdCBtdXN0IG5vdCBiZSB1c2VkIGluIGEgbm9uIFRlbmRlcm1pbnQga2V5IGNvbnRleHQgYmVjYXVzZSBpdCBkb2Vzbid0IGltcGxlbWVudFxuICogQURSLTI4LiBOZXZlcnRoZWxlc3MsIHlvdSB3aWxsIGxpa2UgdG8gdXNlIGVkMjU1MTkgaW4gYXBwIHVzZXIgbGV2ZWxcbiAqIHRoZW4geW91IG11c3QgY3JlYXRlIGEgbmV3IHByb3RvIG1lc3NhZ2UgYW5kIGZvbGxvdyBBRFItMjggZm9yIEFkZHJlc3MgY29uc3RydWN0aW9uLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFB1YktleUFtaW5vIHtcbiAga2V5OiBVaW50OEFycmF5O1xufVxuZnVuY3Rpb24gY3JlYXRlQmFzZVB1YktleSgpOiBQdWJLZXkge1xuICByZXR1cm4ge1xuICAgIGtleTogbmV3IFVpbnQ4QXJyYXkoKSxcbiAgfTtcbn1cbmV4cG9ydCBjb25zdCBQdWJLZXkgPSB7XG4gIHR5cGVVcmw6IFwiL2Nvc21vcy5jcnlwdG8uZWQyNTUxOS5QdWJLZXlcIixcbiAgYW1pbm9UeXBlOiBcInRlbmRlcm1pbnQvUHViS2V5RWQyNTUxOVwiLFxuICBlbmNvZGUoXG4gICAgbWVzc2FnZTogUHViS2V5LFxuICAgIHdyaXRlcjogQmluYXJ5V3JpdGVyID0gQmluYXJ5V3JpdGVyLmNyZWF0ZSgpXG4gICk6IEJpbmFyeVdyaXRlciB7XG4gICAgaWYgKG1lc3NhZ2Uua2V5Lmxlbmd0aCAhPT0gMCkge1xuICAgICAgd3JpdGVyLnVpbnQzMigxMCkuYnl0ZXMobWVzc2FnZS5rZXkpO1xuICAgIH1cbiAgICByZXR1cm4gd3JpdGVyO1xuICB9LFxuICBkZWNvZGUoaW5wdXQ6IEJpbmFyeVJlYWRlciB8IFVpbnQ4QXJyYXksIGxlbmd0aD86IG51bWJlcik6IFB1YktleSB7XG4gICAgY29uc3QgcmVhZGVyID1cbiAgICAgIGlucHV0IGluc3RhbmNlb2YgQmluYXJ5UmVhZGVyID8gaW5wdXQgOiBuZXcgQmluYXJ5UmVhZGVyKGlucHV0KTtcbiAgICBjb25zdCBlbmQgPSBsZW5ndGggPT09IHVuZGVmaW5lZCA/IHJlYWRlci5sZW4gOiByZWFkZXIucG9zICsgbGVuZ3RoO1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBjcmVhdGVCYXNlUHViS2V5KCk7XG4gICAgd2hpbGUgKHJlYWRlci5wb3MgPCBlbmQpIHtcbiAgICAgIGNvbnN0IHRhZyA9IHJlYWRlci51aW50MzIoKTtcbiAgICAgIHN3aXRjaCAodGFnID4+PiAzKSB7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICBtZXNzYWdlLmtleSA9IHJlYWRlci5ieXRlcygpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJlYWRlci5za2lwVHlwZSh0YWcgJiA3KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1lc3NhZ2U7XG4gIH0sXG4gIGZyb21QYXJ0aWFsKG9iamVjdDogRGVlcFBhcnRpYWw8UHViS2V5Pik6IFB1YktleSB7XG4gICAgY29uc3QgbWVzc2FnZSA9IGNyZWF0ZUJhc2VQdWJLZXkoKTtcbiAgICBtZXNzYWdlLmtleSA9IG9iamVjdC5rZXkgPz8gbmV3IFVpbnQ4QXJyYXkoKTtcbiAgICByZXR1cm4gbWVzc2FnZTtcbiAgfSxcbiAgZnJvbUFtaW5vKG9iamVjdDogUHViS2V5QW1pbm8pOiBQdWJLZXkge1xuICAgIHJldHVybiB7XG4gICAgICBrZXk6IG9iamVjdC5rZXksXG4gICAgfTtcbiAgfSxcbiAgdG9BbWlubyhtZXNzYWdlOiBQdWJLZXkpOiBQdWJLZXlBbWlubyB7XG4gICAgY29uc3Qgb2JqOiBhbnkgPSB7fTtcbiAgICBvYmoua2V5ID0gbWVzc2FnZS5rZXk7XG4gICAgcmV0dXJuIG9iajtcbiAgfSxcbn07XG4iXSwibmFtZXMiOlsiQmluYXJ5UmVhZGVyIiwiQmluYXJ5V3JpdGVyIiwiY3JlYXRlQmFzZVB1YktleSIsImtleSIsIlVpbnQ4QXJyYXkiLCJQdWJLZXkiLCJ0eXBlVXJsIiwiYW1pbm9UeXBlIiwiZW5jb2RlIiwibWVzc2FnZSIsIndyaXRlciIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImNyZWF0ZSIsInVpbnQzMiIsImJ5dGVzIiwiZGVjb2RlIiwiaW5wdXQiLCJyZWFkZXIiLCJlbmQiLCJsZW4iLCJwb3MiLCJ0YWciLCJza2lwVHlwZSIsImZyb21QYXJ0aWFsIiwib2JqZWN0IiwiX29iamVjdCRrZXkiLCJmcm9tQW1pbm8iLCJ0b0FtaW5vIiwib2JqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/crypto.ed25519.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/crypto.multisig.ts":
/*!*********************************************************!*\
  !*** ../cosmos/src/interchain/proto/crypto.multisig.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CompactBitArray\": () => (/* binding */ CompactBitArray),\n/* harmony export */   \"MultiSignature\": () => (/* binding */ MultiSignature)\n/* harmony export */ });\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n/**\n * MultiSignature wraps the signatures from a multisig.LegacyAminoPubKey.\n * See cosmos.tx.v1betata1.ModeInfo.Multi for how to specify which signers\n * signed and with which modes.\n */\n\n/**\n * MultiSignature wraps the signatures from a multisig.LegacyAminoPubKey.\n * See cosmos.tx.v1betata1.ModeInfo.Multi for how to specify which signers\n * signed and with which modes.\n */\n\n/**\n * MultiSignature wraps the signatures from a multisig.LegacyAminoPubKey.\n * See cosmos.tx.v1betata1.ModeInfo.Multi for how to specify which signers\n * signed and with which modes.\n */\n\n/**\n * CompactBitArray is an implementation of a space efficient bit array.\n * This is used to ensure that the encoded data takes up a minimal amount of\n * space after proto encoding.\n * This is not thread safe, and is not intended for concurrent usage.\n */\n\n/**\n * CompactBitArray is an implementation of a space efficient bit array.\n * This is used to ensure that the encoded data takes up a minimal amount of\n * space after proto encoding.\n * This is not thread safe, and is not intended for concurrent usage.\n */\n\n/**\n * CompactBitArray is an implementation of a space efficient bit array.\n * This is used to ensure that the encoded data takes up a minimal amount of\n * space after proto encoding.\n * This is not thread safe, and is not intended for concurrent usage.\n */\n\nfunction createBaseMultiSignature() {\n  return {\n    signatures: []\n  };\n}\nvar MultiSignature = {\n  typeUrl: \"/cosmos.crypto.multisig.v1beta1.MultiSignature\",\n  aminoType: \"cosmos-sdk/MultiSignature\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    var _iterator = _createForOfIteratorHelper(message.signatures),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(10).bytes(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseMultiSignature();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$signatures;\n    var message = createBaseMultiSignature();\n    message.signatures = ((_object$signatures = object.signatures) === null || _object$signatures === void 0 ? void 0 : _object$signatures.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(function (e) {\n        return e;\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  }\n};\nfunction createBaseCompactBitArray() {\n  return {\n    extraBitsStored: 0,\n    elems: new Uint8Array()\n  };\n}\nvar CompactBitArray = {\n  typeUrl: \"/cosmos.crypto.multisig.v1beta1.CompactBitArray\",\n  aminoType: \"cosmos-sdk/CompactBitArray\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.extraBitsStored !== 0) {\n      writer.uint32(8).uint32(message.extraBitsStored);\n    }\n    if (message.elems.length !== 0) {\n      writer.uint32(18).bytes(message.elems);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseCompactBitArray();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.extraBitsStored = reader.uint32();\n          break;\n        case 2:\n          message.elems = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$extraBitsStor, _object$elems;\n    var message = createBaseCompactBitArray();\n    message.extraBitsStored = (_object$extraBitsStor = object.extraBitsStored) !== null && _object$extraBitsStor !== void 0 ? _object$extraBitsStor : 0;\n    message.elems = (_object$elems = object.elems) !== null && _object$elems !== void 0 ? _object$elems : new Uint8Array();\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      extraBitsStored: object.extra_bits_stored,\n      elems: object.elems\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.extra_bits_stored = message.extraBitsStored;\n    obj.elems = message.elems;\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/crypto.multisig.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/crypto.secp256k1.ts":
/*!**********************************************************!*\
  !*** ../cosmos/src/interchain/proto/crypto.secp256k1.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PubKey\": () => (/* binding */ PubKey)\n/* harmony export */ });\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\n\n\n/**\n * PubKey defines a secp256k1 public key\n * Key is the compressed form of the pubkey. The first byte depends is a 0x02 byte\n * if the y-coordinate is the lexicographically largest of the two associated with\n * the x-coordinate. Otherwise the first byte is a 0x03.\n * This prefix is followed with the x-coordinate.\n */\n\n/**\n * PubKey defines a secp256k1 public key\n * Key is the compressed form of the pubkey. The first byte depends is a 0x02 byte\n * if the y-coordinate is the lexicographically largest of the two associated with\n * the x-coordinate. Otherwise the first byte is a 0x03.\n * This prefix is followed with the x-coordinate.\n */\n\nfunction createBasePubKey() {\n  return {\n    key: new Uint8Array()\n  };\n}\nvar PubKey = {\n  typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n  aminoType: \"tendermint/PubKeySecp256k1\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePubKey();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key;\n    var message = createBasePubKey();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : new Uint8Array();\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      key: object.key\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.key = message.key;\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL3Byb3RvL2NyeXB0by5zZWNwMjU2azEudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBLFNBQVNFLGdCQUFnQkEsQ0FBQSxFQUFXO0VBQ2xDLE9BQU87SUFDTEMsR0FBRyxFQUFFLElBQUlDLFVBQVUsQ0FBQztFQUN0QixDQUFDO0FBQ0g7QUFDTyxJQUFNQyxNQUFNLEdBQUc7RUFDcEJDLE9BQU8sRUFBRSxpQ0FBaUM7RUFDMUNDLFNBQVMsRUFBRSw0QkFBNEI7RUFDdkNDLE1BQU0sV0FBQUEsT0FDSkMsT0FBZSxFQUVEO0lBQUEsSUFEZEMsTUFBb0IsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUdWLHdEQUFtQixDQUFDLENBQUM7SUFFNUMsSUFBSVEsT0FBTyxDQUFDTixHQUFHLENBQUNTLE1BQU0sS0FBSyxDQUFDLEVBQUU7TUFDNUJGLE1BQU0sQ0FBQ0ssTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDQyxLQUFLLENBQUNQLE9BQU8sQ0FBQ04sR0FBRyxDQUFDO0lBQ3RDO0lBQ0EsT0FBT08sTUFBTTtFQUNmLENBQUM7RUFDRE8sTUFBTSxXQUFBQSxPQUFDQyxLQUFnQyxFQUFFTixNQUFlLEVBQVU7SUFDaEUsSUFBTU8sTUFBTSxHQUNWRCxLQUFLLFlBQVlsQixpREFBWSxHQUFHa0IsS0FBSyxHQUFHLElBQUlsQixpREFBWSxDQUFDa0IsS0FBSyxDQUFDO0lBQ2pFLElBQU1FLEdBQUcsR0FBR1IsTUFBTSxLQUFLQyxTQUFTLEdBQUdNLE1BQU0sQ0FBQ0UsR0FBRyxHQUFHRixNQUFNLENBQUNHLEdBQUcsR0FBR1YsTUFBTTtJQUNuRSxJQUFNSCxPQUFPLEdBQUdQLGdCQUFnQixDQUFDLENBQUM7SUFDbEMsT0FBT2lCLE1BQU0sQ0FBQ0csR0FBRyxHQUFHRixHQUFHLEVBQUU7TUFDdkIsSUFBTUcsR0FBRyxHQUFHSixNQUFNLENBQUNKLE1BQU0sQ0FBQyxDQUFDO01BQzNCLFFBQVFRLEdBQUcsS0FBSyxDQUFDO1FBQ2YsS0FBSyxDQUFDO1VBQ0pkLE9BQU8sQ0FBQ04sR0FBRyxHQUFHZ0IsTUFBTSxDQUFDSCxLQUFLLENBQUMsQ0FBQztVQUM1QjtRQUNGO1VBQ0VHLE1BQU0sQ0FBQ0ssUUFBUSxDQUFDRCxHQUFHLEdBQUcsQ0FBQyxDQUFDO1VBQ3hCO01BQ0o7SUFDRjtJQUNBLE9BQU9kLE9BQU87RUFDaEIsQ0FBQztFQUNEZ0IsV0FBVyxXQUFBQSxZQUFDQyxNQUEyQixFQUFVO0lBQUEsSUFBQUMsV0FBQTtJQUMvQyxJQUFNbEIsT0FBTyxHQUFHUCxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ2xDTyxPQUFPLENBQUNOLEdBQUcsSUFBQXdCLFdBQUEsR0FBR0QsTUFBTSxDQUFDdkIsR0FBRyxjQUFBd0IsV0FBQSxjQUFBQSxXQUFBLEdBQUksSUFBSXZCLFVBQVUsQ0FBQyxDQUFDO0lBQzVDLE9BQU9LLE9BQU87RUFDaEIsQ0FBQztFQUNEbUIsU0FBUyxXQUFBQSxVQUFDRixNQUFtQixFQUFVO0lBQ3JDLE9BQU87TUFDTHZCLEdBQUcsRUFBRXVCLE1BQU0sQ0FBQ3ZCO0lBQ2QsQ0FBQztFQUNILENBQUM7RUFDRDBCLE9BQU8sV0FBQUEsUUFBQ3BCLE9BQWUsRUFBZTtJQUNwQyxJQUFNcUIsR0FBUSxHQUFHLENBQUMsQ0FBQztJQUNuQkEsR0FBRyxDQUFDM0IsR0FBRyxHQUFHTSxPQUFPLENBQUNOLEdBQUc7SUFDckIsT0FBTzJCLEdBQUc7RUFDWjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2Nvc21vcy9zcmMvaW50ZXJjaGFpbi9wcm90by9jcnlwdG8uc2VjcDI1NmsxLnRzPzI1YjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmluYXJ5UmVhZGVyLCBCaW5hcnlXcml0ZXIgfSBmcm9tIFwiLi4vYmluYXJ5XCI7XG5pbXBvcnQgeyBEZWVwUGFydGlhbCB9IGZyb20gXCIuLi9oZWxwZXJzXCI7XG4vKipcbiAqIFB1YktleSBkZWZpbmVzIGEgc2VjcDI1NmsxIHB1YmxpYyBrZXlcbiAqIEtleSBpcyB0aGUgY29tcHJlc3NlZCBmb3JtIG9mIHRoZSBwdWJrZXkuIFRoZSBmaXJzdCBieXRlIGRlcGVuZHMgaXMgYSAweDAyIGJ5dGVcbiAqIGlmIHRoZSB5LWNvb3JkaW5hdGUgaXMgdGhlIGxleGljb2dyYXBoaWNhbGx5IGxhcmdlc3Qgb2YgdGhlIHR3byBhc3NvY2lhdGVkIHdpdGhcbiAqIHRoZSB4LWNvb3JkaW5hdGUuIE90aGVyd2lzZSB0aGUgZmlyc3QgYnl0ZSBpcyBhIDB4MDMuXG4gKiBUaGlzIHByZWZpeCBpcyBmb2xsb3dlZCB3aXRoIHRoZSB4LWNvb3JkaW5hdGUuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUHViS2V5IHtcbiAga2V5OiBVaW50OEFycmF5O1xufVxuLyoqXG4gKiBQdWJLZXkgZGVmaW5lcyBhIHNlY3AyNTZrMSBwdWJsaWMga2V5XG4gKiBLZXkgaXMgdGhlIGNvbXByZXNzZWQgZm9ybSBvZiB0aGUgcHVia2V5LiBUaGUgZmlyc3QgYnl0ZSBkZXBlbmRzIGlzIGEgMHgwMiBieXRlXG4gKiBpZiB0aGUgeS1jb29yZGluYXRlIGlzIHRoZSBsZXhpY29ncmFwaGljYWxseSBsYXJnZXN0IG9mIHRoZSB0d28gYXNzb2NpYXRlZCB3aXRoXG4gKiB0aGUgeC1jb29yZGluYXRlLiBPdGhlcndpc2UgdGhlIGZpcnN0IGJ5dGUgaXMgYSAweDAzLlxuICogVGhpcyBwcmVmaXggaXMgZm9sbG93ZWQgd2l0aCB0aGUgeC1jb29yZGluYXRlLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFB1YktleUFtaW5vIHtcbiAga2V5OiBVaW50OEFycmF5O1xufVxuZnVuY3Rpb24gY3JlYXRlQmFzZVB1YktleSgpOiBQdWJLZXkge1xuICByZXR1cm4ge1xuICAgIGtleTogbmV3IFVpbnQ4QXJyYXkoKSxcbiAgfTtcbn1cbmV4cG9ydCBjb25zdCBQdWJLZXkgPSB7XG4gIHR5cGVVcmw6IFwiL2Nvc21vcy5jcnlwdG8uc2VjcDI1NmsxLlB1YktleVwiLFxuICBhbWlub1R5cGU6IFwidGVuZGVybWludC9QdWJLZXlTZWNwMjU2azFcIixcbiAgZW5jb2RlKFxuICAgIG1lc3NhZ2U6IFB1YktleSxcbiAgICB3cml0ZXI6IEJpbmFyeVdyaXRlciA9IEJpbmFyeVdyaXRlci5jcmVhdGUoKVxuICApOiBCaW5hcnlXcml0ZXIge1xuICAgIGlmIChtZXNzYWdlLmtleS5sZW5ndGggIT09IDApIHtcbiAgICAgIHdyaXRlci51aW50MzIoMTApLmJ5dGVzKG1lc3NhZ2Uua2V5KTtcbiAgICB9XG4gICAgcmV0dXJuIHdyaXRlcjtcbiAgfSxcbiAgZGVjb2RlKGlucHV0OiBCaW5hcnlSZWFkZXIgfCBVaW50OEFycmF5LCBsZW5ndGg/OiBudW1iZXIpOiBQdWJLZXkge1xuICAgIGNvbnN0IHJlYWRlciA9XG4gICAgICBpbnB1dCBpbnN0YW5jZW9mIEJpbmFyeVJlYWRlciA/IGlucHV0IDogbmV3IEJpbmFyeVJlYWRlcihpbnB1dCk7XG4gICAgY29uc3QgZW5kID0gbGVuZ3RoID09PSB1bmRlZmluZWQgPyByZWFkZXIubGVuIDogcmVhZGVyLnBvcyArIGxlbmd0aDtcbiAgICBjb25zdCBtZXNzYWdlID0gY3JlYXRlQmFzZVB1YktleSgpO1xuICAgIHdoaWxlIChyZWFkZXIucG9zIDwgZW5kKSB7XG4gICAgICBjb25zdCB0YWcgPSByZWFkZXIudWludDMyKCk7XG4gICAgICBzd2l0Y2ggKHRhZyA+Pj4gMykge1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgbWVzc2FnZS5rZXkgPSByZWFkZXIuYnl0ZXMoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZWFkZXIuc2tpcFR5cGUodGFnICYgNyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZXNzYWdlO1xuICB9LFxuICBmcm9tUGFydGlhbChvYmplY3Q6IERlZXBQYXJ0aWFsPFB1YktleT4pOiBQdWJLZXkge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBjcmVhdGVCYXNlUHViS2V5KCk7XG4gICAgbWVzc2FnZS5rZXkgPSBvYmplY3Qua2V5ID8/IG5ldyBVaW50OEFycmF5KCk7XG4gICAgcmV0dXJuIG1lc3NhZ2U7XG4gIH0sXG4gIGZyb21BbWlubyhvYmplY3Q6IFB1YktleUFtaW5vKTogUHViS2V5IHtcbiAgICByZXR1cm4ge1xuICAgICAga2V5OiBvYmplY3Qua2V5LFxuICAgIH07XG4gIH0sXG4gIHRvQW1pbm8obWVzc2FnZTogUHViS2V5KTogUHViS2V5QW1pbm8ge1xuICAgIGNvbnN0IG9iajogYW55ID0ge307XG4gICAgb2JqLmtleSA9IG1lc3NhZ2Uua2V5O1xuICAgIHJldHVybiBvYmo7XG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbIkJpbmFyeVJlYWRlciIsIkJpbmFyeVdyaXRlciIsImNyZWF0ZUJhc2VQdWJLZXkiLCJrZXkiLCJVaW50OEFycmF5IiwiUHViS2V5IiwidHlwZVVybCIsImFtaW5vVHlwZSIsImVuY29kZSIsIm1lc3NhZ2UiLCJ3cml0ZXIiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJjcmVhdGUiLCJ1aW50MzIiLCJieXRlcyIsImRlY29kZSIsImlucHV0IiwicmVhZGVyIiwiZW5kIiwibGVuIiwicG9zIiwidGFnIiwic2tpcFR5cGUiLCJmcm9tUGFydGlhbCIsIm9iamVjdCIsIl9vYmplY3Qka2V5IiwiZnJvbUFtaW5vIiwidG9BbWlubyIsIm9iaiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/crypto.secp256k1.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/crypto.secp256r1.ts":
/*!**********************************************************!*\
  !*** ../cosmos/src/interchain/proto/crypto.secp256r1.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PubKey\": () => (/* binding */ PubKey)\n/* harmony export */ });\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\n\n\n/** PubKey defines a secp256r1 ECDSA public key. */\n\n/** PubKey defines a secp256r1 ECDSA public key. */\n\nfunction createBasePubKey() {\n  return {\n    key: new Uint8Array()\n  };\n}\nvar PubKey = {\n  typeUrl: \"/cosmos.crypto.secp256r1.PubKey\",\n  aminoType: \"cosmos-sdk/PubKey\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePubKey();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$key;\n    var message = createBasePubKey();\n    message.key = (_object$key = object.key) !== null && _object$key !== void 0 ? _object$key : new Uint8Array();\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      key: object.key\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.key = message.key;\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL3Byb3RvL2NyeXB0by5zZWNwMjU2cjEudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7O0FBRXZEOztBQVFBOztBQVFBLFNBQVNFLGdCQUFnQkEsQ0FBQSxFQUFXO0VBQ2xDLE9BQU87SUFDTEMsR0FBRyxFQUFFLElBQUlDLFVBQVUsQ0FBQztFQUN0QixDQUFDO0FBQ0g7QUFDTyxJQUFNQyxNQUFNLEdBQUc7RUFDcEJDLE9BQU8sRUFBRSxpQ0FBaUM7RUFDMUNDLFNBQVMsRUFBRSxtQkFBbUI7RUFDOUJDLE1BQU0sV0FBQUEsT0FDSkMsT0FBZSxFQUVEO0lBQUEsSUFEZEMsTUFBb0IsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUdWLHdEQUFtQixDQUFDLENBQUM7SUFFNUMsSUFBSVEsT0FBTyxDQUFDTixHQUFHLENBQUNTLE1BQU0sS0FBSyxDQUFDLEVBQUU7TUFDNUJGLE1BQU0sQ0FBQ0ssTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDQyxLQUFLLENBQUNQLE9BQU8sQ0FBQ04sR0FBRyxDQUFDO0lBQ3RDO0lBQ0EsT0FBT08sTUFBTTtFQUNmLENBQUM7RUFDRE8sTUFBTSxXQUFBQSxPQUFDQyxLQUFnQyxFQUFFTixNQUFlLEVBQVU7SUFDaEUsSUFBTU8sTUFBTSxHQUNWRCxLQUFLLFlBQVlsQixpREFBWSxHQUFHa0IsS0FBSyxHQUFHLElBQUlsQixpREFBWSxDQUFDa0IsS0FBSyxDQUFDO0lBQ2pFLElBQU1FLEdBQUcsR0FBR1IsTUFBTSxLQUFLQyxTQUFTLEdBQUdNLE1BQU0sQ0FBQ0UsR0FBRyxHQUFHRixNQUFNLENBQUNHLEdBQUcsR0FBR1YsTUFBTTtJQUNuRSxJQUFNSCxPQUFPLEdBQUdQLGdCQUFnQixDQUFDLENBQUM7SUFDbEMsT0FBT2lCLE1BQU0sQ0FBQ0csR0FBRyxHQUFHRixHQUFHLEVBQUU7TUFDdkIsSUFBTUcsR0FBRyxHQUFHSixNQUFNLENBQUNKLE1BQU0sQ0FBQyxDQUFDO01BQzNCLFFBQVFRLEdBQUcsS0FBSyxDQUFDO1FBQ2YsS0FBSyxDQUFDO1VBQ0pkLE9BQU8sQ0FBQ04sR0FBRyxHQUFHZ0IsTUFBTSxDQUFDSCxLQUFLLENBQUMsQ0FBQztVQUM1QjtRQUNGO1VBQ0VHLE1BQU0sQ0FBQ0ssUUFBUSxDQUFDRCxHQUFHLEdBQUcsQ0FBQyxDQUFDO1VBQ3hCO01BQ0o7SUFDRjtJQUNBLE9BQU9kLE9BQU87RUFDaEIsQ0FBQztFQUNEZ0IsV0FBVyxXQUFBQSxZQUFDQyxNQUEyQixFQUFVO0lBQUEsSUFBQUMsV0FBQTtJQUMvQyxJQUFNbEIsT0FBTyxHQUFHUCxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ2xDTyxPQUFPLENBQUNOLEdBQUcsSUFBQXdCLFdBQUEsR0FBR0QsTUFBTSxDQUFDdkIsR0FBRyxjQUFBd0IsV0FBQSxjQUFBQSxXQUFBLEdBQUksSUFBSXZCLFVBQVUsQ0FBQyxDQUFDO0lBQzVDLE9BQU9LLE9BQU87RUFDaEIsQ0FBQztFQUNEbUIsU0FBUyxXQUFBQSxVQUFDRixNQUFtQixFQUFVO0lBQ3JDLE9BQU87TUFDTHZCLEdBQUcsRUFBRXVCLE1BQU0sQ0FBQ3ZCO0lBQ2QsQ0FBQztFQUNILENBQUM7RUFDRDBCLE9BQU8sV0FBQUEsUUFBQ3BCLE9BQWUsRUFBZTtJQUNwQyxJQUFNcUIsR0FBUSxHQUFHLENBQUMsQ0FBQztJQUNuQkEsR0FBRyxDQUFDM0IsR0FBRyxHQUFHTSxPQUFPLENBQUNOLEdBQUc7SUFDckIsT0FBTzJCLEdBQUc7RUFDWjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uL2Nvc21vcy9zcmMvaW50ZXJjaGFpbi9wcm90by9jcnlwdG8uc2VjcDI1NnIxLnRzPzEzYjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmluYXJ5UmVhZGVyLCBCaW5hcnlXcml0ZXIgfSBmcm9tIFwiLi4vYmluYXJ5XCI7XG5pbXBvcnQgeyBEZWVwUGFydGlhbCB9IGZyb20gXCIuLi9oZWxwZXJzXCI7XG4vKiogUHViS2V5IGRlZmluZXMgYSBzZWNwMjU2cjEgRUNEU0EgcHVibGljIGtleS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUHViS2V5IHtcbiAgLyoqXG4gICAqIFBvaW50IG9uIHNlY3AyNTZyMSBjdXJ2ZSBpbiBhIGNvbXByZXNzZWQgcmVwcmVzZW50YXRpb24gYXMgc3BlY2lmaWVkIGluIHNlY3Rpb25cbiAgICogNC4zLjYgb2YgQU5TSSBYOS42MjogaHR0cHM6Ly93ZWJzdG9yZS5hbnNpLm9yZy9zdGFuZGFyZHMvYXNjeDkvYW5zaXg5NjIxOTk4XG4gICAqL1xuICBrZXk6IFVpbnQ4QXJyYXk7XG59XG4vKiogUHViS2V5IGRlZmluZXMgYSBzZWNwMjU2cjEgRUNEU0EgcHVibGljIGtleS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUHViS2V5QW1pbm8ge1xuICAvKipcbiAgICogUG9pbnQgb24gc2VjcDI1NnIxIGN1cnZlIGluIGEgY29tcHJlc3NlZCByZXByZXNlbnRhdGlvbiBhcyBzcGVjaWZpZWQgaW4gc2VjdGlvblxuICAgKiA0LjMuNiBvZiBBTlNJIFg5LjYyOiBodHRwczovL3dlYnN0b3JlLmFuc2kub3JnL3N0YW5kYXJkcy9hc2N4OS9hbnNpeDk2MjE5OThcbiAgICovXG4gIGtleTogVWludDhBcnJheTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUJhc2VQdWJLZXkoKTogUHViS2V5IHtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IG5ldyBVaW50OEFycmF5KCksXG4gIH07XG59XG5leHBvcnQgY29uc3QgUHViS2V5ID0ge1xuICB0eXBlVXJsOiBcIi9jb3Ntb3MuY3J5cHRvLnNlY3AyNTZyMS5QdWJLZXlcIixcbiAgYW1pbm9UeXBlOiBcImNvc21vcy1zZGsvUHViS2V5XCIsXG4gIGVuY29kZShcbiAgICBtZXNzYWdlOiBQdWJLZXksXG4gICAgd3JpdGVyOiBCaW5hcnlXcml0ZXIgPSBCaW5hcnlXcml0ZXIuY3JlYXRlKClcbiAgKTogQmluYXJ5V3JpdGVyIHtcbiAgICBpZiAobWVzc2FnZS5rZXkubGVuZ3RoICE9PSAwKSB7XG4gICAgICB3cml0ZXIudWludDMyKDEwKS5ieXRlcyhtZXNzYWdlLmtleSk7XG4gICAgfVxuICAgIHJldHVybiB3cml0ZXI7XG4gIH0sXG4gIGRlY29kZShpbnB1dDogQmluYXJ5UmVhZGVyIHwgVWludDhBcnJheSwgbGVuZ3RoPzogbnVtYmVyKTogUHViS2V5IHtcbiAgICBjb25zdCByZWFkZXIgPVxuICAgICAgaW5wdXQgaW5zdGFuY2VvZiBCaW5hcnlSZWFkZXIgPyBpbnB1dCA6IG5ldyBCaW5hcnlSZWFkZXIoaW5wdXQpO1xuICAgIGNvbnN0IGVuZCA9IGxlbmd0aCA9PT0gdW5kZWZpbmVkID8gcmVhZGVyLmxlbiA6IHJlYWRlci5wb3MgKyBsZW5ndGg7XG4gICAgY29uc3QgbWVzc2FnZSA9IGNyZWF0ZUJhc2VQdWJLZXkoKTtcbiAgICB3aGlsZSAocmVhZGVyLnBvcyA8IGVuZCkge1xuICAgICAgY29uc3QgdGFnID0gcmVhZGVyLnVpbnQzMigpO1xuICAgICAgc3dpdGNoICh0YWcgPj4+IDMpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgIG1lc3NhZ2Uua2V5ID0gcmVhZGVyLmJ5dGVzKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmVhZGVyLnNraXBUeXBlKHRhZyAmIDcpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVzc2FnZTtcbiAgfSxcbiAgZnJvbVBhcnRpYWwob2JqZWN0OiBEZWVwUGFydGlhbDxQdWJLZXk+KTogUHViS2V5IHtcbiAgICBjb25zdCBtZXNzYWdlID0gY3JlYXRlQmFzZVB1YktleSgpO1xuICAgIG1lc3NhZ2Uua2V5ID0gb2JqZWN0LmtleSA/PyBuZXcgVWludDhBcnJheSgpO1xuICAgIHJldHVybiBtZXNzYWdlO1xuICB9LFxuICBmcm9tQW1pbm8ob2JqZWN0OiBQdWJLZXlBbWlubyk6IFB1YktleSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGtleTogb2JqZWN0LmtleSxcbiAgICB9O1xuICB9LFxuICB0b0FtaW5vKG1lc3NhZ2U6IFB1YktleSk6IFB1YktleUFtaW5vIHtcbiAgICBjb25zdCBvYmo6IGFueSA9IHt9O1xuICAgIG9iai5rZXkgPSBtZXNzYWdlLmtleTtcbiAgICByZXR1cm4gb2JqO1xuICB9LFxufTtcbiJdLCJuYW1lcyI6WyJCaW5hcnlSZWFkZXIiLCJCaW5hcnlXcml0ZXIiLCJjcmVhdGVCYXNlUHViS2V5Iiwia2V5IiwiVWludDhBcnJheSIsIlB1YktleSIsInR5cGVVcmwiLCJhbWlub1R5cGUiLCJlbmNvZGUiLCJtZXNzYWdlIiwid3JpdGVyIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiY3JlYXRlIiwidWludDMyIiwiYnl0ZXMiLCJkZWNvZGUiLCJpbnB1dCIsInJlYWRlciIsImVuZCIsImxlbiIsInBvcyIsInRhZyIsInNraXBUeXBlIiwiZnJvbVBhcnRpYWwiLCJvYmplY3QiLCJfb2JqZWN0JGtleSIsImZyb21BbWlubyIsInRvQW1pbm8iLCJvYmoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/crypto.secp256r1.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/tx.ts":
/*!********************************************!*\
  !*** ../cosmos/src/interchain/proto/tx.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AuthInfo\": () => (/* binding */ AuthInfo),\n/* harmony export */   \"Fee\": () => (/* binding */ Fee),\n/* harmony export */   \"ModeInfo\": () => (/* binding */ ModeInfo),\n/* harmony export */   \"ModeInfo_Multi\": () => (/* binding */ ModeInfo_Multi),\n/* harmony export */   \"ModeInfo_Single\": () => (/* binding */ ModeInfo_Single),\n/* harmony export */   \"SignDoc\": () => (/* binding */ SignDoc),\n/* harmony export */   \"SignerInfo\": () => (/* binding */ SignerInfo),\n/* harmony export */   \"Tx\": () => (/* binding */ Tx),\n/* harmony export */   \"TxBody\": () => (/* binding */ TxBody),\n/* harmony export */   \"TxRaw\": () => (/* binding */ TxRaw)\n/* harmony export */ });\n/* harmony import */ var _any__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../any */ \"../cosmos/src/interchain/any.ts\");\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ \"../cosmos/src/interchain/helpers.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base */ \"../cosmos/src/interchain/proto/base.ts\");\n/* harmony import */ var _crypto_multisig__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./crypto.multisig */ \"../cosmos/src/interchain/proto/crypto.multisig.ts\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n/** Tx is the standard type used for broadcasting transactions. */\n\n/** Tx is the standard type used for broadcasting transactions. */\n\n/**\n * TxRaw is a variant of Tx that pins the signer's exact binary representation\n * of body and auth_info. This is used for signing, broadcasting and\n * verification. The binary `serialize(tx: TxRaw)` is stored in Tendermint and\n * the hash `sha256(serialize(tx: TxRaw))` becomes the \"txhash\", commonly used\n * as the transaction ID.\n */\n\n/**\n * TxRaw is a variant of Tx that pins the signer's exact binary representation\n * of body and auth_info. This is used for signing, broadcasting and\n * verification. The binary `serialize(tx: TxRaw)` is stored in Tendermint and\n * the hash `sha256(serialize(tx: TxRaw))` becomes the \"txhash\", commonly used\n * as the transaction ID.\n */\n\n/** SignDoc is the type used for generating sign bytes for SIGN_MODE_DIRECT. */\n\n/** SignDoc is the type used for generating sign bytes for SIGN_MODE_DIRECT. */\n\n/** TxBody is the body of a transaction that all signers sign over. */\n\n/** TxBody is the body of a transaction that all signers sign over. */\n\n/**\n * AuthInfo describes the fee and signer modes that are used to sign a\n * transaction.\n */\n\n/**\n * AuthInfo describes the fee and signer modes that are used to sign a\n * transaction.\n */\n\n/**\n * SignerInfo describes the public key and signing mode of a single top-level\n * signer.\n */\n\n/**\n * SignerInfo describes the public key and signing mode of a single top-level\n * signer.\n */\n\n/** ModeInfo describes the signing mode of a single or nested multisig signer. */\n\n/** ModeInfo describes the signing mode of a single or nested multisig signer. */\n\n/**\n * Single is the mode info for a single signer. It is structured as a message\n * to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the\n * future\n */\n\n/**\n * Single is the mode info for a single signer. It is structured as a message\n * to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the\n * future\n */\n\n/** Multi is the mode info for a multisig public key */\n\n/** Multi is the mode info for a multisig public key */\n\n/**\n * Fee includes the amount of coins paid in fees and the maximum\n * gas to be used by the transaction. The ratio yields an effective \"gasprice\",\n * which must be above some miminum to be accepted into the mempool.\n */\n\n/**\n * Fee includes the amount of coins paid in fees and the maximum\n * gas to be used by the transaction. The ratio yields an effective \"gasprice\",\n * which must be above some miminum to be accepted into the mempool.\n */\n\nfunction createBaseTx() {\n  return {\n    body: TxBody.fromPartial({}),\n    authInfo: AuthInfo.fromPartial({}),\n    signatures: []\n  };\n}\nvar Tx = {\n  typeUrl: \"/cosmos.tx.v1beta1.Tx\",\n  aminoType: \"cosmos-sdk/Tx\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.body !== undefined) {\n      TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.authInfo !== undefined) {\n      AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.signatures),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        writer.uint32(26).bytes(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTx();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.body = TxBody.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.authInfo = AuthInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$signatures;\n    var message = createBaseTx();\n    message.body = object.body !== undefined && object.body !== null ? TxBody.fromPartial(object.body) : undefined;\n    message.authInfo = object.authInfo !== undefined && object.authInfo !== null ? AuthInfo.fromPartial(object.authInfo) : undefined;\n    message.signatures = ((_object$signatures = object.signatures) === null || _object$signatures === void 0 ? void 0 : _object$signatures.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      body: object !== null && object !== void 0 && object.body ? TxBody.fromAmino(object.body) : undefined,\n      authInfo: object !== null && object !== void 0 && object.auth_info ? AuthInfo.fromAmino(object.auth_info) : undefined,\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(function (e) {\n        return e;\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.body = message.body ? TxBody.toAmino(message.body) : undefined;\n    obj.auth_info = message.authInfo ? AuthInfo.toAmino(message.authInfo) : undefined;\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  }\n};\nfunction createBaseTxRaw() {\n  return {\n    bodyBytes: new Uint8Array(),\n    authInfoBytes: new Uint8Array(),\n    signatures: []\n  };\n}\nvar TxRaw = {\n  typeUrl: \"/cosmos.tx.v1beta1.TxRaw\",\n  aminoType: \"cosmos-sdk/TxRaw\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.signatures),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        writer.uint32(26).bytes(v);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxRaw();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$bodyBytes, _object$authInfoBytes, _object$signatures2;\n    var message = createBaseTxRaw();\n    message.bodyBytes = (_object$bodyBytes = object.bodyBytes) !== null && _object$bodyBytes !== void 0 ? _object$bodyBytes : new Uint8Array();\n    message.authInfoBytes = (_object$authInfoBytes = object.authInfoBytes) !== null && _object$authInfoBytes !== void 0 ? _object$authInfoBytes : new Uint8Array();\n    message.signatures = ((_object$signatures2 = object.signatures) === null || _object$signatures2 === void 0 ? void 0 : _object$signatures2.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      bodyBytes: object.body_bytes,\n      authInfoBytes: object.auth_info_bytes,\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(function (e) {\n        return e;\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.body_bytes = message.bodyBytes;\n    obj.auth_info_bytes = message.authInfoBytes;\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  }\n};\nfunction createBaseSignDoc() {\n  return {\n    bodyBytes: new Uint8Array(),\n    authInfoBytes: new Uint8Array(),\n    chainId: \"\",\n    accountNumber: BigInt(0)\n  };\n}\nvar SignDoc = {\n  typeUrl: \"/cosmos.tx.v1beta1.SignDoc\",\n  aminoType: \"cosmos-sdk/SignDoc\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(26).string(message.chainId);\n    }\n    if (message.accountNumber !== BigInt(0)) {\n      writer.uint32(32).uint64(message.accountNumber);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSignDoc();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n        case 3:\n          message.chainId = reader.string();\n          break;\n        case 4:\n          message.accountNumber = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$bodyBytes2, _object$authInfoBytes2, _object$chainId;\n    var message = createBaseSignDoc();\n    message.bodyBytes = (_object$bodyBytes2 = object.bodyBytes) !== null && _object$bodyBytes2 !== void 0 ? _object$bodyBytes2 : new Uint8Array();\n    message.authInfoBytes = (_object$authInfoBytes2 = object.authInfoBytes) !== null && _object$authInfoBytes2 !== void 0 ? _object$authInfoBytes2 : new Uint8Array();\n    message.chainId = (_object$chainId = object.chainId) !== null && _object$chainId !== void 0 ? _object$chainId : \"\";\n    message.accountNumber = object.accountNumber !== undefined && object.accountNumber !== null ? BigInt(object.accountNumber.toString()) : BigInt(0);\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      bodyBytes: object.body_bytes,\n      authInfoBytes: object.auth_info_bytes,\n      chainId: object.chain_id,\n      accountNumber: BigInt(object.account_number)\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.body_bytes = message.bodyBytes;\n    obj.auth_info_bytes = message.authInfoBytes;\n    obj.chain_id = message.chainId;\n    obj.account_number = message.accountNumber ? message.accountNumber.toString() : undefined;\n    return obj;\n  }\n};\nfunction createBaseTxBody() {\n  return {\n    messages: [],\n    memo: \"\",\n    timeoutHeight: BigInt(0),\n    extensionOptions: [],\n    nonCriticalExtensionOptions: []\n  };\n}\nvar TxBody = {\n  typeUrl: \"/cosmos.tx.v1beta1.TxBody\",\n  aminoType: \"cosmos-sdk/TxBody\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    var _iterator3 = _createForOfIteratorHelper(message.messages),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        _any__WEBPACK_IMPORTED_MODULE_0__.Any.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.memo !== \"\") {\n      writer.uint32(18).string(message.memo);\n    }\n    if (message.timeoutHeight !== BigInt(0)) {\n      writer.uint32(24).uint64(message.timeoutHeight);\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.extensionOptions),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _v = _step4.value;\n        _any__WEBPACK_IMPORTED_MODULE_0__.Any.encode(_v, writer.uint32(8186).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.nonCriticalExtensionOptions),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _v2 = _step5.value;\n        _any__WEBPACK_IMPORTED_MODULE_0__.Any.encode(_v2, writer.uint32(16378).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseTxBody();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.messages.push(_any__WEBPACK_IMPORTED_MODULE_0__.Any.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.memo = reader.string();\n          break;\n        case 3:\n          message.timeoutHeight = reader.uint64();\n          break;\n        case 1023:\n          message.extensionOptions.push(_any__WEBPACK_IMPORTED_MODULE_0__.Any.decode(reader, reader.uint32()));\n          break;\n        case 2047:\n          message.nonCriticalExtensionOptions.push(_any__WEBPACK_IMPORTED_MODULE_0__.Any.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$messages, _object$memo, _object$extensionOpti, _object$nonCriticalEx;\n    var message = createBaseTxBody();\n    message.messages = ((_object$messages = object.messages) === null || _object$messages === void 0 ? void 0 : _object$messages.map(function (e) {\n      return _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromPartial(e);\n    })) || [];\n    message.memo = (_object$memo = object.memo) !== null && _object$memo !== void 0 ? _object$memo : \"\";\n    message.timeoutHeight = object.timeoutHeight !== undefined && object.timeoutHeight !== null ? BigInt(object.timeoutHeight.toString()) : BigInt(0);\n    message.extensionOptions = ((_object$extensionOpti = object.extensionOptions) === null || _object$extensionOpti === void 0 ? void 0 : _object$extensionOpti.map(function (e) {\n      return _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromPartial(e);\n    })) || [];\n    message.nonCriticalExtensionOptions = ((_object$nonCriticalEx = object.nonCriticalExtensionOptions) === null || _object$nonCriticalEx === void 0 ? void 0 : _object$nonCriticalEx.map(function (e) {\n      return _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromPartial(e);\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      messages: Array.isArray(object === null || object === void 0 ? void 0 : object.messages) ? object.messages.map(function (e) {\n        return _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromAmino(e);\n      }) : [],\n      memo: object.memo,\n      timeoutHeight: BigInt(object.timeout_height),\n      extensionOptions: Array.isArray(object === null || object === void 0 ? void 0 : object.extension_options) ? object.extension_options.map(function (e) {\n        return _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromAmino(e);\n      }) : [],\n      nonCriticalExtensionOptions: Array.isArray(object === null || object === void 0 ? void 0 : object.non_critical_extension_options) ? object.non_critical_extension_options.map(function (e) {\n        return _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromAmino(e);\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    if (message.messages) {\n      obj.messages = message.messages.map(function (e) {\n        return e ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.toAmino(e) : undefined;\n      });\n    } else {\n      obj.messages = [];\n    }\n    obj.memo = message.memo;\n    obj.timeout_height = message.timeoutHeight ? message.timeoutHeight.toString() : undefined;\n    if (message.extensionOptions) {\n      obj.extension_options = message.extensionOptions.map(function (e) {\n        return e ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.toAmino(e) : undefined;\n      });\n    } else {\n      obj.extension_options = [];\n    }\n    if (message.nonCriticalExtensionOptions) {\n      obj.non_critical_extension_options = message.nonCriticalExtensionOptions.map(function (e) {\n        return e ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.toAmino(e) : undefined;\n      });\n    } else {\n      obj.non_critical_extension_options = [];\n    }\n    return obj;\n  }\n};\nfunction createBaseAuthInfo() {\n  return {\n    signerInfos: [],\n    fee: Fee.fromPartial({})\n  };\n}\nvar AuthInfo = {\n  typeUrl: \"/cosmos.tx.v1beta1.AuthInfo\",\n  aminoType: \"cosmos-sdk/AuthInfo\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    var _iterator6 = _createForOfIteratorHelper(message.signerInfos),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        SignerInfo.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    if (message.fee !== undefined) {\n      Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseAuthInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signerInfos.push(SignerInfo.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.fee = Fee.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$signerInfos;\n    var message = createBaseAuthInfo();\n    message.signerInfos = ((_object$signerInfos = object.signerInfos) === null || _object$signerInfos === void 0 ? void 0 : _object$signerInfos.map(function (e) {\n      return SignerInfo.fromPartial(e);\n    })) || [];\n    message.fee = object.fee !== undefined && object.fee !== null ? Fee.fromPartial(object.fee) : undefined;\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      signerInfos: Array.isArray(object === null || object === void 0 ? void 0 : object.signer_infos) ? object.signer_infos.map(function (e) {\n        return SignerInfo.fromAmino(e);\n      }) : [],\n      fee: object !== null && object !== void 0 && object.fee ? Fee.fromAmino(object.fee) : undefined\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    if (message.signerInfos) {\n      obj.signer_infos = message.signerInfos.map(function (e) {\n        return e ? SignerInfo.toAmino(e) : undefined;\n      });\n    } else {\n      obj.signer_infos = [];\n    }\n    obj.fee = message.fee ? Fee.toAmino(message.fee) : undefined;\n    return obj;\n  }\n};\nfunction createBaseSignerInfo() {\n  return {\n    publicKey: undefined,\n    modeInfo: ModeInfo.fromPartial({}),\n    sequence: BigInt(0)\n  };\n}\nvar SignerInfo = {\n  typeUrl: \"/cosmos.tx.v1beta1.SignerInfo\",\n  aminoType: \"cosmos-sdk/SignerInfo\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.publicKey !== undefined) {\n      _any__WEBPACK_IMPORTED_MODULE_0__.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.modeInfo !== undefined) {\n      ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.sequence !== BigInt(0)) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSignerInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = _any__WEBPACK_IMPORTED_MODULE_0__.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.modeInfo = ModeInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseSignerInfo();\n    message.publicKey = object.publicKey !== undefined && object.publicKey !== null ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromPartial(object.publicKey) : undefined;\n    message.modeInfo = object.modeInfo !== undefined && object.modeInfo !== null ? ModeInfo.fromPartial(object.modeInfo) : undefined;\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? BigInt(object.sequence.toString()) : BigInt(0);\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      publicKey: object !== null && object !== void 0 && object.public_key ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.fromAmino(object.public_key) : undefined,\n      modeInfo: object !== null && object !== void 0 && object.mode_info ? ModeInfo.fromAmino(object.mode_info) : undefined,\n      sequence: BigInt(object.sequence)\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.public_key = message.publicKey ? _any__WEBPACK_IMPORTED_MODULE_0__.Any.toAmino(message.publicKey) : undefined;\n    obj.mode_info = message.modeInfo ? ModeInfo.toAmino(message.modeInfo) : undefined;\n    obj.sequence = message.sequence ? message.sequence.toString() : undefined;\n    return obj;\n  }\n};\nfunction createBaseModeInfo() {\n  return {\n    single: undefined,\n    multi: undefined\n  };\n}\nvar ModeInfo = {\n  typeUrl: \"/cosmos.tx.v1beta1.ModeInfo\",\n  aminoType: \"cosmos-sdk/ModeInfo\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.single !== undefined) {\n      ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseModeInfo();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = ModeInfo_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = ModeInfo_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseModeInfo();\n    message.single = object.single !== undefined && object.single !== null ? ModeInfo_Single.fromPartial(object.single) : undefined;\n    message.multi = object.multi !== undefined && object.multi !== null ? ModeInfo_Multi.fromPartial(object.multi) : undefined;\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      single: object !== null && object !== void 0 && object.single ? ModeInfo_Single.fromAmino(object.single) : undefined,\n      multi: object !== null && object !== void 0 && object.multi ? ModeInfo_Multi.fromAmino(object.multi) : undefined\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.single = message.single ? ModeInfo_Single.toAmino(message.single) : undefined;\n    obj.multi = message.multi ? ModeInfo_Multi.toAmino(message.multi) : undefined;\n    return obj;\n  }\n};\nfunction createBaseModeInfo_Single() {\n  return {\n    mode: 0\n  };\n}\nvar ModeInfo_Single = {\n  typeUrl: \"/cosmos.tx.v1beta1.Single\",\n  aminoType: \"cosmos-sdk/Single\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseModeInfo_Single();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$mode;\n    var message = createBaseModeInfo_Single();\n    message.mode = (_object$mode = object.mode) !== null && _object$mode !== void 0 ? _object$mode : 0;\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      mode: (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.isSet)(object.mode) ? (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.signModeFromJSON)(object.mode) : -1\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.mode = message.mode;\n    return obj;\n  }\n};\nfunction createBaseModeInfo_Multi() {\n  return {\n    bitarray: _crypto_multisig__WEBPACK_IMPORTED_MODULE_4__.CompactBitArray.fromPartial({}),\n    modeInfos: []\n  };\n}\nvar ModeInfo_Multi = {\n  typeUrl: \"/cosmos.tx.v1beta1.Multi\",\n  aminoType: \"cosmos-sdk/Multi\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    if (message.bitarray !== undefined) {\n      _crypto_multisig__WEBPACK_IMPORTED_MODULE_4__.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator7 = _createForOfIteratorHelper(message.modeInfos),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var v = _step7.value;\n        ModeInfo.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseModeInfo_Multi();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = _crypto_multisig__WEBPACK_IMPORTED_MODULE_4__.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.modeInfos.push(ModeInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$modeInfos;\n    var message = createBaseModeInfo_Multi();\n    message.bitarray = object.bitarray !== undefined && object.bitarray !== null ? _crypto_multisig__WEBPACK_IMPORTED_MODULE_4__.CompactBitArray.fromPartial(object.bitarray) : undefined;\n    message.modeInfos = ((_object$modeInfos = object.modeInfos) === null || _object$modeInfos === void 0 ? void 0 : _object$modeInfos.map(function (e) {\n      return ModeInfo.fromPartial(e);\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      bitarray: object !== null && object !== void 0 && object.bitarray ? _crypto_multisig__WEBPACK_IMPORTED_MODULE_4__.CompactBitArray.fromAmino(object.bitarray) : undefined,\n      modeInfos: Array.isArray(object === null || object === void 0 ? void 0 : object.mode_infos) ? object.mode_infos.map(function (e) {\n        return ModeInfo.fromAmino(e);\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.bitarray = message.bitarray ? _crypto_multisig__WEBPACK_IMPORTED_MODULE_4__.CompactBitArray.toAmino(message.bitarray) : undefined;\n    if (message.modeInfos) {\n      obj.mode_infos = message.modeInfos.map(function (e) {\n        return e ? ModeInfo.toAmino(e) : undefined;\n      });\n    } else {\n      obj.mode_infos = [];\n    }\n    return obj;\n  }\n};\nfunction createBaseFee() {\n  return {\n    amount: [],\n    gasLimit: BigInt(0),\n    payer: \"\",\n    granter: \"\"\n  };\n}\nvar Fee = {\n  typeUrl: \"/cosmos.tx.v1beta1.Fee\",\n  aminoType: \"cosmos-sdk/Fee\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryWriter.create();\n    var _iterator8 = _createForOfIteratorHelper(message.amount),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var v = _step8.value;\n        _base__WEBPACK_IMPORTED_MODULE_3__.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (message.gasLimit !== BigInt(0)) {\n      writer.uint32(16).uint64(message.gasLimit);\n    }\n    if (message.payer !== \"\") {\n      writer.uint32(26).string(message.payer);\n    }\n    if (message.granter !== \"\") {\n      writer.uint32(34).string(message.granter);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_1__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseFee();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.amount.push(_base__WEBPACK_IMPORTED_MODULE_3__.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.gasLimit = reader.uint64();\n          break;\n        case 3:\n          message.payer = reader.string();\n          break;\n        case 4:\n          message.granter = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$amount, _object$payer, _object$granter;\n    var message = createBaseFee();\n    message.amount = ((_object$amount = object.amount) === null || _object$amount === void 0 ? void 0 : _object$amount.map(function (e) {\n      return _base__WEBPACK_IMPORTED_MODULE_3__.Coin.fromPartial(e);\n    })) || [];\n    message.gasLimit = object.gasLimit !== undefined && object.gasLimit !== null ? BigInt(object.gasLimit.toString()) : BigInt(0);\n    message.payer = (_object$payer = object.payer) !== null && _object$payer !== void 0 ? _object$payer : \"\";\n    message.granter = (_object$granter = object.granter) !== null && _object$granter !== void 0 ? _object$granter : \"\";\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      amount: Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map(function (e) {\n        return _base__WEBPACK_IMPORTED_MODULE_3__.Coin.fromAmino(e);\n      }) : [],\n      gasLimit: BigInt(object.gas_limit),\n      payer: object.payer,\n      granter: object.granter\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? _base__WEBPACK_IMPORTED_MODULE_3__.Coin.toAmino(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n    obj.gas_limit = message.gasLimit ? message.gasLimit.toString() : undefined;\n    obj.payer = message.payer;\n    obj.granter = message.granter;\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/tx.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/proto/vesting.ts":
/*!*************************************************!*\
  !*** ../cosmos/src/interchain/proto/vesting.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseVestingAccount\": () => (/* binding */ BaseVestingAccount),\n/* harmony export */   \"ClawbackVestingAccount\": () => (/* binding */ ClawbackVestingAccount),\n/* harmony export */   \"ContinuousVestingAccount\": () => (/* binding */ ContinuousVestingAccount),\n/* harmony export */   \"DelayedVestingAccount\": () => (/* binding */ DelayedVestingAccount),\n/* harmony export */   \"Period\": () => (/* binding */ Period),\n/* harmony export */   \"PeriodicVestingAccount\": () => (/* binding */ PeriodicVestingAccount),\n/* harmony export */   \"PermanentLockedAccount\": () => (/* binding */ PermanentLockedAccount)\n/* harmony export */ });\n/* harmony import */ var _binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary */ \"../cosmos/src/interchain/binary.ts\");\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth */ \"../cosmos/src/interchain/proto/auth.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ \"../cosmos/src/interchain/proto/base.ts\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n/**\n * BaseVestingAccount implements the VestingAccount interface. It contains all\n * the necessary fields needed for any vesting account implementation.\n */\n\n/**\n * BaseVestingAccount implements the VestingAccount interface. It contains all\n * the necessary fields needed for any vesting account implementation.\n */\n\n/**\n * ContinuousVestingAccount implements the VestingAccount interface. It\n * continuously vests by unlocking coins linearly with respect to time.\n */\n\n/**\n * ContinuousVestingAccount implements the VestingAccount interface. It\n * continuously vests by unlocking coins linearly with respect to time.\n */\n\n/**\n * DelayedVestingAccount implements the VestingAccount interface. It vests all\n * coins after a specific time, but non prior. In other words, it keeps them\n * locked until a specified time.\n */\n\n/**\n * DelayedVestingAccount implements the VestingAccount interface. It vests all\n * coins after a specific time, but non prior. In other words, it keeps them\n * locked until a specified time.\n */\n\n/** Period defines a length of time and amount of coins that will vest. */\n\n/** Period defines a length of time and amount of coins that will vest. */\n\n/**\n * PeriodicVestingAccount implements the VestingAccount interface. It\n * periodically vests by unlocking coins during each specified period.\n */\n\n/**\n * PeriodicVestingAccount implements the VestingAccount interface. It\n * periodically vests by unlocking coins during each specified period.\n */\n\n/**\n * PermanentLockedAccount implements the VestingAccount interface. It does\n * not ever release coins, locking them indefinitely. Coins in this account can\n * still be used for delegating and for governance votes even while locked.\n *\n * Since: cosmos-sdk 0.43\n */\n\n/**\n * PermanentLockedAccount implements the VestingAccount interface. It does\n * not ever release coins, locking them indefinitely. Coins in this account can\n * still be used for delegating and for governance votes even while locked.\n *\n * Since: cosmos-sdk 0.43\n */\n\n/**\n * ClawbackVestingAccount implements the VestingAccount interface. It provides\n * an account that can hold contributions subject to \"lockup\" (like a\n * PeriodicVestingAccount), or vesting which is subject to clawback\n * of unvested tokens, or a combination (tokens vest, but are still locked).\n */\n\n/**\n * ClawbackVestingAccount implements the VestingAccount interface. It provides\n * an account that can hold contributions subject to \"lockup\" (like a\n * PeriodicVestingAccount), or vesting which is subject to clawback\n * of unvested tokens, or a combination (tokens vest, but are still locked).\n */\n\nfunction createBaseBaseVestingAccount() {\n  return {\n    baseAccount: _auth__WEBPACK_IMPORTED_MODULE_1__.BaseAccount.fromPartial({}),\n    originalVesting: [],\n    delegatedFree: [],\n    delegatedVesting: [],\n    endTime: BigInt(0)\n  };\n}\nvar BaseVestingAccount = {\n  typeUrl: \"/cosmos.vesting.v1beta1.BaseVestingAccount\",\n  aminoType: \"cosmos-sdk/BaseVestingAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.baseAccount !== undefined) {\n      _auth__WEBPACK_IMPORTED_MODULE_1__.BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n    }\n    var _iterator = _createForOfIteratorHelper(message.originalVesting),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        _base__WEBPACK_IMPORTED_MODULE_2__.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.delegatedFree),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _v = _step2.value;\n        _base__WEBPACK_IMPORTED_MODULE_2__.Coin.encode(_v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var _iterator3 = _createForOfIteratorHelper(message.delegatedVesting),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _v2 = _step3.value;\n        _base__WEBPACK_IMPORTED_MODULE_2__.Coin.encode(_v2, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (message.endTime !== BigInt(0)) {\n      writer.uint32(40).int64(message.endTime);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseBaseVestingAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseAccount = _auth__WEBPACK_IMPORTED_MODULE_1__.BaseAccount.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.originalVesting.push(_base__WEBPACK_IMPORTED_MODULE_2__.Coin.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.delegatedFree.push(_base__WEBPACK_IMPORTED_MODULE_2__.Coin.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.delegatedVesting.push(_base__WEBPACK_IMPORTED_MODULE_2__.Coin.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.endTime = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$originalVesti, _object$delegatedFree, _object$delegatedVest;\n    var message = createBaseBaseVestingAccount();\n    message.baseAccount = object.baseAccount !== undefined && object.baseAccount !== null ? _auth__WEBPACK_IMPORTED_MODULE_1__.BaseAccount.fromPartial(object.baseAccount) : undefined;\n    message.originalVesting = ((_object$originalVesti = object.originalVesting) === null || _object$originalVesti === void 0 ? void 0 : _object$originalVesti.map(function (e) {\n      return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromPartial(e);\n    })) || [];\n    message.delegatedFree = ((_object$delegatedFree = object.delegatedFree) === null || _object$delegatedFree === void 0 ? void 0 : _object$delegatedFree.map(function (e) {\n      return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromPartial(e);\n    })) || [];\n    message.delegatedVesting = ((_object$delegatedVest = object.delegatedVesting) === null || _object$delegatedVest === void 0 ? void 0 : _object$delegatedVest.map(function (e) {\n      return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromPartial(e);\n    })) || [];\n    message.endTime = object.endTime !== undefined && object.endTime !== null ? BigInt(object.endTime.toString()) : BigInt(0);\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      baseAccount: object !== null && object !== void 0 && object.base_account ? _auth__WEBPACK_IMPORTED_MODULE_1__.BaseAccount.fromAmino(object.base_account) : undefined,\n      originalVesting: Array.isArray(object === null || object === void 0 ? void 0 : object.original_vesting) ? object.original_vesting.map(function (e) {\n        return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromAmino(e);\n      }) : [],\n      delegatedFree: Array.isArray(object === null || object === void 0 ? void 0 : object.delegated_free) ? object.delegated_free.map(function (e) {\n        return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromAmino(e);\n      }) : [],\n      delegatedVesting: Array.isArray(object === null || object === void 0 ? void 0 : object.delegated_vesting) ? object.delegated_vesting.map(function (e) {\n        return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromAmino(e);\n      }) : [],\n      endTime: BigInt(object.end_time)\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.base_account = message.baseAccount ? _auth__WEBPACK_IMPORTED_MODULE_1__.BaseAccount.toAmino(message.baseAccount) : undefined;\n    if (message.originalVesting) {\n      obj.original_vesting = message.originalVesting.map(function (e) {\n        return e ? _base__WEBPACK_IMPORTED_MODULE_2__.Coin.toAmino(e) : undefined;\n      });\n    } else {\n      obj.original_vesting = [];\n    }\n    if (message.delegatedFree) {\n      obj.delegated_free = message.delegatedFree.map(function (e) {\n        return e ? _base__WEBPACK_IMPORTED_MODULE_2__.Coin.toAmino(e) : undefined;\n      });\n    } else {\n      obj.delegated_free = [];\n    }\n    if (message.delegatedVesting) {\n      obj.delegated_vesting = message.delegatedVesting.map(function (e) {\n        return e ? _base__WEBPACK_IMPORTED_MODULE_2__.Coin.toAmino(e) : undefined;\n      });\n    } else {\n      obj.delegated_vesting = [];\n    }\n    obj.end_time = message.endTime ? message.endTime.toString() : undefined;\n    return obj;\n  }\n};\nfunction createBaseContinuousVestingAccount() {\n  return {\n    baseVestingAccount: BaseVestingAccount.fromPartial({}),\n    startTime: BigInt(0)\n  };\n}\nvar ContinuousVestingAccount = {\n  typeUrl: \"/cosmos.vesting.v1beta1.ContinuousVestingAccount\",\n  aminoType: \"cosmos-sdk/ContinuousVestingAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.baseVestingAccount !== undefined) {\n      BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.startTime !== BigInt(0)) {\n      writer.uint32(16).int64(message.startTime);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseContinuousVestingAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.startTime = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseContinuousVestingAccount();\n    message.baseVestingAccount = object.baseVestingAccount !== undefined && object.baseVestingAccount !== null ? BaseVestingAccount.fromPartial(object.baseVestingAccount) : undefined;\n    message.startTime = object.startTime !== undefined && object.startTime !== null ? BigInt(object.startTime.toString()) : BigInt(0);\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      baseVestingAccount: object !== null && object !== void 0 && object.base_vesting_account ? BaseVestingAccount.fromAmino(object.base_vesting_account) : undefined,\n      startTime: BigInt(object.start_time)\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.base_vesting_account = message.baseVestingAccount ? BaseVestingAccount.toAmino(message.baseVestingAccount) : undefined;\n    obj.start_time = message.startTime ? message.startTime.toString() : undefined;\n    return obj;\n  }\n};\nfunction createBaseDelayedVestingAccount() {\n  return {\n    baseVestingAccount: BaseVestingAccount.fromPartial({})\n  };\n}\nvar DelayedVestingAccount = {\n  typeUrl: \"/cosmos.vesting.v1beta1.DelayedVestingAccount\",\n  aminoType: \"cosmos-sdk/DelayedVestingAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.baseVestingAccount !== undefined) {\n      BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDelayedVestingAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseDelayedVestingAccount();\n    message.baseVestingAccount = object.baseVestingAccount !== undefined && object.baseVestingAccount !== null ? BaseVestingAccount.fromPartial(object.baseVestingAccount) : undefined;\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      baseVestingAccount: object !== null && object !== void 0 && object.base_vesting_account ? BaseVestingAccount.fromAmino(object.base_vesting_account) : undefined\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.base_vesting_account = message.baseVestingAccount ? BaseVestingAccount.toAmino(message.baseVestingAccount) : undefined;\n    return obj;\n  }\n};\nfunction createBasePeriod() {\n  return {\n    length: BigInt(0),\n    amount: []\n  };\n}\nvar Period = {\n  typeUrl: \"/cosmos.vesting.v1beta1.Period\",\n  aminoType: \"cosmos-sdk/Period\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.length !== BigInt(0)) {\n      writer.uint32(8).int64(message.length);\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.amount),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        _base__WEBPACK_IMPORTED_MODULE_2__.Coin.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePeriod();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.length = reader.int64();\n          break;\n        case 2:\n          message.amount.push(_base__WEBPACK_IMPORTED_MODULE_2__.Coin.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$amount;\n    var message = createBasePeriod();\n    message.length = object.length !== undefined && object.length !== null ? BigInt(object.length.toString()) : BigInt(0);\n    message.amount = ((_object$amount = object.amount) === null || _object$amount === void 0 ? void 0 : _object$amount.map(function (e) {\n      return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromPartial(e);\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      length: BigInt(object.length),\n      amount: Array.isArray(object === null || object === void 0 ? void 0 : object.amount) ? object.amount.map(function (e) {\n        return _base__WEBPACK_IMPORTED_MODULE_2__.Coin.fromAmino(e);\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.length = message.length ? message.length.toString() : undefined;\n    if (message.amount) {\n      obj.amount = message.amount.map(function (e) {\n        return e ? _base__WEBPACK_IMPORTED_MODULE_2__.Coin.toAmino(e) : undefined;\n      });\n    } else {\n      obj.amount = [];\n    }\n    return obj;\n  }\n};\nfunction createBasePeriodicVestingAccount() {\n  return {\n    baseVestingAccount: BaseVestingAccount.fromPartial({}),\n    startTime: BigInt(0),\n    vestingPeriods: []\n  };\n}\nvar PeriodicVestingAccount = {\n  typeUrl: \"/cosmos.vesting.v1beta1.PeriodicVestingAccount\",\n  aminoType: \"cosmos-sdk/PeriodicVestingAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.baseVestingAccount !== undefined) {\n      BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.startTime !== BigInt(0)) {\n      writer.uint32(16).int64(message.startTime);\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.vestingPeriods),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        Period.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePeriodicVestingAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.startTime = reader.int64();\n          break;\n        case 3:\n          message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$vestingPeriod;\n    var message = createBasePeriodicVestingAccount();\n    message.baseVestingAccount = object.baseVestingAccount !== undefined && object.baseVestingAccount !== null ? BaseVestingAccount.fromPartial(object.baseVestingAccount) : undefined;\n    message.startTime = object.startTime !== undefined && object.startTime !== null ? BigInt(object.startTime.toString()) : BigInt(0);\n    message.vestingPeriods = ((_object$vestingPeriod = object.vestingPeriods) === null || _object$vestingPeriod === void 0 ? void 0 : _object$vestingPeriod.map(function (e) {\n      return Period.fromPartial(e);\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      baseVestingAccount: object !== null && object !== void 0 && object.base_vesting_account ? BaseVestingAccount.fromAmino(object.base_vesting_account) : undefined,\n      startTime: BigInt(object.start_time),\n      vestingPeriods: Array.isArray(object === null || object === void 0 ? void 0 : object.vesting_periods) ? object.vesting_periods.map(function (e) {\n        return Period.fromAmino(e);\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.base_vesting_account = message.baseVestingAccount ? BaseVestingAccount.toAmino(message.baseVestingAccount) : undefined;\n    obj.start_time = message.startTime ? message.startTime.toString() : undefined;\n    if (message.vestingPeriods) {\n      obj.vesting_periods = message.vestingPeriods.map(function (e) {\n        return e ? Period.toAmino(e) : undefined;\n      });\n    } else {\n      obj.vesting_periods = [];\n    }\n    return obj;\n  }\n};\nfunction createBasePermanentLockedAccount() {\n  return {\n    baseVestingAccount: BaseVestingAccount.fromPartial({})\n  };\n}\nvar PermanentLockedAccount = {\n  typeUrl: \"/cosmos.vesting.v1beta1.PermanentLockedAccount\",\n  aminoType: \"cosmos-sdk/PermanentLockedAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.baseVestingAccount !== undefined) {\n      BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBasePermanentLockedAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBasePermanentLockedAccount();\n    message.baseVestingAccount = object.baseVestingAccount !== undefined && object.baseVestingAccount !== null ? BaseVestingAccount.fromPartial(object.baseVestingAccount) : undefined;\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      baseVestingAccount: object !== null && object !== void 0 && object.base_vesting_account ? BaseVestingAccount.fromAmino(object.base_vesting_account) : undefined\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.base_vesting_account = message.baseVestingAccount ? BaseVestingAccount.toAmino(message.baseVestingAccount) : undefined;\n    return obj;\n  }\n};\nfunction createBaseClawbackVestingAccount() {\n  return {\n    baseVestingAccount: BaseVestingAccount.fromPartial({}),\n    funderAddress: \"\",\n    startTime: BigInt(0),\n    lockupPeriods: [],\n    vestingPeriods: []\n  };\n}\nvar ClawbackVestingAccount = {\n  typeUrl: \"/cosmos.vesting.v1beta1.ClawbackVestingAccount\",\n  aminoType: \"cosmos-sdk/ClawbackVestingAccount\",\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter.create();\n    if (message.baseVestingAccount !== undefined) {\n      BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.funderAddress !== \"\") {\n      writer.uint32(18).string(message.funderAddress);\n    }\n    if (message.startTime !== BigInt(0)) {\n      writer.uint32(24).int64(message.startTime);\n    }\n    var _iterator6 = _createForOfIteratorHelper(message.lockupPeriods),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var v = _step6.value;\n        Period.encode(v, writer.uint32(34).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    var _iterator7 = _createForOfIteratorHelper(message.vestingPeriods),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _v3 = _step7.value;\n        Period.encode(_v3, writer.uint32(42).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader ? input : new _binary__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseClawbackVestingAccount();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.funderAddress = reader.string();\n          break;\n        case 3:\n          message.startTime = reader.int64();\n          break;\n        case 4:\n          message.lockupPeriods.push(Period.decode(reader, reader.uint32()));\n          break;\n        case 5:\n          message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$funderAddress, _object$lockupPeriods, _object$vestingPeriod2;\n    var message = createBaseClawbackVestingAccount();\n    message.baseVestingAccount = object.baseVestingAccount !== undefined && object.baseVestingAccount !== null ? BaseVestingAccount.fromPartial(object.baseVestingAccount) : undefined;\n    message.funderAddress = (_object$funderAddress = object.funderAddress) !== null && _object$funderAddress !== void 0 ? _object$funderAddress : \"\";\n    message.startTime = object.startTime !== undefined && object.startTime !== null ? BigInt(object.startTime.toString()) : BigInt(0);\n    message.lockupPeriods = ((_object$lockupPeriods = object.lockupPeriods) === null || _object$lockupPeriods === void 0 ? void 0 : _object$lockupPeriods.map(function (e) {\n      return Period.fromPartial(e);\n    })) || [];\n    message.vestingPeriods = ((_object$vestingPeriod2 = object.vestingPeriods) === null || _object$vestingPeriod2 === void 0 ? void 0 : _object$vestingPeriod2.map(function (e) {\n      return Period.fromPartial(e);\n    })) || [];\n    return message;\n  },\n  fromAmino: function fromAmino(object) {\n    return {\n      baseVestingAccount: object !== null && object !== void 0 && object.base_vesting_account ? BaseVestingAccount.fromAmino(object.base_vesting_account) : undefined,\n      funderAddress: object.funder_address,\n      startTime: BigInt(object.start_time),\n      lockupPeriods: Array.isArray(object === null || object === void 0 ? void 0 : object.lockup_periods) ? object.lockup_periods.map(function (e) {\n        return Period.fromAmino(e);\n      }) : [],\n      vestingPeriods: Array.isArray(object === null || object === void 0 ? void 0 : object.vesting_periods) ? object.vesting_periods.map(function (e) {\n        return Period.fromAmino(e);\n      }) : []\n    };\n  },\n  toAmino: function toAmino(message) {\n    var obj = {};\n    obj.base_vesting_account = message.baseVestingAccount ? BaseVestingAccount.toAmino(message.baseVestingAccount) : undefined;\n    obj.funder_address = message.funderAddress;\n    obj.start_time = message.startTime ? message.startTime.toString() : undefined;\n    if (message.lockupPeriods) {\n      obj.lockup_periods = message.lockupPeriods.map(function (e) {\n        return e ? Period.toAmino(e) : undefined;\n      });\n    } else {\n      obj.lockup_periods = [];\n    }\n    if (message.vestingPeriods) {\n      obj.vesting_periods = message.vestingPeriods.map(function (e) {\n        return e ? Period.toAmino(e) : undefined;\n      });\n    } else {\n      obj.vesting_periods = [];\n    }\n    return obj;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/proto/vesting.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/types.ts":
/*!*****************************************!*\
  !*** ../cosmos/src/interchain/types.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BroadcastMode\": () => (/* binding */ BroadcastMode),\n/* harmony export */   \"SignMode\": () => (/* binding */ SignMode)\n/* harmony export */ });\nvar BroadcastMode = /*#__PURE__*/function (BroadcastMode) {\n  BroadcastMode[BroadcastMode[\"BROADCAST_MODE_UNSPECIFIED\"] = 0] = \"BROADCAST_MODE_UNSPECIFIED\";\n  BroadcastMode[BroadcastMode[\"BROADCAST_MODE_BLOCK\"] = 1] = \"BROADCAST_MODE_BLOCK\";\n  BroadcastMode[BroadcastMode[\"BROADCAST_MODE_SYNC\"] = 2] = \"BROADCAST_MODE_SYNC\";\n  BroadcastMode[BroadcastMode[\"BROADCAST_MODE_ASYNC\"] = 3] = \"BROADCAST_MODE_ASYNC\";\n  BroadcastMode[BroadcastMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return BroadcastMode;\n}({});\n\n/** SignMode represents a signing mode with its own security guarantees. */\nvar SignMode = /*#__PURE__*/function (SignMode) {\n  SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n  SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n  SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n  SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n  SignMode[SignMode[\"SIGN_MODE_EIP_191\"] = 191] = \"SIGN_MODE_EIP_191\";\n  SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n  return SignMode;\n}({});\n\n/**\n * Attribute defines an attribute wrapper where the key and value are\n * strings instead of raw bytes.\n */\n\n/**\n * StringEvent defines en Event object wrapper where all the attributes\n * contain key/value pairs that are strings instead of raw bytes.\n */\n\n/** ABCIMessageLog defines a structure containing an indexed tx ABCI message log. */\n\n/** EventAttribute is a single key-value pair, associated with an event. */\n\n/**\n * Event allows application developers to attach additional information to\n * ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.\n * Later, transactions may be queried using these events.\n *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL3R5cGVzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRU8sSUFBS0EsYUFBYSwwQkFBYkEsYUFBYTtFQUFiQSxhQUFhLENBQWJBLGFBQWE7RUFBYkEsYUFBYSxDQUFiQSxhQUFhO0VBQWJBLGFBQWEsQ0FBYkEsYUFBYTtFQUFiQSxhQUFhLENBQWJBLGFBQWE7RUFBYkEsYUFBYSxDQUFiQSxhQUFhO0VBQUEsT0FBYkEsYUFBYTtBQUFBOztBQXFCekI7QUFDTyxJQUFLQyxRQUFRLDBCQUFSQSxRQUFRO0VBQVJBLFFBQVEsQ0FBUkEsUUFBUTtFQUFSQSxRQUFRLENBQVJBLFFBQVE7RUFBUkEsUUFBUSxDQUFSQSxRQUFRO0VBQVJBLFFBQVEsQ0FBUkEsUUFBUTtFQUFSQSxRQUFRLENBQVJBLFFBQVE7RUFBUkEsUUFBUSxDQUFSQSxRQUFRO0VBQUEsT0FBUkEsUUFBUTtBQUFBOztBQXNDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7O0FBTUE7O0FBV0E7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzaWduL2V4YW1wbGUvLi4vY29zbW9zL3NyYy9pbnRlcmNoYWluL3R5cGVzLnRzPzg3NWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQW55IH0gZnJvbSBcIi4vYW55XCI7XG5cbmV4cG9ydCBlbnVtIEJyb2FkY2FzdE1vZGUge1xuICAvKiogQlJPQURDQVNUX01PREVfVU5TUEVDSUZJRUQgLSB6ZXJvLXZhbHVlIGZvciBtb2RlIG9yZGVyaW5nICovXG4gIEJST0FEQ0FTVF9NT0RFX1VOU1BFQ0lGSUVEID0gMCxcbiAgLyoqXG4gICAqIEJST0FEQ0FTVF9NT0RFX0JMT0NLIC0gQlJPQURDQVNUX01PREVfQkxPQ0sgZGVmaW5lcyBhIHR4IGJyb2FkY2FzdGluZyBtb2RlIHdoZXJlIHRoZSBjbGllbnQgd2FpdHMgZm9yXG4gICAqIHRoZSB0eCB0byBiZSBjb21taXR0ZWQgaW4gYSBibG9jay5cbiAgICovXG4gIEJST0FEQ0FTVF9NT0RFX0JMT0NLID0gMSxcbiAgLyoqXG4gICAqIEJST0FEQ0FTVF9NT0RFX1NZTkMgLSBCUk9BRENBU1RfTU9ERV9TWU5DIGRlZmluZXMgYSB0eCBicm9hZGNhc3RpbmcgbW9kZSB3aGVyZSB0aGUgY2xpZW50IHdhaXRzIGZvclxuICAgKiBhIENoZWNrVHggZXhlY3V0aW9uIHJlc3BvbnNlIG9ubHkuXG4gICAqL1xuICBCUk9BRENBU1RfTU9ERV9TWU5DID0gMixcbiAgLyoqXG4gICAqIEJST0FEQ0FTVF9NT0RFX0FTWU5DIC0gQlJPQURDQVNUX01PREVfQVNZTkMgZGVmaW5lcyBhIHR4IGJyb2FkY2FzdGluZyBtb2RlIHdoZXJlIHRoZSBjbGllbnQgcmV0dXJuc1xuICAgKiBpbW1lZGlhdGVseS5cbiAgICovXG4gIEJST0FEQ0FTVF9NT0RFX0FTWU5DID0gMyxcbiAgVU5SRUNPR05JWkVEID0gLTEsXG59XG5cbi8qKiBTaWduTW9kZSByZXByZXNlbnRzIGEgc2lnbmluZyBtb2RlIHdpdGggaXRzIG93biBzZWN1cml0eSBndWFyYW50ZWVzLiAqL1xuZXhwb3J0IGVudW0gU2lnbk1vZGUge1xuICAvKipcbiAgICogU0lHTl9NT0RFX1VOU1BFQ0lGSUVEIC0gU0lHTl9NT0RFX1VOU1BFQ0lGSUVEIHNwZWNpZmllcyBhbiB1bmtub3duIHNpZ25pbmcgbW9kZSBhbmQgd2lsbCBiZVxuICAgKiByZWplY3RlZFxuICAgKi9cbiAgU0lHTl9NT0RFX1VOU1BFQ0lGSUVEID0gMCxcbiAgLyoqXG4gICAqIFNJR05fTU9ERV9ESVJFQ1QgLSBTSUdOX01PREVfRElSRUNUIHNwZWNpZmllcyBhIHNpZ25pbmcgbW9kZSB3aGljaCB1c2VzIFNpZ25Eb2MgYW5kIGlzXG4gICAqIHZlcmlmaWVkIHdpdGggcmF3IGJ5dGVzIGZyb20gVHhcbiAgICovXG4gIFNJR05fTU9ERV9ESVJFQ1QgPSAxLFxuICAvKipcbiAgICogU0lHTl9NT0RFX1RFWFRVQUwgLSBTSUdOX01PREVfVEVYVFVBTCBpcyBhIGZ1dHVyZSBzaWduaW5nIG1vZGUgdGhhdCB3aWxsIHZlcmlmeSBzb21lXG4gICAqIGh1bWFuLXJlYWRhYmxlIHRleHR1YWwgcmVwcmVzZW50YXRpb24gb24gdG9wIG9mIHRoZSBiaW5hcnkgcmVwcmVzZW50YXRpb25cbiAgICogZnJvbSBTSUdOX01PREVfRElSRUNUXG4gICAqL1xuICBTSUdOX01PREVfVEVYVFVBTCA9IDIsXG4gIC8qKlxuICAgKiBTSUdOX01PREVfTEVHQUNZX0FNSU5PX0pTT04gLSBTSUdOX01PREVfTEVHQUNZX0FNSU5PX0pTT04gaXMgYSBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBtb2RlIHdoaWNoIHVzZXNcbiAgICogQW1pbm8gSlNPTiBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBmdXR1cmVcbiAgICovXG4gIFNJR05fTU9ERV9MRUdBQ1lfQU1JTk9fSlNPTiA9IDEyNyxcbiAgLyoqXG4gICAqIFNJR05fTU9ERV9FSVBfMTkxIC0gU0lHTl9NT0RFX0VJUF8xOTEgc3BlY2lmaWVzIHRoZSBzaWduIG1vZGUgZm9yIEVJUCAxOTEgc2lnbmluZyBvbiB0aGUgQ29zbW9zXG4gICAqIFNESy4gUmVmOiBodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTE5MVxuICAgKlxuICAgKiBDdXJyZW50bHksIFNJR05fTU9ERV9FSVBfMTkxIGlzIHJlZ2lzdGVyZWQgYXMgYSBTaWduTW9kZSBlbnVtIHZhcmlhbnQsXG4gICAqIGJ1dCBpcyBub3QgaW1wbGVtZW50ZWQgb24gdGhlIFNESyBieSBkZWZhdWx0LiBUbyBlbmFibGUgRUlQLTE5MSwgeW91IG5lZWRcbiAgICogdG8gcGFzcyBhIGN1c3RvbSBgVHhDb25maWdgIHRoYXQgaGFzIGFuIGltcGxlbWVudGF0aW9uIG9mXG4gICAqIGBTaWduTW9kZUhhbmRsZXJgIGZvciBFSVAtMTkxLiBUaGUgU0RLIG1heSBkZWNpZGUgdG8gZnVsbHkgc3VwcG9ydFxuICAgKiBFSVAtMTkxIGluIHRoZSBmdXR1cmUuXG4gICAqXG4gICAqIFNpbmNlOiBjb3Ntb3Mtc2RrIDAuNDUuMlxuICAgKi9cbiAgU0lHTl9NT0RFX0VJUF8xOTEgPSAxOTEsXG4gIFVOUkVDT0dOSVpFRCA9IC0xLFxufVxuXG4vKipcbiAqIEF0dHJpYnV0ZSBkZWZpbmVzIGFuIGF0dHJpYnV0ZSB3cmFwcGVyIHdoZXJlIHRoZSBrZXkgYW5kIHZhbHVlIGFyZVxuICogc3RyaW5ncyBpbnN0ZWFkIG9mIHJhdyBieXRlcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBdHRyaWJ1dGUge1xuICBrZXk6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbn1cblxuLyoqXG4gKiBTdHJpbmdFdmVudCBkZWZpbmVzIGVuIEV2ZW50IG9iamVjdCB3cmFwcGVyIHdoZXJlIGFsbCB0aGUgYXR0cmlidXRlc1xuICogY29udGFpbiBrZXkvdmFsdWUgcGFpcnMgdGhhdCBhcmUgc3RyaW5ncyBpbnN0ZWFkIG9mIHJhdyBieXRlcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdFdmVudCB7XG4gIHR5cGU6IHN0cmluZztcbiAgYXR0cmlidXRlczogQXR0cmlidXRlW107XG59XG5cbi8qKiBBQkNJTWVzc2FnZUxvZyBkZWZpbmVzIGEgc3RydWN0dXJlIGNvbnRhaW5pbmcgYW4gaW5kZXhlZCB0eCBBQkNJIG1lc3NhZ2UgbG9nLiAqL1xuZXhwb3J0IGludGVyZmFjZSBBQkNJTWVzc2FnZUxvZyB7XG4gIG1zZ0luZGV4OiBudW1iZXI7XG4gIGxvZzogc3RyaW5nO1xuICAvKipcbiAgICogRXZlbnRzIGNvbnRhaW5zIGEgc2xpY2Ugb2YgRXZlbnQgb2JqZWN0cyB0aGF0IHdlcmUgZW1pdHRlZCBkdXJpbmcgc29tZVxuICAgKiBleGVjdXRpb24uXG4gICAqL1xuICBldmVudHM6IFN0cmluZ0V2ZW50W107XG59XG5cbi8qKiBFdmVudEF0dHJpYnV0ZSBpcyBhIHNpbmdsZSBrZXktdmFsdWUgcGFpciwgYXNzb2NpYXRlZCB3aXRoIGFuIGV2ZW50LiAqL1xuZXhwb3J0IGludGVyZmFjZSBFdmVudEF0dHJpYnV0ZSB7XG4gIGtleTogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xuICAvKiogbm9uZGV0ZXJtaW5pc3RpYyAqL1xuICBpbmRleDogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBFdmVudCBhbGxvd3MgYXBwbGljYXRpb24gZGV2ZWxvcGVycyB0byBhdHRhY2ggYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0b1xuICogUmVzcG9uc2VCZWdpbkJsb2NrLCBSZXNwb25zZUVuZEJsb2NrLCBSZXNwb25zZUNoZWNrVHggYW5kIFJlc3BvbnNlRGVsaXZlclR4LlxuICogTGF0ZXIsIHRyYW5zYWN0aW9ucyBtYXkgYmUgcXVlcmllZCB1c2luZyB0aGVzZSBldmVudHMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnQge1xuICB0eXBlOiBzdHJpbmc7XG4gIGF0dHJpYnV0ZXM6IEV2ZW50QXR0cmlidXRlW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHhSZXNwb25zZSB7XG4gIC8qKiBUaGUgYmxvY2sgaGVpZ2h0ICovXG4gIGhlaWdodDogYmlnaW50O1xuICAvKiogVGhlIHRyYW5zYWN0aW9uIGhhc2guICovXG4gIHR4aGFzaDogc3RyaW5nO1xuICAvKiogTmFtZXNwYWNlIGZvciB0aGUgQ29kZSAqL1xuICBjb2Rlc3BhY2U6IHN0cmluZztcbiAgLyoqIFJlc3BvbnNlIGNvZGUuICovXG4gIGNvZGU6IG51bWJlcjtcbiAgLyoqIFJlc3VsdCBieXRlcywgaWYgYW55LiAqL1xuICBkYXRhOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgb3V0cHV0IG9mIHRoZSBhcHBsaWNhdGlvbidzIGxvZ2dlciAocmF3IHN0cmluZykuIE1heSBiZVxuICAgKiBub24tZGV0ZXJtaW5pc3RpYy5cbiAgICovXG4gIHJhd0xvZzogc3RyaW5nO1xuICAvKiogVGhlIG91dHB1dCBvZiB0aGUgYXBwbGljYXRpb24ncyBsb2dnZXIgKHR5cGVkKS4gTWF5IGJlIG5vbi1kZXRlcm1pbmlzdGljLiAqL1xuICBsb2dzOiBBQkNJTWVzc2FnZUxvZ1tdO1xuICAvKiogQWRkaXRpb25hbCBpbmZvcm1hdGlvbi4gTWF5IGJlIG5vbi1kZXRlcm1pbmlzdGljLiAqL1xuICBpbmZvOiBzdHJpbmc7XG4gIC8qKiBBbW91bnQgb2YgZ2FzIHJlcXVlc3RlZCBmb3IgdHJhbnNhY3Rpb24uICovXG4gIGdhc1dhbnRlZDogYmlnaW50O1xuICAvKiogQW1vdW50IG9mIGdhcyBjb25zdW1lZCBieSB0cmFuc2FjdGlvbi4gKi9cbiAgZ2FzVXNlZDogYmlnaW50O1xuICAvKiogVGhlIHJlcXVlc3QgdHJhbnNhY3Rpb24gYnl0ZXMuICovXG4gIHR4OiBBbnkgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUaW1lIG9mIHRoZSBwcmV2aW91cyBibG9jay4gRm9yIGhlaWdodHMgPiAxLCBpdCdzIHRoZSB3ZWlnaHRlZCBtZWRpYW4gb2ZcbiAgICogdGhlIHRpbWVzdGFtcHMgb2YgdGhlIHZhbGlkIHZvdGVzIGluIHRoZSBibG9jay5MYXN0Q29tbWl0LiBGb3IgaGVpZ2h0ID09IDEsXG4gICAqIGl0J3MgZ2VuZXNpcyB0aW1lLlxuICAgKi9cbiAgdGltZXN0YW1wOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBFdmVudHMgZGVmaW5lcyBhbGwgdGhlIGV2ZW50cyBlbWl0dGVkIGJ5IHByb2Nlc3NpbmcgYSB0cmFuc2FjdGlvbi4gTm90ZSxcbiAgICogdGhlc2UgZXZlbnRzIGluY2x1ZGUgdGhvc2UgZW1pdHRlZCBieSBwcm9jZXNzaW5nIGFsbCB0aGUgbWVzc2FnZXMgYW5kIHRob3NlXG4gICAqIGVtaXR0ZWQgZnJvbSB0aGUgYW50ZSBoYW5kbGVyLiBXaGVyZWFzIExvZ3MgY29udGFpbnMgdGhlIGV2ZW50cywgd2l0aFxuICAgKiBhZGRpdGlvbmFsIG1ldGFkYXRhLCBlbWl0dGVkIG9ubHkgYnkgcHJvY2Vzc2luZyB0aGUgbWVzc2FnZXMuXG4gICAqXG4gICAqIFNpbmNlOiBjb3Ntb3Mtc2RrIDAuNDIuMTEsIDAuNDQuNSwgMC40NVxuICAgKi9cbiAgZXZlbnRzOiBFdmVudFtdO1xufVxuIl0sIm5hbWVzIjpbIkJyb2FkY2FzdE1vZGUiLCJTaWduTW9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/types.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/utf8.ts":
/*!****************************************!*\
  !*** ../cosmos/src/interchain/utf8.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"utf8Length\": () => (/* binding */ utf8Length),\n/* harmony export */   \"utf8Read\": () => (/* binding */ utf8Read),\n/* harmony export */   \"utf8Write\": () => (/* binding */ utf8Write)\n/* harmony export */ });\n/**\n * This file and any referenced files were automatically generated by @osmonauts/telescope@0.99.10\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\n\n// Copyright (c) 2016, Daniel Wirtz  All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n// * Neither the name of its author, nor the names of its contributors\n//   may be used to endorse or promote products derived from this software\n//   without specific prior written permission.\n\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction utf8Length(str) {\n  var len = 0,\n    c = 0;\n  for (var i = 0; i < str.length; ++i) {\n    c = str.charCodeAt(i);\n    if (c < 128) len += 1;else if (c < 2048) len += 2;else if ((c & 0xfc00) === 0xd800 && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      ++i;\n      len += 4;\n    } else len += 3;\n  }\n  return len;\n}\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nfunction utf8Read(buffer, start, end) {\n  var len = end - start;\n  if (len < 1) return \"\";\n  var chunk = [];\n  var parts = null,\n    i = 0,\n    // char offset\n    t; // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128) chunk[i++] = t;else if (t > 191 && t < 224) chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xd800 + (t >> 10);\n      chunk[i++] = 0xdc00 + (t & 1023);\n    } else chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i) parts.push(String.fromCharCode.apply(String, _toConsumableArray(chunk.slice(0, i))));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode.apply(String, _toConsumableArray(chunk.slice(0, i)));\n}\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nfunction utf8Write(str, buffer, offset) {\n  var start = offset;\n  var c1,\n    // character 1\n    c2; // character 2\n  for (var i = 0; i < str.length; ++i) {\n    c1 = str.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xfc00) === 0xd800 && ((c2 = str.charCodeAt(i + 1)) & 0xfc00) === 0xdc00) {\n      c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/utf8.ts\n");

/***/ }),

/***/ "../cosmos/src/interchain/varint.ts":
/*!******************************************!*\
  !*** ../cosmos/src/interchain/varint.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"int64FromString\": () => (/* binding */ int64FromString),\n/* harmony export */   \"int64Length\": () => (/* binding */ int64Length),\n/* harmony export */   \"int64ToString\": () => (/* binding */ int64ToString),\n/* harmony export */   \"readInt32\": () => (/* binding */ readInt32),\n/* harmony export */   \"readUInt32\": () => (/* binding */ readUInt32),\n/* harmony export */   \"uInt64ToString\": () => (/* binding */ uInt64ToString),\n/* harmony export */   \"varint32read\": () => (/* binding */ varint32read),\n/* harmony export */   \"varint32write\": () => (/* binding */ varint32write),\n/* harmony export */   \"varint64read\": () => (/* binding */ varint64read),\n/* harmony export */   \"varint64write\": () => (/* binding */ varint64write),\n/* harmony export */   \"writeByte\": () => (/* binding */ writeByte),\n/* harmony export */   \"writeFixed32\": () => (/* binding */ writeFixed32),\n/* harmony export */   \"writeVarint32\": () => (/* binding */ writeVarint32),\n/* harmony export */   \"writeVarint64\": () => (/* binding */ writeVarint64),\n/* harmony export */   \"zzDecode\": () => (/* binding */ zzDecode),\n/* harmony export */   \"zzEncode\": () => (/* binding */ zzEncode)\n/* harmony export */ });\n/**\n * This file and any referenced files were automatically generated by @osmonauts/telescope@0.99.10\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\n\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n  var lowBits = 0;\n  var highBits = 0;\n  for (var shift = 0; shift < 28; shift += 7) {\n    var b = this.buf[this.pos++];\n    lowBits |= (b & 0x7f) << shift;\n    if ((b & 0x80) == 0) {\n      this.assertBounds();\n      return [lowBits, highBits];\n    }\n  }\n  var middleByte = this.buf[this.pos++];\n\n  // last four bits of the first 32 bit number\n  lowBits |= (middleByte & 0x0f) << 28;\n\n  // 3 upper bits are part of the next 32 bit number\n  highBits = (middleByte & 0x70) >> 4;\n  if ((middleByte & 0x80) == 0) {\n    this.assertBounds();\n    return [lowBits, highBits];\n  }\n  for (var _shift = 3; _shift <= 31; _shift += 7) {\n    var _b = this.buf[this.pos++];\n    highBits |= (_b & 0x7f) << _shift;\n    if ((_b & 0x80) == 0) {\n      this.assertBounds();\n      return [lowBits, highBits];\n    }\n  }\n  throw new Error(\"invalid varint\");\n}\n\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n  for (var i = 0; i < 28; i = i + 7) {\n    var shift = lo >>> i;\n    var hasNext = !(shift >>> 7 == 0 && hi == 0);\n    var _byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n    bytes.push(_byte);\n    if (!hasNext) {\n      return;\n    }\n  }\n  var splitBits = lo >>> 28 & 0x0f | (hi & 0x07) << 4;\n  var hasMoreBits = !(hi >> 3 == 0);\n  bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n  if (!hasMoreBits) {\n    return;\n  }\n  for (var _i = 3; _i < 31; _i = _i + 7) {\n    var _shift2 = hi >>> _i;\n    var _hasNext = !(_shift2 >>> 7 == 0);\n    var _byte2 = (_hasNext ? _shift2 | 0x80 : _shift2) & 0xff;\n    bytes.push(_byte2);\n    if (!_hasNext) {\n      return;\n    }\n  }\n  bytes.push(hi >>> 31 & 0x01);\n}\n\n// constants for binary math\nvar TWO_PWR_32_DBL = 0x100000000;\n\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n  // Check for minus sign.\n  var minus = dec[0] === \"-\";\n  if (minus) {\n    dec = dec.slice(1);\n  }\n\n  // Work 6 decimal digits at a time, acting like we're converting base 1e6\n  // digits to binary. This is safe to do with floating point math because\n  // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n  var base = 1e6;\n  var lowBits = 0;\n  var highBits = 0;\n  function add1e6digit(begin, end) {\n    // Note: Number('') is 0.\n    var digit1e6 = Number(dec.slice(begin, end));\n    highBits *= base;\n    lowBits = lowBits * base + digit1e6;\n    // Carry bits from lowBits to\n    if (lowBits >= TWO_PWR_32_DBL) {\n      highBits = highBits + (lowBits / TWO_PWR_32_DBL | 0);\n      lowBits = lowBits % TWO_PWR_32_DBL;\n    }\n  }\n  add1e6digit(-24, -18);\n  add1e6digit(-18, -12);\n  add1e6digit(-12, -6);\n  add1e6digit(-6);\n  return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n  var bits = newBits(lo, hi);\n  // If we're treating the input as a signed value and the high bit is set, do\n  // a manual two's complement conversion before the decimal conversion.\n  var negative = bits.hi & 0x80000000;\n  if (negative) {\n    bits = negate(bits.lo, bits.hi);\n  }\n  var result = uInt64ToString(bits.lo, bits.hi);\n  return negative ? \"-\" + result : result;\n}\n\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n  // Skip the expensive conversion if the number is small enough to use the\n  // built-in conversions.\n  // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n  // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n  // integer precision.\n  // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n  var _toUnsigned = toUnsigned(lo, hi);\n  lo = _toUnsigned.lo;\n  hi = _toUnsigned.hi;\n  if (hi <= 0x1fffff) {\n    return String(TWO_PWR_32_DBL * hi + lo);\n  }\n\n  // What this code is doing is essentially converting the input number from\n  // base-2 to base-1e7, which allows us to represent the 64-bit range with\n  // only 3 (very large) digits. Those digits are then trivial to convert to\n  // a base-10 string.\n\n  // The magic numbers used here are -\n  // 2^24 = 16777216 = (1,6777216) in base-1e7.\n  // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n\n  // Split 32:32 representation into 16:24:24 representation so our\n  // intermediate digits don't overflow.\n  var low = lo & 0xffffff;\n  var mid = (lo >>> 24 | hi << 8) & 0xffffff;\n  var high = hi >> 16 & 0xffff;\n\n  // Assemble our three base-1e7 digits, ignoring carries. The maximum\n  // value in a digit at this step is representable as a 48-bit integer, which\n  // can be stored in a 64-bit floating point number.\n  var digitA = low + mid * 6777216 + high * 6710656;\n  var digitB = mid + high * 8147497;\n  var digitC = high * 2;\n\n  // Apply carries from A to B and from B to C.\n  var base = 10000000;\n  if (digitA >= base) {\n    digitB += Math.floor(digitA / base);\n    digitA %= base;\n  }\n  if (digitB >= base) {\n    digitC += Math.floor(digitB / base);\n    digitB %= base;\n  }\n\n  // If digitC is 0, then we should have returned in the trivial code path\n  // at the top for non-safe integers. Given this, we can assume both digitB\n  // and digitA need leading zeros.\n  return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) + decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n  return {\n    lo: lo >>> 0,\n    hi: hi >>> 0\n  };\n}\nfunction newBits(lo, hi) {\n  return {\n    lo: lo | 0,\n    hi: hi | 0\n  };\n}\n\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n  highBits = ~highBits;\n  if (lowBits) {\n    lowBits = ~lowBits + 1;\n  } else {\n    // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n    // adding 1 to that, results in 0x100000000, which leaves\n    // the low bits 0x0 and simply adds one to the high bits.\n    highBits += 1;\n  }\n  return newBits(lowBits, highBits);\n}\n\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nvar decimalFrom1e7WithLeadingZeros = function decimalFrom1e7WithLeadingZeros(digit1e7) {\n  var partial = String(digit1e7);\n  return \"0000000\".slice(partial.length) + partial;\n};\n\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n  if (value >= 0) {\n    // write value as varint 32\n    while (value > 0x7f) {\n      bytes.push(value & 0x7f | 0x80);\n      value = value >>> 7;\n    }\n    bytes.push(value);\n  } else {\n    for (var i = 0; i < 9; i++) {\n      bytes.push(value & 127 | 128);\n      value = value >> 7;\n    }\n    bytes.push(1);\n  }\n}\n\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n  var b = this.buf[this.pos++];\n  var result = b & 0x7f;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 0x7f) << 7;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 0x7f) << 14;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 0x7f) << 21;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n\n  // Extract only last 4 bits\n  b = this.buf[this.pos++];\n  result |= (b & 0x0f) << 28;\n  for (var readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++) b = this.buf[this.pos++];\n  if ((b & 0x80) != 0) throw new Error(\"invalid varint\");\n  this.assertBounds();\n\n  // Result can have 32 bits, convert it to unsigned\n  return result >>> 0;\n}\n/**\n * encode zig zag\n */\nfunction zzEncode(lo, hi) {\n  var mask = hi >> 31;\n  hi = ((hi << 1 | lo >>> 31) ^ mask) >>> 0;\n  lo = (lo << 1 ^ mask) >>> 0;\n  return [lo, hi];\n}\n\n/**\n * decode zig zag\n */\nfunction zzDecode(lo, hi) {\n  var mask = -(lo & 1);\n  lo = ((lo >>> 1 | hi << 31) ^ mask) >>> 0;\n  hi = (hi >>> 1 ^ mask) >>> 0;\n  return [lo, hi];\n}\n\n/**\n * unsigned int32 without moving pos.\n */\nfunction readUInt32(buf, pos) {\n  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16) + buf[pos + 3] * 0x1000000;\n}\n\n/**\n * signed int32 without moving pos.\n */\nfunction readInt32(buf, pos) {\n  return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16) + (buf[pos + 3] << 24);\n}\n\n/**\n * writing varint32 to pos\n */\nfunction writeVarint32(val, buf, pos) {\n  while (val > 127) {\n    buf[pos++] = val & 127 | 128;\n    val >>>= 7;\n  }\n  buf[pos] = val;\n}\n\n/**\n * writing varint64 to pos\n */\nfunction writeVarint64(val, buf, pos) {\n  while (val.hi) {\n    buf[pos++] = val.lo & 127 | 128;\n    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n    val.hi >>>= 7;\n  }\n  while (val.lo > 127) {\n    buf[pos++] = val.lo & 127 | 128;\n    val.lo = val.lo >>> 7;\n  }\n  buf[pos++] = val.lo;\n}\nfunction int64Length(lo, hi) {\n  var part0 = lo,\n    part1 = (lo >>> 28 | hi << 4) >>> 0,\n    part2 = hi >>> 24;\n  return part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;\n}\nfunction writeFixed32(val, buf, pos) {\n  buf[pos] = val & 255;\n  buf[pos + 1] = val >>> 8 & 255;\n  buf[pos + 2] = val >>> 16 & 255;\n  buf[pos + 3] = val >>> 24;\n}\nfunction writeByte(val, buf, pos) {\n  buf[pos] = val & 255;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/interchain/varint.ts\n");

/***/ }),

/***/ "../cosmos/src/parsers/account.ts":
/*!****************************************!*\
  !*** ../cosmos/src/parsers/account.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountParser\": () => (/* binding */ AccountParser)\n/* harmony export */ });\n/* harmony import */ var _utils_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/parser */ \"../cosmos/src/utils/parser.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"../cosmos/src/parsers/base.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\nvar AccountParser = /*#__PURE__*/function (_BaseParser) {\n  _inherits(AccountParser, _BaseParser);\n  var _super = _createSuper(AccountParser);\n  function AccountParser(args) {\n    _classCallCheck(this, AccountParser);\n    return _super.call(this, args);\n  }\n  _createClass(AccountParser, [{\n    key: \"getBaseAccount\",\n    value: function getBaseAccount(account) {\n      var _baseVestingAccount;\n      switch (this.protoType) {\n        case \"/cosmos.auth.v1beta1.BaseAccount\":\n          return account;\n        case \"/cosmos.auth.v1beta1.ModuleAccount\":\n        case \"/cosmos.vesting.v1beta1.BaseVestingAccount\":\n          return account.baseAccount;\n        case \"/cosmos.vesting.v1beta1.ContinuousVestingAccount\":\n        case \"/cosmos.vesting.v1beta1.DelayedVestingAccount\":\n        case \"/cosmos.vesting.v1beta1.PeriodicVestingAccount\":\n          return (_baseVestingAccount = account.baseVestingAccount) === null || _baseVestingAccount === void 0 ? void 0 : _baseVestingAccount.baseAccount;\n        default:\n          throw new Error(\"Unsupported type: '\".concat(this.protoType, \"'\"));\n      }\n    }\n  }], [{\n    key: \"fromParser\",\n    value: function fromParser(parser) {\n      return new AccountParser(parser.args);\n    }\n  }, {\n    key: \"fromMeta\",\n    value: function fromMeta(data) {\n      return new AccountParser((0,_utils_parser__WEBPACK_IMPORTED_MODULE_0__.toParserArgs)(data));\n    }\n  }]);\n  return AccountParser;\n}(_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9wYXJzZXJzL2FjY291bnQudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVErQztBQUNYO0FBRTdCLElBQU1FLGFBQWEsMEJBQUFDLFdBQUE7RUFBQUMsU0FBQSxDQUFBRixhQUFBLEVBQUFDLFdBQUE7RUFBQSxJQUFBRSxNQUFBLEdBQUFDLFlBQUEsQ0FBQUosYUFBQTtFQUN4QixTQUFBQSxjQUFZSyxJQUFnQyxFQUFFO0lBQUFDLGVBQUEsT0FBQU4sYUFBQTtJQUFBLE9BQUFHLE1BQUEsQ0FBQUksSUFBQSxPQUN0Q0YsSUFBSTtFQUNaO0VBQUNHLFlBQUEsQ0FBQVIsYUFBQTtJQUFBUyxHQUFBO0lBQUFDLEtBQUEsRUFVRCxTQUFBQyxlQUFlQyxPQUFnQixFQUFFO01BQUEsSUFBQUMsbUJBQUE7TUFDL0IsUUFBUSxJQUFJLENBQUNDLFNBQVM7UUFDcEIsS0FBSyxrQ0FBa0M7VUFDckMsT0FBT0YsT0FBTztRQUNoQixLQUFLLG9DQUFvQztRQUN6QyxLQUFLLDRDQUE0QztVQUMvQyxPQUFRQSxPQUFPLENBQXdDRyxXQUFXO1FBQ3BFLEtBQUssa0RBQWtEO1FBQ3ZELEtBQUssK0NBQStDO1FBQ3BELEtBQUssZ0RBQWdEO1VBQ25ELFFBQUFGLG1CQUFBLEdBQ0VELE9BQU8sQ0FJUEksa0JBQWtCLGNBQUFILG1CQUFBLHVCQUxiQSxtQkFBQSxDQUtlRSxXQUFXO1FBQ25DO1VBQ0UsTUFBTSxJQUFJRSxLQUFLLHVCQUFBQyxNQUFBLENBQXVCLElBQUksQ0FBQ0osU0FBUyxNQUFHLENBQUM7TUFDNUQ7SUFDRjtFQUFDO0lBQUFMLEdBQUE7SUFBQUMsS0FBQSxFQTNCRCxTQUFBUyxXQUFrQ0MsTUFBa0MsRUFBRTtNQUNwRSxPQUFPLElBQUlwQixhQUFhLENBQUNvQixNQUFNLENBQUNmLElBQUksQ0FBQztJQUN2QztFQUFDO0lBQUFJLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFXLFNBQWdDQyxJQUEwQixFQUFFO01BQzFELE9BQU8sSUFBSXRCLGFBQWEsQ0FBQ0YsMkRBQVksQ0FBQ3dCLElBQUksQ0FBQyxDQUFDO0lBQzlDO0VBQUM7RUFBQSxPQUFBdEIsYUFBQTtBQUFBLEVBWGdERCw2Q0FBVSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzaWduL2V4YW1wbGUvLi4vY29zbW9zL3NyYy9wYXJzZXJzL2FjY291bnQudHM/NTA0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlQWNjb3VudCwgTW9kdWxlQWNjb3VudCB9IGZyb20gXCIuLi9pbnRlcmNoYWluL3Byb3RvL2F1dGhcIjtcbmltcG9ydCB7XG4gIEJhc2VWZXN0aW5nQWNjb3VudCxcbiAgQ29udGludW91c1Zlc3RpbmdBY2NvdW50LFxuICBEZWxheWVkVmVzdGluZ0FjY291bnQsXG4gIFBlcmlvZGljVmVzdGluZ0FjY291bnQsXG59IGZyb20gXCIuLi9pbnRlcmNoYWluL3Byb3RvL3Zlc3RpbmdcIjtcbmltcG9ydCB7IEFjY291bnQsIE1ldGEsIFBhcnNlckRhdGEgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7IHRvUGFyc2VyQXJncyB9IGZyb20gXCIuLi91dGlscy9wYXJzZXJcIjtcbmltcG9ydCB7IEJhc2VQYXJzZXIgfSBmcm9tIFwiLi9iYXNlXCI7XG5cbmV4cG9ydCBjbGFzcyBBY2NvdW50UGFyc2VyPFByb3RvVCwgQW1pbm9UPiBleHRlbmRzIEJhc2VQYXJzZXI8UHJvdG9ULCBBbWlub1Q+IHtcbiAgY29uc3RydWN0b3IoYXJnczogUGFyc2VyRGF0YTxQcm90b1QsIEFtaW5vVD4pIHtcbiAgICBzdXBlcihhcmdzKTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFyc2VyPFByb3RvVCwgQW1pbm9UPihwYXJzZXI6IEJhc2VQYXJzZXI8UHJvdG9ULCBBbWlub1Q+KSB7XG4gICAgcmV0dXJuIG5ldyBBY2NvdW50UGFyc2VyKHBhcnNlci5hcmdzKTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tTWV0YTxQcm90b1QsIEFtaW5vVD4oZGF0YTogTWV0YTxQcm90b1QsIEFtaW5vVD4pIHtcbiAgICByZXR1cm4gbmV3IEFjY291bnRQYXJzZXIodG9QYXJzZXJBcmdzKGRhdGEpKTtcbiAgfVxuXG4gIGdldEJhc2VBY2NvdW50KGFjY291bnQ6IEFjY291bnQpIHtcbiAgICBzd2l0Y2ggKHRoaXMucHJvdG9UeXBlKSB7XG4gICAgICBjYXNlIFwiL2Nvc21vcy5hdXRoLnYxYmV0YTEuQmFzZUFjY291bnRcIjpcbiAgICAgICAgcmV0dXJuIGFjY291bnQgYXMgQmFzZUFjY291bnQ7XG4gICAgICBjYXNlIFwiL2Nvc21vcy5hdXRoLnYxYmV0YTEuTW9kdWxlQWNjb3VudFwiOlxuICAgICAgY2FzZSBcIi9jb3Ntb3MudmVzdGluZy52MWJldGExLkJhc2VWZXN0aW5nQWNjb3VudFwiOlxuICAgICAgICByZXR1cm4gKGFjY291bnQgYXMgTW9kdWxlQWNjb3VudCB8IEJhc2VWZXN0aW5nQWNjb3VudCkuYmFzZUFjY291bnQ7XG4gICAgICBjYXNlIFwiL2Nvc21vcy52ZXN0aW5nLnYxYmV0YTEuQ29udGludW91c1Zlc3RpbmdBY2NvdW50XCI6XG4gICAgICBjYXNlIFwiL2Nvc21vcy52ZXN0aW5nLnYxYmV0YTEuRGVsYXllZFZlc3RpbmdBY2NvdW50XCI6XG4gICAgICBjYXNlIFwiL2Nvc21vcy52ZXN0aW5nLnYxYmV0YTEuUGVyaW9kaWNWZXN0aW5nQWNjb3VudFwiOlxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGFjY291bnQgYXNcbiAgICAgICAgICAgIHwgQ29udGludW91c1Zlc3RpbmdBY2NvdW50XG4gICAgICAgICAgICB8IERlbGF5ZWRWZXN0aW5nQWNjb3VudFxuICAgICAgICAgICAgfCBQZXJpb2RpY1Zlc3RpbmdBY2NvdW50XG4gICAgICAgICkuYmFzZVZlc3RpbmdBY2NvdW50Py5iYXNlQWNjb3VudDtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgdHlwZTogJyR7dGhpcy5wcm90b1R5cGV9J2ApO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbInRvUGFyc2VyQXJncyIsIkJhc2VQYXJzZXIiLCJBY2NvdW50UGFyc2VyIiwiX0Jhc2VQYXJzZXIiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJfY3JlYXRlU3VwZXIiLCJhcmdzIiwiX2NsYXNzQ2FsbENoZWNrIiwiY2FsbCIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiZ2V0QmFzZUFjY291bnQiLCJhY2NvdW50IiwiX2Jhc2VWZXN0aW5nQWNjb3VudCIsInByb3RvVHlwZSIsImJhc2VBY2NvdW50IiwiYmFzZVZlc3RpbmdBY2NvdW50IiwiRXJyb3IiLCJjb25jYXQiLCJmcm9tUGFyc2VyIiwicGFyc2VyIiwiZnJvbU1ldGEiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cosmos/src/parsers/account.ts\n");

/***/ }),

/***/ "../cosmos/src/parsers/base.ts":
/*!*************************************!*\
  !*** ../cosmos/src/parsers/base.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseParser\": () => (/* binding */ BaseParser)\n/* harmony export */ });\n/* harmony import */ var _utils_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/parser */ \"../cosmos/src/utils/parser.ts\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n\nvar ProtoParser = /*#__PURE__*/function () {\n  function ProtoParser(args) {\n    _classCallCheck(this, ProtoParser);\n    _defineProperty(this, \"type\", void 0);\n    _defineProperty(this, \"_proto\", void 0);\n    _defineProperty(this, \"_target\", void 0);\n    _defineProperty(this, \"aminoParser\", void 0);\n    this.type = args.protoType;\n    this._proto = args.proto;\n    if (args.aminoType) {\n      this.aminoParser = new AminoParser(args);\n    }\n  }\n  _createClass(ProtoParser, [{\n    key: \"isWrapped\",\n    get: function get() {\n      return _typeof(this._target) === \"object\" && Object.getOwnPropertyNames(this._target).includes(\"typeUrl\");\n    }\n  }, {\n    key: \"isEncoded\",\n    get: function get() {\n      return this.value instanceof Uint8Array;\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      return this._target;\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      var target = this._target;\n      this._target = void 0;\n      return target;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      if (!this.target) {\n        throw new Error(\"Target is undefined.\");\n      }\n      return this.isWrapped ? this._target.value : this._target;\n    }\n  }, {\n    key: \"assertType\",\n    value: function assertType(type) {\n      if (type !== this.type) {\n        throw new Error(\"Provided typeUrl: \".concat(type, \" doesn't match parser used with protoType (typeUrl): \").concat(this.type));\n      }\n    }\n  }, {\n    key: \"assertMsg\",\n    value: function assertMsg(msg) {\n      if (msg[\"typeUrl\"]) {\n        this.assertType(msg[\"typeUrl\"]);\n      }\n    }\n  }, {\n    key: \"from\",\n    value: function from(msg) {\n      var isWrapped = typeof msg[\"typeUrl\"] !== \"undefined\";\n      var value = isWrapped ? msg[\"value\"] : msg;\n      var isEncoded = ArrayBuffer.isView(value) && !(value instanceof DataView);\n      if (isEncoded) {\n        this._target = msg;\n      } else {\n        if (isWrapped) {\n          this.assertMsg(msg);\n          this._target = {\n            typeUrl: this.type,\n            value: this._proto.fromPartial(msg.value)\n          };\n        } else {\n          this._target = this._proto.fromPartial(msg);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap() {\n      this._target = {\n        typeUrl: this.type,\n        value: this.value\n      };\n      return this;\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      this._target = this.value;\n      return this;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode() {\n      if (!this.isEncoded) {\n        this._target = this.isWrapped ? _objectSpread(_objectSpread({}, this._target), {}, {\n          value: this._proto.encode(this._target[\"value\"]).finish()\n        }) : this._proto.encode(this._target).finish();\n      }\n      return this;\n    }\n  }, {\n    key: \"decode\",\n    value: function decode() {\n      if (this.isEncoded) {\n        this._target = this.isWrapped ? _objectSpread(_objectSpread({}, this._target), {}, {\n          value: this._proto.decode(this._target[\"value\"])\n        }) : this._proto.decode(this._target);\n        return this;\n      }\n      return this;\n    }\n  }, {\n    key: \"toAmino\",\n    value: function toAmino() {\n      if (!this.aminoParser) {\n        throw new Error(\"No such amino type for proto type (typeUrl) \".concat(this.type));\n      }\n      this.aminoParser.from(this.isWrapped ? {\n        type: this.aminoParser.type,\n        value: this.aminoParser.converter.toAmino(this._target[\"value\"])\n      } : this.aminoParser.converter.toAmino(this._target));\n      return this.aminoParser;\n    }\n  }]);\n  return ProtoParser;\n}();\nvar AminoParser = /*#__PURE__*/function () {\n  function AminoParser(args) {\n    _classCallCheck(this, AminoParser);\n    _defineProperty(this, \"type\", void 0);\n    _defineProperty(this, \"_target\", void 0);\n    _defineProperty(this, \"converter\", void 0);\n    this.type = args.aminoType;\n    this.converter = args.converter;\n  }\n  _createClass(AminoParser, [{\n    key: \"isWrapped\",\n    get: function get() {\n      return _typeof(this._target) === \"object\" && Object.getOwnPropertyNames(this._target).includes(\"type\");\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      return this._target;\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      var target = this._target;\n      this._target = void 0;\n      return target;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.isWrapped ? this._target.value : this._target;\n    }\n  }, {\n    key: \"assertType\",\n    value: function assertType(type) {\n      if (type !== this.type) {\n        throw new Error(\"Provided type: \".concat(type, \" doesn't match parser used with aminoType: \").concat(this.type));\n      }\n    }\n  }, {\n    key: \"assertMsg\",\n    value: function assertMsg(msg) {\n      if (msg[\"type\"]) {\n        this.assertType(msg[\"type\"]);\n      }\n    }\n  }, {\n    key: \"from\",\n    value: function from(msg) {\n      this.assertMsg(msg);\n      this._target = msg;\n      return this;\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap() {\n      this._target = {\n        type: this.type,\n        value: this.value\n      };\n      return this;\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      this._target = this.value;\n      return this;\n    }\n  }]);\n  return AminoParser;\n}();\nvar BaseParser = /*#__PURE__*/function () {\n  function BaseParser(args) {\n    _classCallCheck(this, BaseParser);\n    _defineProperty(this, \"protoType\", void 0);\n    // equivalent to typeUrl\n    _defineProperty(this, \"aminoType\", void 0);\n    // equivalent to aminoType\n    _defineProperty(this, \"protoParser\", void 0);\n    _defineProperty(this, \"aminoParser\", void 0);\n    _defineProperty(this, \"args\", void 0);\n    this.args = args;\n    this.protoType = args.protoType;\n    this.aminoType = args.aminoType;\n    this.protoParser = new ProtoParser(args);\n    if (args.aminoType && args.converter) {\n      this.aminoParser = new AminoParser(args);\n    }\n  }\n  _createClass(BaseParser, [{\n    key: \"converter\",\n    get: function get() {\n      if (!this.args.converter) {\n        throw new Error(\"No such amino type for proto type (typeUrl) \".concat(this.protoType));\n      }\n      return this.args.converter;\n    }\n  }, {\n    key: \"createProtoData\",\n    value: function createProtoData(data) {\n      return this.fromProto(data).pop();\n    }\n  }, {\n    key: \"_assertProtoValue\",\n    value: function _assertProtoValue(value) {\n      return true;\n    }\n  }, {\n    key: \"_assertAminoValue\",\n    value: function _assertAminoValue(value) {\n      return true;\n    }\n  }, {\n    key: \"fromProto\",\n    value: function fromProto(data) {\n      this.protoParser.from(data);\n      this._assertProtoValue(this.protoParser.value);\n      return this.protoParser;\n    }\n  }, {\n    key: \"fromAmino\",\n    value: function fromAmino(data) {\n      if (!this.aminoParser) {\n        throw new Error(\"No such aminoType and converter for typeUrl \\\"\".concat(this.protoType, \"\\\".\"));\n      }\n      this.aminoParser.from(data);\n      this._assertAminoValue(this.aminoParser.value);\n      return this.aminoParser;\n    }\n  }, {\n    key: \"isWrapped\",\n    value: function isWrapped(target) {\n      return typeof (target === null || target === void 0 ? void 0 : target[\"type\"]) !== \"undefined\" || typeof (target === null || target === void 0 ? void 0 : target[\"typeUrl\"]) !== \"undefined\";\n    }\n  }], [{\n    key: \"fromMeta\",\n    value: function fromMeta(data) {\n      return new BaseParser((0,_utils_parser__WEBPACK_IMPORTED_MODULE_0__.toParserArgs)(data));\n    }\n  }]);\n  return BaseParser;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/parsers/base.ts\n");

/***/ }),

/***/ "../cosmos/src/parsers/msg.ts":
/*!************************************!*\
  !*** ../cosmos/src/parsers/msg.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MsgParser\": () => (/* binding */ MsgParser)\n/* harmony export */ });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"../cosmos/src/parsers/base.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar MsgParser = /*#__PURE__*/function (_BaseParser) {\n  _inherits(MsgParser, _BaseParser);\n  var _super = _createSuper(MsgParser);\n  function MsgParser(args) {\n    _classCallCheck(this, MsgParser);\n    return _super.call(this, args);\n  }\n  _createClass(MsgParser, null, [{\n    key: \"fromParser\",\n    value: function fromParser(parser) {\n      return new MsgParser(parser.args);\n    }\n  }]);\n  return MsgParser;\n}(_base__WEBPACK_IMPORTED_MODULE_0__.BaseParser);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9wYXJzZXJzL21zZy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDb0M7QUFFN0IsSUFBTUMsU0FBUywwQkFBQUMsV0FBQTtFQUFBQyxTQUFBLENBQUFGLFNBQUEsRUFBQUMsV0FBQTtFQUFBLElBQUFFLE1BQUEsR0FBQUMsWUFBQSxDQUFBSixTQUFBO0VBQ3BCLFNBQUFBLFVBQVlLLElBQWdDLEVBQUU7SUFBQUMsZUFBQSxPQUFBTixTQUFBO0lBQUEsT0FBQUcsTUFBQSxDQUFBSSxJQUFBLE9BQ3RDRixJQUFJO0VBQ1o7RUFBQ0csWUFBQSxDQUFBUixTQUFBO0lBQUFTLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFDLFdBQWtDQyxNQUFrQyxFQUFFO01BQ3BFLE9BQU8sSUFBSVosU0FBUyxDQUFDWSxNQUFNLENBQUNQLElBQUksQ0FBQztJQUNuQztFQUFDO0VBQUEsT0FBQUwsU0FBQTtBQUFBLEVBUDRDRCw2Q0FBVSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzaWduL2V4YW1wbGUvLi4vY29zbW9zL3NyYy9wYXJzZXJzL21zZy50cz84NTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhcnNlckRhdGEgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7IEJhc2VQYXJzZXIgfSBmcm9tIFwiLi9iYXNlXCI7XG5cbmV4cG9ydCBjbGFzcyBNc2dQYXJzZXI8UHJvdG9ULCBBbWlub1Q+IGV4dGVuZHMgQmFzZVBhcnNlcjxQcm90b1QsIEFtaW5vVD4ge1xuICBjb25zdHJ1Y3RvcihhcmdzOiBQYXJzZXJEYXRhPFByb3RvVCwgQW1pbm9UPikge1xuICAgIHN1cGVyKGFyZ3MpO1xuICB9XG5cbiAgc3RhdGljIGZyb21QYXJzZXI8UHJvdG9ULCBBbWlub1Q+KHBhcnNlcjogQmFzZVBhcnNlcjxQcm90b1QsIEFtaW5vVD4pIHtcbiAgICByZXR1cm4gbmV3IE1zZ1BhcnNlcihwYXJzZXIuYXJncyk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJCYXNlUGFyc2VyIiwiTXNnUGFyc2VyIiwiX0Jhc2VQYXJzZXIiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJfY3JlYXRlU3VwZXIiLCJhcmdzIiwiX2NsYXNzQ2FsbENoZWNrIiwiY2FsbCIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiZnJvbVBhcnNlciIsInBhcnNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cosmos/src/parsers/msg.ts\n");

/***/ }),

/***/ "../cosmos/src/parsers/pubkey.ts":
/*!***************************************!*\
  !*** ../cosmos/src/parsers/pubkey.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PubKeyParser\": () => (/* binding */ PubKeyParser)\n/* harmony export */ });\n/* harmony import */ var _utils_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/parser */ \"../cosmos/src/utils/parser.ts\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"../cosmos/src/parsers/base.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\nvar PubKeyParser = /*#__PURE__*/function (_BaseParser) {\n  _inherits(PubKeyParser, _BaseParser);\n  var _super = _createSuper(PubKeyParser);\n  function PubKeyParser(args) {\n    _classCallCheck(this, PubKeyParser);\n    return _super.call(this, args);\n  }\n  _createClass(PubKeyParser, [{\n    key: \"_assertKeyType\",\n    value: function _assertKeyType(key) {\n      switch (this.protoType) {\n        case \"/cosmos.crypto.secp256k1.PubKey\":\n          if (key.length !== 33 || key[0] !== 0x02 && key[0] !== 0x03) {\n            throw new Error(\"Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03\");\n          }\n          return true;\n        default:\n          return true;\n      }\n    }\n  }, {\n    key: \"_assertProtoValue\",\n    value: function _assertProtoValue(data) {\n      return this._assertKeyType(data.key);\n    }\n  }, {\n    key: \"_assertAminoValue\",\n    value: function _assertAminoValue(data) {\n      return this._assertKeyType(data.key);\n    }\n  }], [{\n    key: \"fromParser\",\n    value: function fromParser(parser) {\n      return new PubKeyParser(parser.args);\n    }\n  }, {\n    key: \"fromMeta\",\n    value: function fromMeta(data) {\n      return new PubKeyParser((0,_utils_parser__WEBPACK_IMPORTED_MODULE_0__.toParserArgs)(data));\n    }\n  }]);\n  return PubKeyParser;\n}(_base__WEBPACK_IMPORTED_MODULE_1__.BaseParser);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy9wYXJzZXJzL3B1YmtleS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSStDO0FBQ1g7QUFFN0IsSUFBTUUsWUFBWSwwQkFBQUMsV0FBQTtFQUFBQyxTQUFBLENBQUFGLFlBQUEsRUFBQUMsV0FBQTtFQUFBLElBQUFFLE1BQUEsR0FBQUMsWUFBQSxDQUFBSixZQUFBO0VBQ3ZCLFNBQUFBLGFBQVlLLElBQWdDLEVBQUU7SUFBQUMsZUFBQSxPQUFBTixZQUFBO0lBQUEsT0FBQUcsTUFBQSxDQUFBSSxJQUFBLE9BQ3RDRixJQUFJO0VBQ1o7RUFBQ0csWUFBQSxDQUFBUixZQUFBO0lBQUFTLEdBQUE7SUFBQUMsS0FBQSxFQVVELFNBQUFDLGVBQXlCRixHQUFlLEVBQUU7TUFDeEMsUUFBUSxJQUFJLENBQUNHLFNBQVM7UUFDcEIsS0FBSyxpQ0FBaUM7VUFDcEMsSUFBSUgsR0FBRyxDQUFDSSxNQUFNLEtBQUssRUFBRSxJQUFLSixHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxJQUFJQSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSyxFQUFFO1lBQzdELE1BQU0sSUFBSUssS0FBSyxDQUNiLG1GQUNGLENBQUM7VUFDSDtVQUNBLE9BQU8sSUFBSTtRQUNiO1VBQ0UsT0FBTyxJQUFJO01BQ2Y7SUFDRjtFQUFDO0lBQUFMLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFLLGtCQUFrQkMsSUFBWSxFQUFXO01BQ3ZDLE9BQU8sSUFBSSxDQUFDTCxjQUFjLENBQ3ZCSyxJQUFJLENBQXVEUCxHQUM5RCxDQUFDO0lBQ0g7RUFBQztJQUFBQSxHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBTyxrQkFBa0JELElBQVksRUFBVztNQUN2QyxPQUFPLElBQUksQ0FBQ0wsY0FBYyxDQUN2QkssSUFBSSxDQUF1RFAsR0FDOUQsQ0FBQztJQUNIO0VBQUM7SUFBQUEsR0FBQTtJQUFBQyxLQUFBLEVBaENELFNBQUFRLFdBQWtDQyxNQUFrQyxFQUFFO01BQ3BFLE9BQU8sSUFBSW5CLFlBQVksQ0FBQ21CLE1BQU0sQ0FBQ2QsSUFBSSxDQUFDO0lBQ3RDO0VBQUM7SUFBQUksR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQVUsU0FBZ0NKLElBQTBCLEVBQUU7TUFDMUQsT0FBTyxJQUFJaEIsWUFBWSxDQUFDRiwyREFBWSxDQUFDa0IsSUFBSSxDQUFDLENBQUM7SUFDN0M7RUFBQztFQUFBLE9BQUFoQixZQUFBO0FBQUEsRUFYK0NELDZDQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL3BhcnNlcnMvcHVia2V5LnRzPzA0ZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHViS2V5IGFzIFB1YktleUVkMjU1MTkgfSBmcm9tIFwiLi4vaW50ZXJjaGFpbi9wcm90by9jcnlwdG8uZWQyNTUxOVwiO1xuaW1wb3J0IHsgUHViS2V5IGFzIFB1YktleVNlY3AyNTZrMSB9IGZyb20gXCIuLi9pbnRlcmNoYWluL3Byb3RvL2NyeXB0by5zZWNwMjU2azFcIjtcbmltcG9ydCB7IFB1YktleSBhcyBQdWJLZXlTZWNwMjU2cjEgfSBmcm9tIFwiLi4vaW50ZXJjaGFpbi9wcm90by9jcnlwdG8uc2VjcDI1NnIxXCI7XG5pbXBvcnQgeyBNZXRhLCBQYXJzZXJEYXRhIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5pbXBvcnQgeyB0b1BhcnNlckFyZ3MgfSBmcm9tIFwiLi4vdXRpbHMvcGFyc2VyXCI7XG5pbXBvcnQgeyBCYXNlUGFyc2VyIH0gZnJvbSBcIi4vYmFzZVwiO1xuXG5leHBvcnQgY2xhc3MgUHViS2V5UGFyc2VyPFByb3RvVCwgQW1pbm9UPiBleHRlbmRzIEJhc2VQYXJzZXI8UHJvdG9ULCBBbWlub1Q+IHtcbiAgY29uc3RydWN0b3IoYXJnczogUGFyc2VyRGF0YTxQcm90b1QsIEFtaW5vVD4pIHtcbiAgICBzdXBlcihhcmdzKTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFyc2VyPFByb3RvVCwgQW1pbm9UPihwYXJzZXI6IEJhc2VQYXJzZXI8UHJvdG9ULCBBbWlub1Q+KSB7XG4gICAgcmV0dXJuIG5ldyBQdWJLZXlQYXJzZXIocGFyc2VyLmFyZ3MpO1xuICB9XG5cbiAgc3RhdGljIGZyb21NZXRhPFByb3RvVCwgQW1pbm9UPihkYXRhOiBNZXRhPFByb3RvVCwgQW1pbm9UPikge1xuICAgIHJldHVybiBuZXcgUHViS2V5UGFyc2VyKHRvUGFyc2VyQXJncyhkYXRhKSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgX2Fzc2VydEtleVR5cGUoa2V5OiBVaW50OEFycmF5KSB7XG4gICAgc3dpdGNoICh0aGlzLnByb3RvVHlwZSkge1xuICAgICAgY2FzZSBcIi9jb3Ntb3MuY3J5cHRvLnNlY3AyNTZrMS5QdWJLZXlcIjpcbiAgICAgICAgaWYgKGtleS5sZW5ndGggIT09IDMzIHx8IChrZXlbMF0gIT09IDB4MDIgJiYga2V5WzBdICE9PSAweDAzKSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIFwiUHVibGljIGtleSBtdXN0IGJlIGNvbXByZXNzZWQgc2VjcDI1NmsxLCBpLmUuIDMzIGJ5dGVzIHN0YXJ0aW5nIHdpdGggMHgwMiBvciAweDAzXCJcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgX2Fzc2VydFByb3RvVmFsdWUoZGF0YTogUHJvdG9UKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Fzc2VydEtleVR5cGUoXG4gICAgICAoZGF0YSBhcyBQdWJLZXlFZDI1NTE5IHwgUHViS2V5U2VjcDI1NmsxIHwgUHViS2V5U2VjcDI1NnIxKS5rZXlcbiAgICApO1xuICB9XG5cbiAgX2Fzc2VydEFtaW5vVmFsdWUoZGF0YTogQW1pbm9UKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Fzc2VydEtleVR5cGUoXG4gICAgICAoZGF0YSBhcyBQdWJLZXlFZDI1NTE5IHwgUHViS2V5U2VjcDI1NmsxIHwgUHViS2V5U2VjcDI1NnIxKS5rZXlcbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOlsidG9QYXJzZXJBcmdzIiwiQmFzZVBhcnNlciIsIlB1YktleVBhcnNlciIsIl9CYXNlUGFyc2VyIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiX2NyZWF0ZVN1cGVyIiwiYXJncyIsIl9jbGFzc0NhbGxDaGVjayIsImNhbGwiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9hc3NlcnRLZXlUeXBlIiwicHJvdG9UeXBlIiwibGVuZ3RoIiwiRXJyb3IiLCJfYXNzZXJ0UHJvdG9WYWx1ZSIsImRhdGEiLCJfYXNzZXJ0QW1pbm9WYWx1ZSIsImZyb21QYXJzZXIiLCJwYXJzZXIiLCJmcm9tTWV0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cosmos/src/parsers/pubkey.ts\n");

/***/ }),

/***/ "../cosmos/src/query.parser.ts":
/*!*************************************!*\
  !*** ../cosmos/src/query.parser.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryParser\": () => (/* binding */ QueryParser),\n/* harmony export */   \"createJsonRpcRequest\": () => (/* binding */ createJsonRpcRequest)\n/* harmony export */ });\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\n/* harmony import */ var interchain_query_cosmos_auth_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! interchain-query/cosmos/auth/v1beta1/query.rpc.Query */ \"interchain-query/cosmos/auth/v1beta1/query.rpc.Query\");\n/* harmony import */ var interchain_query_cosmos_auth_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_auth_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _const_account__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./const/account */ \"../cosmos/src/const/account.ts\");\n/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./query */ \"../cosmos/src/query.ts\");\n/* harmony import */ var _utils_random_id__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/random-id */ \"../cosmos/src/utils/random-id.ts\");\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/request */ \"../cosmos/src/utils/request.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_core__WEBPACK_IMPORTED_MODULE_0__, _query__WEBPACK_IMPORTED_MODULE_3__, _utils_request__WEBPACK_IMPORTED_MODULE_5__]);\n([_sign_core__WEBPACK_IMPORTED_MODULE_0__, _query__WEBPACK_IMPORTED_MODULE_3__, _utils_request__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return { value: void 0, done: !0 }; } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable || \"\" === iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } throw new TypeError(_typeof(iterable) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\nvar QueryParser = /*#__PURE__*/function (_Server, _getAccount, _getBaseAccount, _getChainId, _estimateGas, _broadcast) {\n  _inherits(QueryParser, _Server);\n  var _super = _createSuper(QueryParser);\n  function QueryParser(endpoint) {\n    _classCallCheck(this, QueryParser);\n    return _super.call(this, endpoint);\n  }\n  _createClass(QueryParser, [{\n    key: \"auth\",\n    get: function get() {\n      return this.about(interchain_query_cosmos_auth_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_1__.QueryClientImpl);\n    }\n  }, {\n    key: \"status\",\n    value: function status() {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        fetch(\"\".concat(_this.endpoint, \"/status\")).then(function (data) {\n          return data.json().then(function (json) {\n            return resolve(json[\"result\"]);\n          })[\"catch\"](function (e) {\n            return reject(e);\n          });\n        })[\"catch\"](function (e) {\n          return reject(e);\n        });\n      });\n    }\n  }, {\n    key: \"checkTx\",\n    value: function checkTx(tx) {\n      return (0,_utils_request__WEBPACK_IMPORTED_MODULE_5__.requestTx)(this.endpoint, \"check_tx\", tx);\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount(_x) {\n      return (_getAccount = _getAccount || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(address) {\n        var accountResp, accountParser, account;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.auth.account({\n                address: address\n              });\n            case 2:\n              accountResp = _context.sent;\n              if (!(!accountResp || !accountResp.account)) {\n                _context.next = 5;\n                break;\n              }\n              throw new Error(\"Account is undefined.\");\n            case 5:\n              accountParser = Object.values(_const_account__WEBPACK_IMPORTED_MODULE_2__.AccountParserMap).find(function (parser) {\n                return parser.protoType === accountResp.account.typeUrl;\n              });\n              if (accountParser) {\n                _context.next = 8;\n                break;\n              }\n              throw new Error(\"No corresponding accountParser found for account type \".concat(accountResp.account.typeUrl, \".\"));\n            case 8:\n              account = accountParser.fromProto(accountResp.account).decode().unwrap().pop();\n              return _context.abrupt(\"return\", {\n                account: account,\n                parser: accountParser\n              });\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"getBaseAccount\",\n    value: function getBaseAccount(_x2) {\n      return (_getBaseAccount = _getBaseAccount || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(address) {\n        var _yield$this$getAccoun, account, parser, baseAccount;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getAccount(address);\n            case 2:\n              _yield$this$getAccoun = _context2.sent;\n              account = _yield$this$getAccoun.account;\n              parser = _yield$this$getAccoun.parser;\n              baseAccount = parser.getBaseAccount(account);\n              if (baseAccount) {\n                _context2.next = 8;\n                break;\n              }\n              throw new Error(\"BaseAccount is undefined.\");\n            case 8:\n              return _context2.abrupt(\"return\", {\n                account: baseAccount,\n                parser: _const_account__WEBPACK_IMPORTED_MODULE_2__.BaseAccountParser\n              });\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      return (_getChainId = _getChainId || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var status;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.status();\n            case 2:\n              status = _context3.sent;\n              return _context3.abrupt(\"return\", status[\"node_info\"][\"network\"]);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"estimateGas\",\n    value: function estimateGas(_x3) {\n      return (_estimateGas = _estimateGas || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(tx) {\n        var _yield$this$tx$simula, gasInfo;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.tx.simulate({\n                tx: void 0,\n                txBytes: tx\n              });\n            case 2:\n              _yield$this$tx$simula = _context4.sent;\n              gasInfo = _yield$this$tx$simula.gasInfo;\n              if (!(typeof gasInfo === \"undefined\")) {\n                _context4.next = 6;\n                break;\n              }\n              throw new Error(\"Fail to estimate gas by simulate tx.\");\n            case 6:\n              return _context4.abrupt(\"return\", gasInfo);\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"broadcast\",\n    value: function broadcast(_x4, _x5) {\n      return (_broadcast = _broadcast || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(tx, mode) {\n        var req, request, resp, json;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              req = {\n                params: {\n                  tx: tx\n                },\n                method: \"broadcast_tx_sync\"\n              };\n              request = createJsonRpcRequest(req.method, encodeBroadcastTxParams(req.params));\n              _context5.next = 4;\n              return fetch(this.endpoint, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(request)\n              });\n            case 4:\n              resp = _context5.sent;\n              _context5.next = 7;\n              return resp.json();\n            case 7:\n              json = _context5.sent;\n              return _context5.abrupt(\"return\", json);\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }))).apply(this, arguments);\n    }\n  }], [{\n    key: \"fromQuery\",\n    value: function fromQuery(query) {\n      return new QueryParser(query.endpoint);\n    }\n  }]);\n  return QueryParser;\n}(_query__WEBPACK_IMPORTED_MODULE_3__.Server);\n\n/** Creates a JSON-RPC request with random ID */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction createJsonRpcRequest(method, params) {\n  var paramsCopy = params ? _objectSpread({}, params) : {};\n  return {\n    jsonrpc: \"2.0\",\n    id: (0,_utils_random_id__WEBPACK_IMPORTED_MODULE_4__.randomId)(),\n    method: method,\n    params: paramsCopy\n  };\n}\nfunction encodeBroadcastTxParams(params) {\n  return {\n    tx: (0,_sign_core__WEBPACK_IMPORTED_MODULE_0__.toBase64)(params.tx)\n  };\n}\n\n// interface RpcBroadcastTxSyncResponse extends RpcTxData {\n//   /** hex encoded */\n//   readonly hash: string;\n// }\n\n// function decodeBroadcastTxSync(data: RpcBroadcastTxSyncResponse) {\n//   return {\n//     ...decodeTxData(data),\n//     hash: fromHex(data.hash),\n//   };\n// }\n\n// interface RpcTxData {\n//   readonly codespace?: string;\n//   readonly code?: number;\n//   readonly log?: string;\n//   /** base64 encoded */\n//   readonly data?: string;\n//   readonly events?: readonly RpcEvent[];\n//   readonly gas_wanted?: string;\n//   readonly gas_used?: string;\n// }\n\n// function decodeTxData(data: RpcTxData) {\n//   return {\n//     code: apiToSmallInt(assertNumber(data.code ?? 0)),\n//     codespace: data.codespace,\n//     log: data.log,\n//     data: may(fromBase64, data.data),\n//     events: data.events ? decodeEvents(data.events) : [],\n//     gasWanted: apiToSmallInt(data.gas_wanted ?? \"0\"),\n//     gasUsed: apiToSmallInt(data.gas_used ?? \"0\"),\n//   };\n// }\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/query.parser.ts\n");

/***/ }),

/***/ "../cosmos/src/query.ts":
/*!******************************!*\
  !*** ../cosmos/src/query.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Server\": () => (/* binding */ Server)\n/* harmony export */ });\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\n/* harmony import */ var _utils_random_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/random-id */ \"../cosmos/src/utils/random-id.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_core__WEBPACK_IMPORTED_MODULE_0__]);\n_sign_core__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return { value: void 0, done: !0 }; } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable || \"\" === iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } throw new TypeError(_typeof(iterable) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nfunction createAbciQuery(endpoint) {\n  var _request;\n  return {\n    request: function request(_x, _x2, _x3) {\n      return (_request = _request || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(service, method, data) {\n        var resp, json, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(endpoint, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  id: (0,_utils_random_id__WEBPACK_IMPORTED_MODULE_1__.randomId)(),\n                  jsonrpc: \"2.0\",\n                  method: \"abci_query\",\n                  params: {\n                    data: (0,_sign_core__WEBPACK_IMPORTED_MODULE_0__.toHex)(data),\n                    path: \"/\".concat(service, \"/\").concat(method),\n                    prove: false\n                  }\n                })\n              });\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return resp.json();\n            case 5:\n              json = _context.sent;\n              _context.prev = 6;\n              result = (0,_sign_core__WEBPACK_IMPORTED_MODULE_0__.fromBase64)(json[\"result\"][\"response\"][\"value\"]);\n              return _context.abrupt(\"return\", result);\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](6);\n              throw new Error(\"Request Error: \".concat(json[\"result\"][\"response\"][\"log\"]));\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[6, 11]]);\n      }))).apply(this, arguments);\n    }\n  };\n}\nfunction createTxService(endpoint) {\n  var _request2;\n  return {\n    request: function request(_x4, _x5, _x6) {\n      return (_request2 = _request2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(service, method, data) {\n        var resp, json;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(endpoint, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  id: (0,_utils_random_id__WEBPACK_IMPORTED_MODULE_1__.randomId)(),\n                  jsonrpc: \"2.0\",\n                  method: method,\n                  params: {\n                    tx: data\n                  }\n                })\n              });\n            case 2:\n              resp = _context2.sent;\n              _context2.next = 5;\n              return resp.json();\n            case 5:\n              json = _context2.sent;\n              console.log(\"%cquery.ts line:62 json\", \"color: #007acc;\", json);\n              return _context2.abrupt(\"return\", json);\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))).apply(this, arguments);\n    }\n  };\n}\nvar Server = /*#__PURE__*/function () {\n  function Server(endpoint) {\n    _classCallCheck(this, Server);\n    _defineProperty(this, \"endpoint\", void 0);\n    _defineProperty(this, \"abciQuery\", void 0);\n    _defineProperty(this, \"txService\", void 0);\n    this.endpoint = endpoint;\n    this.abciQuery = createAbciQuery(endpoint);\n    this.txService = createTxService(endpoint);\n  }\n  _createClass(Server, [{\n    key: \"about\",\n    value: function about(Cls) {\n      return new Cls(this.abciQuery);\n    }\n  }]);\n  return Server;\n}();\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/query.ts\n");

/***/ }),

/***/ "../cosmos/src/signer.ts":
/*!*******************************!*\
  !*** ../cosmos/src/signer.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Signer\": () => (/* binding */ Signer)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"@noble/hashes/sha256\");\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\n/* harmony import */ var _config_prefix_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config/prefix.json */ \"../cosmos/src/config/prefix.json\");\n/* harmony import */ var _const_pubkey__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./const/pubkey */ \"../cosmos/src/const/pubkey.ts\");\n/* harmony import */ var _const_tx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./const/tx */ \"../cosmos/src/const/tx.ts\");\n/* harmony import */ var _interchain_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interchain/types */ \"../cosmos/src/interchain/types.ts\");\n/* harmony import */ var _parsers_msg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parsers/msg */ \"../cosmos/src/parsers/msg.ts\");\n/* harmony import */ var _query_parser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./query.parser */ \"../cosmos/src/query.parser.ts\");\n/* harmony import */ var _utils_bech__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/bech */ \"../cosmos/src/utils/bech.ts\");\n/* harmony import */ var _utils_fee__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/fee */ \"../cosmos/src/utils/fee.ts\");\n/* harmony import */ var _utils_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/json */ \"../cosmos/src/utils/json.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__, _sign_core__WEBPACK_IMPORTED_MODULE_1__, _query_parser__WEBPACK_IMPORTED_MODULE_7__, _utils_fee__WEBPACK_IMPORTED_MODULE_9__, _utils_json__WEBPACK_IMPORTED_MODULE_10__]);\n([_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__, _sign_core__WEBPACK_IMPORTED_MODULE_1__, _query_parser__WEBPACK_IMPORTED_MODULE_7__, _utils_fee__WEBPACK_IMPORTED_MODULE_9__, _utils_json__WEBPACK_IMPORTED_MODULE_10__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return { value: void 0, done: !0 }; } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable || \"\" === iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } throw new TypeError(_typeof(iterable) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\n\nvar Signer = /*#__PURE__*/function (_BaseSigner, _fetchSignerData2, _toOfflineTx2, _estimateFee, _broadcast3, _broadcastArbitrary) {\n  _inherits(Signer, _BaseSigner);\n  var _super = _createSuper(Signer);\n  function Signer() {\n    var _this;\n    _classCallCheck(this, Signer);\n    _this = _super.call(this, _query_parser__WEBPACK_IMPORTED_MODULE_7__.QueryParser);\n    _defineProperty(_assertThisInitialized(_this), \"_pool\", {});\n    for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {\n      data[_key] = arguments[_key];\n    }\n    var parsers = data.map(function (d) {\n      return _parsers_msg__WEBPACK_IMPORTED_MODULE_6__.MsgParser.fromMeta(d);\n    });\n    _this.addParsers(parsers);\n    return _this;\n  }\n  _createClass(Signer, [{\n    key: \"addParsers\",\n    value: function addParsers(parsers) {\n      this._pool = _objectSpread(_objectSpread({}, this._pool), Object.fromEntries(parsers.map(function (parser) {\n        return [parser.protoType, parser];\n      })));\n    }\n  }, {\n    key: \"supportedMsgTypes\",\n    get: function get() {\n      return Array.from(Object.keys(this._pool));\n    }\n  }, {\n    key: \"parsers\",\n    get: function get() {\n      return Array.from(Object.values(this._pool));\n    }\n  }, {\n    key: \"_getParserFromProto\",\n    value: function _getParserFromProto(protoType) {\n      var parser = this._pool[protoType];\n      if (!parser) {\n        throw new Error(\"Please add the parser with typeUrl: \".concat(protoType, \" in the pool (using `addParsers` method).\"));\n      }\n      return parser;\n    }\n  }, {\n    key: \"_getParserFromAmino\",\n    value: function _getParserFromAmino(aminoType) {\n      var parser = this._pool[aminoType];\n      if (!parser) {\n        throw new Error(\"Please add the parser with type: \".concat(aminoType, \" in the pool (using `addParsers` method).\"));\n      }\n      return parser;\n    }\n  }, {\n    key: \"_hash\",\n    value: function _hash(msg) {\n      return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(msg);\n    }\n  }, {\n    key: \"_toSignature\",\n    value: function _toSignature(sigObj) {\n      return new Uint8Array([].concat(_toConsumableArray(sigObj.r), _toConsumableArray(sigObj.s)));\n    }\n  }, {\n    key: \"_toSigObj\",\n    value: function _toSigObj(signature) {\n      return {\n        r: signature.slice(0, 32),\n        s: signature.slice(32, 64),\n        recoveryId: null\n      };\n    }\n  }, {\n    key: \"_fetchSignerData\",\n    value: function _fetchSignerData(_x) {\n      return (_fetchSignerData2 = _fetchSignerData2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n        var _data$chainId, chainId, prefix, _yield$this$query$get, _yield$this$query$get2, sequence, accountNumber, _sequence, _accountNumber;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _data$chainId = data.chainId;\n              if (!(_data$chainId === void 0)) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 4;\n              return this.query.getChainId();\n            case 4:\n              _context.t0 = _context.sent;\n              _context.next = 8;\n              break;\n            case 7:\n              _context.t0 = _data$chainId;\n            case 8:\n              chainId = _context.t0;\n              if (!(typeof data.sequence === \"undefined\" || typeof data.accountNumber === \"undefined\")) {\n                _context.next = 22;\n                break;\n              }\n              prefix = _config_prefix_json__WEBPACK_IMPORTED_MODULE_2__[chainId];\n              if (prefix) {\n                _context.next = 13;\n                break;\n              }\n              throw new Error(\"Cannot find bech32_prefix for chain \".concat(chainId, \".\"));\n            case 13:\n              _context.next = 15;\n              return this.query.getBaseAccount((0,_utils_bech__WEBPACK_IMPORTED_MODULE_8__.toBech32)(prefix, this.auth.key.address));\n            case 15:\n              _yield$this$query$get = _context.sent;\n              _yield$this$query$get2 = _yield$this$query$get.account;\n              sequence = _yield$this$query$get2.sequence;\n              accountNumber = _yield$this$query$get2.accountNumber;\n              return _context.abrupt(\"return\", {\n                chainId: chainId,\n                sequence: sequence,\n                accountNumber: accountNumber\n              });\n            case 22:\n              _sequence = data.sequence, _accountNumber = data.accountNumber;\n              return _context.abrupt(\"return\", {\n                chainId: chainId,\n                sequence: _sequence,\n                accountNumber: _accountNumber\n              });\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"_createAuthInfo\",\n    value: function _createAuthInfo(_ref) {\n      var pubkey = _ref.pubkey,\n        sequence = _ref.sequence,\n        fee = _ref.fee;\n      var signers = [{\n        publicKey: _const_pubkey__WEBPACK_IMPORTED_MODULE_3__.PubKeySecp256k1Parser.fromProto({\n          key: pubkey\n        }).wrap().encode().pop(),\n        modeInfo: {\n          single: {\n            mode: _interchain_types__WEBPACK_IMPORTED_MODULE_5__.SignMode.SIGN_MODE_LEGACY_AMINO_JSON\n          }\n        },\n        sequence: sequence\n      }];\n      return _const_tx__WEBPACK_IMPORTED_MODULE_4__.AuthInfoParser.createProtoData({\n        signerInfos: signers,\n        fee: fee\n      });\n    }\n  }, {\n    key: \"_createTxRaw\",\n    value: function _createTxRaw(_ref2) {\n      var txBody = _ref2.txBody,\n        authInfo = _ref2.authInfo,\n        signatures = _ref2.signatures;\n      var txBodyBytes = _const_tx__WEBPACK_IMPORTED_MODULE_4__.TxBodyParser.fromProto(txBody).encode().pop();\n      var authInfoBytes = _const_tx__WEBPACK_IMPORTED_MODULE_4__.AuthInfoParser.fromProto(authInfo).encode().pop();\n      return _const_tx__WEBPACK_IMPORTED_MODULE_4__.TxRawParser.fromProto({\n        bodyBytes: txBodyBytes,\n        authInfoBytes: authInfoBytes,\n        signatures: signatures\n      }).pop();\n    }\n  }, {\n    key: \"_toTx\",\n    value: function _toTx(tx) {\n      var _this2 = this;\n      return {\n        msgs: tx.msgs.map(function (msg) {\n          var parser = _this2._getParserFromAmino(msg.type);\n          return {\n            typeUrl: parser.protoType,\n            value: parser.converter.toProto(msg.value)\n          };\n        }),\n        fee: typeof tx.fee !== \"undefined\" ? {\n          amount: tx.fee.amount,\n          gasLimit: BigInt(tx.fee.gas),\n          payer: tx.fee.payer || \"\",\n          granter: tx.fee.granter || \"\"\n        } : void 0,\n        memo: tx.memo,\n        accountNumber: typeof tx.account_number !== \"undefined\" ? BigInt(tx.account_number) : void 0,\n        sequence: typeof tx.sequence !== \"undefined\" ? BigInt(tx.sequence) : void 0,\n        chainId: tx.chain_id\n      };\n    }\n  }, {\n    key: \"_toOfflineAminoTx\",\n    value: function _toOfflineAminoTx(_ref3) {\n      var _this3 = this;\n      var msgs = _ref3.msgs,\n        fee = _ref3.fee,\n        memo = _ref3.memo,\n        accountNumber = _ref3.accountNumber,\n        sequence = _ref3.sequence,\n        chainId = _ref3.chainId;\n      return {\n        msgs: msgs.map(function (msg) {\n          var parser = _this3._getParserFromProto(msg.typeUrl);\n          return parser.fromProto(msg).toAmino().pop();\n        }),\n        fee: (0,_utils_fee__WEBPACK_IMPORTED_MODULE_9__.toAminoFee)(fee),\n        memo: memo,\n        account_number: accountNumber.toString(),\n        sequence: sequence.toString(),\n        chain_id: chainId\n      };\n    }\n  }, {\n    key: \"_toOfflineTx\",\n    value: function _toOfflineTx(_x2) {\n      return (_toOfflineTx2 = _toOfflineTx2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n        var msgs, fee, memo, chainId, sequence, accountNumber, signerData, offlineTx;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              msgs = data.msgs, fee = data.fee, memo = data.memo, chainId = data.chainId, sequence = data.sequence, accountNumber = data.accountNumber;\n              _context2.next = 3;\n              return this._fetchSignerData({\n                chainId: chainId,\n                sequence: sequence,\n                accountNumber: accountNumber\n              });\n            case 3:\n              signerData = _context2.sent;\n              _context2.t0 = msgs;\n              _context2.t1 = fee;\n              if (_context2.t1) {\n                _context2.next = 10;\n                break;\n              }\n              _context2.next = 9;\n              return this.estimateFee(_objectSpread(_objectSpread({}, data), signerData));\n            case 9:\n              _context2.t1 = _context2.sent;\n            case 10:\n              _context2.t2 = _context2.t1;\n              _context2.t3 = memo || \"\";\n              _context2.t4 = signerData.chainId;\n              _context2.t5 = signerData.sequence;\n              _context2.t6 = signerData.accountNumber;\n              offlineTx = {\n                msgs: _context2.t0,\n                fee: _context2.t2,\n                memo: _context2.t3,\n                chainId: _context2.t4,\n                sequence: _context2.t5,\n                accountNumber: _context2.t6\n              };\n              return _context2.abrupt(\"return\", offlineTx);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }))).apply(this, arguments);\n    }\n    /**\n     *\n     * @param txData txData that don't need to request more info from web server\n     * @returns TxRaw\n     */\n  }, {\n    key: \"_signOffline\",\n    value: function _signOffline(txData) {\n      var _this4 = this;\n      var msgs = txData.msgs,\n        fee = txData.fee,\n        memo = txData.memo,\n        sequence = txData.sequence;\n      var txBody = _const_tx__WEBPACK_IMPORTED_MODULE_4__.TxBodyParser.createProtoData({\n        messages: msgs.map(function (msg) {\n          return _this4._getParserFromProto(msg.typeUrl).fromProto(msg).encode().pop();\n        }),\n        memo: memo\n      });\n      var authInfo = this._createAuthInfo({\n        pubkey: this.auth.key.pubkey,\n        sequence: sequence,\n        fee: fee\n      });\n      var signature = this._signArbitrary((0,_utils_json__WEBPACK_IMPORTED_MODULE_10__.toBytes)(this._toOfflineAminoTx(txData)));\n      return this._createTxRaw({\n        txBody: txBody,\n        authInfo: authInfo,\n        signatures: [signature]\n      });\n    }\n  }, {\n    key: \"estimateFee\",\n    value: function estimateFee(_x3, _x4) {\n      return (_estimateFee = _estimateFee || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data, gasPrice) {\n        var _this5 = this;\n        var multiplier,\n          msgs,\n          memo,\n          chainId,\n          sequence,\n          accountNumber,\n          signerData,\n          txBytes,\n          gasInfo,\n          fee,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              multiplier = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 1.3;\n              msgs = data.msgs, memo = data.memo, chainId = data.chainId, sequence = data.sequence, accountNumber = data.accountNumber;\n              _context3.next = 4;\n              return this._fetchSignerData({\n                chainId: chainId,\n                sequence: sequence,\n                accountNumber: accountNumber\n              });\n            case 4:\n              signerData = _context3.sent;\n              txBytes = _const_tx__WEBPACK_IMPORTED_MODULE_4__.TxParser.fromProto({\n                body: _const_tx__WEBPACK_IMPORTED_MODULE_4__.TxBodyParser.createProtoData({\n                  messages: msgs.map(function (msg) {\n                    return _this5._getParserFromProto(msg.typeUrl).fromProto(msg).wrap().encode().pop();\n                  }),\n                  memo: memo\n                }),\n                authInfo: _const_tx__WEBPACK_IMPORTED_MODULE_4__.AuthInfoParser.createProtoData({\n                  fee: _const_tx__WEBPACK_IMPORTED_MODULE_4__.FeeParser.createProtoData({}),\n                  signerInfos: [{\n                    publicKey: _const_pubkey__WEBPACK_IMPORTED_MODULE_3__.PubKeySecp256k1Parser.fromProto({\n                      key: this.auth.key.pubkey\n                    }).wrap().encode().pop(),\n                    sequence: BigInt(signerData.sequence),\n                    modeInfo: {\n                      single: {\n                        mode: _interchain_types__WEBPACK_IMPORTED_MODULE_5__.SignMode.SIGN_MODE_UNSPECIFIED\n                      }\n                    }\n                  }]\n                }),\n                signatures: [new Uint8Array()]\n              }).encode().pop();\n              _context3.next = 8;\n              return this.query.estimateGas(txBytes);\n            case 8:\n              gasInfo = _context3.sent;\n              fee = (0,_utils_fee__WEBPACK_IMPORTED_MODULE_9__.calculateFee)(_sign_core__WEBPACK_IMPORTED_MODULE_1__.Decimal.fromBigInt(gasInfo.gasUsed).multiply(multiplier).round(), gasPrice || this.getGasPrice(signerData.chainId));\n              return _context3.abrupt(\"return\", fee);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"getGasPrice\",\n    value: function getGasPrice(chainId) {\n      return (0,_utils_fee__WEBPACK_IMPORTED_MODULE_9__.getLowGasPrice)(chainId);\n      // return getAvgGasPrice(chainId);\n      // return getHighGasPrice(chainId);\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(tx) {\n      var _this6 = this,\n        _ref4,\n        _broadcast;\n      var getSigned = function getSigned() {\n        return (_ref4 = _ref4 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var offlineTx;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this6._toOfflineTx(tx);\n              case 2:\n                offlineTx = _context4.sent;\n                return _context4.abrupt(\"return\", _this6._signOffline(offlineTx));\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4);\n        }))).apply(this, arguments);\n      };\n      return {\n        signed: getSigned(),\n        broadcast: function broadcast() {\n          return (_broadcast = _broadcast || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n            var checkTx,\n              commitTx,\n              signed,\n              _args5 = arguments;\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  checkTx = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : true;\n                  commitTx = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : false;\n                  _context5.next = 4;\n                  return getSigned();\n                case 4:\n                  signed = _context5.sent;\n                  return _context5.abrupt(\"return\", _this6.broadcast(signed, checkTx, commitTx));\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _callee5);\n          }))).apply(this, arguments);\n        }\n      };\n    }\n  }, {\n    key: \"signAmino\",\n    value: function signAmino(tx) {\n      var txData = this._toTx(tx);\n      return this.sign(txData);\n    }\n  }, {\n    key: \"signDirect\",\n    value: function signDirect(tx) {\n      var _this7 = this,\n        _ref5,\n        _broadcast2;\n      var getSigned = function getSigned() {\n        return (_ref5 = _ref5 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var bodyBytes, authInfoBytes, chainId, accountNumber, offlineTx, signerData, signature;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                bodyBytes = tx.bodyBytes, authInfoBytes = tx.authInfoBytes, chainId = tx.chainId, accountNumber = tx.accountNumber;\n                if (!(chainId == void 0 || accountNumber == void 0)) {\n                  _context6.next = 8;\n                  break;\n                }\n                _context6.next = 4;\n                return _this7._fetchSignerData({\n                  chainId: chainId,\n                  accountNumber: accountNumber\n                });\n              case 4:\n                signerData = _context6.sent;\n                offlineTx = _objectSpread(_objectSpread({}, tx), {}, {\n                  chainId: signerData.chainId,\n                  accountNumber: signerData.accountNumber\n                });\n                _context6.next = 9;\n                break;\n              case 8:\n                offlineTx = tx;\n              case 9:\n                signature = _this7._signArbitrary(_const_tx__WEBPACK_IMPORTED_MODULE_4__.SignDocParser.fromProto(offlineTx).encode().pop());\n                return _context6.abrupt(\"return\", _const_tx__WEBPACK_IMPORTED_MODULE_4__.TxRawParser.fromProto({\n                  bodyBytes: bodyBytes,\n                  authInfoBytes: authInfoBytes,\n                  signatures: [signature]\n                }).pop());\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        }))).apply(this, arguments);\n      };\n      return {\n        signed: getSigned(),\n        broadcast: function broadcast() {\n          return (_broadcast2 = _broadcast2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n            var checkTx,\n              commitTx,\n              signed,\n              _args7 = arguments;\n            return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  checkTx = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : true;\n                  commitTx = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : false;\n                  _context7.next = 4;\n                  return getSigned();\n                case 4:\n                  signed = _context7.sent;\n                  return _context7.abrupt(\"return\", _this7.broadcast(signed, checkTx, commitTx));\n                case 6:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7);\n          }))).apply(this, arguments);\n        }\n      };\n    }\n  }, {\n    key: \"signArbitrary\",\n    value: function signArbitrary(raw) {\n      var _this8 = this;\n      var signed = this._signArbitrary(raw);\n      return {\n        signed: signed,\n        broadcast: function broadcast() {\n          var checkTx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n          var commitTx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return _this8.broadcastArbitrary(signed, checkTx, commitTx);\n        }\n      };\n    }\n  }, {\n    key: \"broadcast\",\n    value: function broadcast(_x5) {\n      return (_broadcast3 = _broadcast3 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(txRaw) {\n        var checkTx,\n          commitTx,\n          txBytes,\n          _args8 = arguments;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              checkTx = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : true;\n              commitTx = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : false;\n              txBytes = _const_tx__WEBPACK_IMPORTED_MODULE_4__.TxRawParser.fromProto(txRaw).encode().pop();\n              return _context8.abrupt(\"return\", this.broadcastArbitrary(txBytes, checkTx, commitTx));\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"broadcastArbitrary\",\n    value: function broadcastArbitrary(_x6) {\n      return (_broadcastArbitrary = _broadcastArbitrary || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(raw) {\n        var checkTx,\n          commitTx,\n          mode,\n          _yield$this$query$bro,\n          txResponse,\n          _args9 = arguments;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              checkTx = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : true;\n              commitTx = _args9.length > 2 && _args9[2] !== undefined ? _args9[2] : false;\n              mode = checkTx && commitTx ? _interchain_types__WEBPACK_IMPORTED_MODULE_5__.BroadcastMode.BROADCAST_MODE_BLOCK : checkTx ? _interchain_types__WEBPACK_IMPORTED_MODULE_5__.BroadcastMode.BROADCAST_MODE_SYNC : _interchain_types__WEBPACK_IMPORTED_MODULE_5__.BroadcastMode.BROADCAST_MODE_ASYNC;\n              _context9.next = 5;\n              return this.query.broadcast(raw, mode);\n            case 5:\n              _yield$this$query$bro = _context9.sent;\n              txResponse = _yield$this$query$bro.txResponse;\n              return _context9.abrupt(\"return\", txResponse);\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }))).apply(this, arguments);\n    }\n  }], [{\n    key: \"fromParsers\",\n    value: function fromParsers() {\n      var signer = new Signer();\n      for (var _len2 = arguments.length, parsers = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        parsers[_key2] = arguments[_key2];\n      }\n      signer.addParsers(parsers);\n      return signer;\n    }\n  }]);\n  return Signer;\n}(_sign_core__WEBPACK_IMPORTED_MODULE_1__.BaseSigner);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/signer.ts\n");

/***/ }),

/***/ "../cosmos/src/types.ts":
/*!******************************!*\
  !*** ../cosmos/src/types.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "../cosmos/src/utils/bech.ts":
/*!***********************************!*\
  !*** ../cosmos/src/utils/bech.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toBech32\": () => (/* binding */ toBech32)\n/* harmony export */ });\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bech32 */ \"../cosmos/node_modules/bech32/dist/index.js\");\n\nfunction toBech32(prefix, data, limit) {\n  var address = bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.encode(prefix, bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.toWords(data), limit);\n  return address;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy91dGlscy9iZWNoLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDO0FBRXpCLFNBQVNDLFFBQVFBLENBQ3RCQyxNQUFjLEVBQ2RDLElBQWdCLEVBQ2hCQyxLQUFjLEVBQ047RUFDUixJQUFNQyxPQUFPLEdBQUdMLGlEQUFhLENBQUNFLE1BQU0sRUFBRUYsa0RBQWMsQ0FBQ0csSUFBSSxDQUFDLEVBQUVDLEtBQUssQ0FBQztFQUNsRSxPQUFPQyxPQUFPO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL3V0aWxzL2JlY2gudHM/YzA0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiZWNoMzIgfSBmcm9tIFwiYmVjaDMyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0JlY2gzMihcbiAgcHJlZml4OiBzdHJpbmcsXG4gIGRhdGE6IFVpbnQ4QXJyYXksXG4gIGxpbWl0PzogbnVtYmVyXG4pOiBzdHJpbmcge1xuICBjb25zdCBhZGRyZXNzID0gYmVjaDMyLmVuY29kZShwcmVmaXgsIGJlY2gzMi50b1dvcmRzKGRhdGEpLCBsaW1pdCk7XG4gIHJldHVybiBhZGRyZXNzO1xufVxuIl0sIm5hbWVzIjpbImJlY2gzMiIsInRvQmVjaDMyIiwicHJlZml4IiwiZGF0YSIsImxpbWl0IiwiYWRkcmVzcyIsImVuY29kZSIsInRvV29yZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cosmos/src/utils/bech.ts\n");

/***/ }),

/***/ "../cosmos/src/utils/fee.ts":
/*!**********************************!*\
  !*** ../cosmos/src/utils/fee.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GasPrice\": () => (/* binding */ GasPrice),\n/* harmony export */   \"calculateFee\": () => (/* binding */ calculateFee),\n/* harmony export */   \"getAvgGasPrice\": () => (/* binding */ getAvgGasPrice),\n/* harmony export */   \"getHighGasPrice\": () => (/* binding */ getHighGasPrice),\n/* harmony export */   \"getLowGasPrice\": () => (/* binding */ getLowGasPrice),\n/* harmony export */   \"toAminoFee\": () => (/* binding */ toAminoFee)\n/* harmony export */ });\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\n/* harmony import */ var _config_fee_tokens_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/fee-tokens.json */ \"../cosmos/src/config/fee-tokens.json\");\n/* harmony import */ var _const_tx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../const/tx */ \"../cosmos/src/const/tx.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_core__WEBPACK_IMPORTED_MODULE_0__]);\n_sign_core__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _excluded = [\"gasLimit\", \"payer\", \"granter\"];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n/**\n * Denom checker for the Cosmos SDK 0.42 denom pattern\n * (https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/types/coin.go#L599-L601).\n *\n * This is like a regexp but with helpful error messages.\n */\nfunction checkDenom(denom) {\n  if (denom.length < 3 || denom.length > 128) {\n    throw new Error(\"Denom must be between 3 and 128 characters\");\n  }\n}\n\n/**\n * A gas price, i.e. the price of a single unit of gas. This is typically a fraction of\n * the smallest fee token unit, such as 0.012utoken.\n */\nvar GasPrice = /*#__PURE__*/function () {\n  function GasPrice(amount, denom) {\n    _classCallCheck(this, GasPrice);\n    _defineProperty(this, \"amount\", void 0);\n    _defineProperty(this, \"denom\", void 0);\n    this.amount = amount;\n    this.denom = denom;\n  }\n\n  /**\n   * Parses a gas price formatted as `<amount><denom>`, e.g. `GasPrice.fromString(\"0.012utoken\")`.\n   */\n  _createClass(GasPrice, [{\n    key: \"toString\",\n    value:\n    /**\n     * Returns a string representation of this gas price, e.g. \"0.025uatom\".\n     * This can be used as an input to `GasPrice.fromString`.\n     */\n    function toString() {\n      return this.amount.toString() + this.denom;\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(gasPrice) {\n      // Use Decimal.fromUserInput and checkDenom for detailed checks and helpful error messages\n      var matchResult = gasPrice.match(/^([0-9.]+)([a-z][a-z0-9]*)$/i);\n      if (!matchResult) {\n        throw new Error(\"Invalid gas price string\");\n      }\n      var _matchResult = _slicedToArray(matchResult, 3),\n        amount = _matchResult[1],\n        denom = _matchResult[2];\n      checkDenom(denom);\n      var decimalAmount = _sign_core__WEBPACK_IMPORTED_MODULE_0__.Decimal.fromString(amount);\n      return new GasPrice(decimalAmount, denom);\n    }\n  }]);\n  return GasPrice;\n}();\nfunction calculateFee(gasLimit, gasPrice) {\n  var processedGasPrice = typeof gasPrice === \"string\" ? GasPrice.fromString(gasPrice) : gasPrice;\n  var denom = processedGasPrice.denom,\n    gasPriceAmount = processedGasPrice.amount;\n  var amount = gasPriceAmount.multiply(gasLimit).ceil().toString();\n  return _const_tx__WEBPACK_IMPORTED_MODULE_2__.FeeParser.createProtoData({\n    amount: [{\n      amount: amount,\n      denom: denom\n    }],\n    gasLimit: gasLimit\n  });\n}\nfunction getAvgGasPrice(chainId) {\n  var _chainId;\n  var feeToken = (_chainId = _config_fee_tokens_json__WEBPACK_IMPORTED_MODULE_1__[chainId]) === null || _chainId === void 0 ? void 0 : _chainId[0];\n  if (typeof (feeToken === null || feeToken === void 0 ? void 0 : feeToken.average_gas_price) === \"undefined\") {\n    throw new Error(\"No average_gas_price found for chain \".concat(chainId));\n  }\n  return GasPrice.fromString(\"\".concat(feeToken.average_gas_price).concat(feeToken.denom));\n}\nfunction getLowGasPrice(chainId) {\n  var _chainId2;\n  var feeToken = (_chainId2 = _config_fee_tokens_json__WEBPACK_IMPORTED_MODULE_1__[chainId]) === null || _chainId2 === void 0 ? void 0 : _chainId2[0];\n  if (typeof (feeToken === null || feeToken === void 0 ? void 0 : feeToken.low_gas_price) === \"undefined\") {\n    throw new Error(\"No average_gas_price found for chain \".concat(chainId));\n  }\n  return GasPrice.fromString(\"\".concat(feeToken.low_gas_price).concat(feeToken.denom));\n}\nfunction getHighGasPrice(chainId) {\n  var _chainId3;\n  var feeToken = (_chainId3 = _config_fee_tokens_json__WEBPACK_IMPORTED_MODULE_1__[chainId]) === null || _chainId3 === void 0 ? void 0 : _chainId3[0];\n  if (typeof (feeToken === null || feeToken === void 0 ? void 0 : feeToken.high_gas_price) === \"undefined\") {\n    throw new Error(\"No average_gas_price found for chain \".concat(chainId));\n  }\n  return GasPrice.fromString(\"\".concat(feeToken.high_gas_price).concat(feeToken.denom));\n}\nfunction toAminoFee(fee) {\n  var gasLimit = fee.gasLimit,\n    payer = fee.payer,\n    granter = fee.granter,\n    rest = _objectWithoutProperties(fee, _excluded);\n  var stdFee = _objectSpread({\n    gas: gasLimit.toString()\n  }, rest);\n  if (payer !== \"\") stdFee[\"payer\"] = payer;\n  if (granter !== \"\") stdFee[\"granter\"] = granter;\n  return stdFee;\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/utils/fee.ts\n");

/***/ }),

/***/ "../cosmos/src/utils/json.ts":
/*!***********************************!*\
  !*** ../cosmos/src/utils/json.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toBytes\": () => (/* binding */ toBytes)\n/* harmony export */ });\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_core__WEBPACK_IMPORTED_MODULE_0__]);\n_sign_core__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n\n/**\n * Takes a valid JSON document and performs the following escapings in string values:\n *\n * `&` -> `\\u0026`\n * `<` -> `\\u003c`\n * `>` -> `\\u003e`\n *\n * Since those characters do not occur in other places of the JSON document, only\n * string values are affected.\n *\n * If the input is invalid JSON, the behaviour is undefined.\n */\nfunction escapeCharacters(input) {\n  // When we migrate to target es2021 or above, we can use replaceAll instead of global patterns.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\n  var amp = /&/g;\n  var lt = /</g;\n  var gt = />/g;\n  return input.replace(amp, \"\\\\u0026\").replace(lt, \"\\\\u003c\").replace(gt, \"\\\\u003e\");\n}\nfunction sortedObject(obj) {\n  if (_typeof(obj) !== \"object\" || obj === null) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(sortedObject);\n  }\n  var sortedKeys = Object.keys(obj).sort();\n  var result = {};\n  // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n  sortedKeys.forEach(function (key) {\n    result[key] = sortedObject(obj[key]);\n  });\n  return result;\n}\n\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction sortedJsonStringify(obj) {\n  return JSON.stringify(sortedObject(obj));\n}\nfunction toBytes(obj) {\n  return (0,_sign_core__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(escapeCharacters(sortedJsonStringify(obj)));\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy91dGlscy9qc29uLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQzs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0MsZ0JBQWdCQSxDQUFDQyxLQUFhLEVBQVU7RUFDL0M7RUFDQTtFQUNBLElBQU1DLEdBQUcsR0FBRyxJQUFJO0VBQ2hCLElBQU1DLEVBQUUsR0FBRyxJQUFJO0VBQ2YsSUFBTUMsRUFBRSxHQUFHLElBQUk7RUFDZixPQUFPSCxLQUFLLENBQ1RJLE9BQU8sQ0FBQ0gsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUN2QkcsT0FBTyxDQUFDRixFQUFFLEVBQUUsU0FBUyxDQUFDLENBQ3RCRSxPQUFPLENBQUNELEVBQUUsRUFBRSxTQUFTLENBQUM7QUFDM0I7QUFFQSxTQUFTRSxZQUFZQSxDQUFDQyxHQUFRLEVBQU87RUFDbkMsSUFBSUMsT0FBQSxDQUFPRCxHQUFHLE1BQUssUUFBUSxJQUFJQSxHQUFHLEtBQUssSUFBSSxFQUFFO0lBQzNDLE9BQU9BLEdBQUc7RUFDWjtFQUNBLElBQUlFLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSCxHQUFHLENBQUMsRUFBRTtJQUN0QixPQUFPQSxHQUFHLENBQUNJLEdBQUcsQ0FBQ0wsWUFBWSxDQUFDO0VBQzlCO0VBQ0EsSUFBTU0sVUFBVSxHQUFHQyxNQUFNLENBQUNDLElBQUksQ0FBQ1AsR0FBRyxDQUFDLENBQUNRLElBQUksQ0FBQyxDQUFDO0VBQzFDLElBQU1DLE1BQTJCLEdBQUcsQ0FBQyxDQUFDO0VBQ3RDO0VBQ0FKLFVBQVUsQ0FBQ0ssT0FBTyxDQUFDLFVBQUNDLEdBQUcsRUFBSztJQUMxQkYsTUFBTSxDQUFDRSxHQUFHLENBQUMsR0FBR1osWUFBWSxDQUFDQyxHQUFHLENBQUNXLEdBQUcsQ0FBQyxDQUFDO0VBQ3RDLENBQUMsQ0FBQztFQUNGLE9BQU9GLE1BQU07QUFDZjs7QUFFQTtBQUNBO0FBQ0EsU0FBU0csbUJBQW1CQSxDQUFDWixHQUFRLEVBQVU7RUFDN0MsT0FBT2EsSUFBSSxDQUFDQyxTQUFTLENBQUNmLFlBQVksQ0FBQ0MsR0FBRyxDQUFDLENBQUM7QUFDMUM7QUFFTyxTQUFTZSxPQUFPQSxDQUFDZixHQUFXLEVBQUU7RUFDbkMsT0FBT1Isb0RBQVEsQ0FBQ0MsZ0JBQWdCLENBQUNtQixtQkFBbUIsQ0FBQ1osR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM3RCxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL3V0aWxzL2pzb24udHM/MzQyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tVXRmOCB9IGZyb20gXCJAc2lnbi9jb3JlXCI7XG5cbi8qKlxuICogVGFrZXMgYSB2YWxpZCBKU09OIGRvY3VtZW50IGFuZCBwZXJmb3JtcyB0aGUgZm9sbG93aW5nIGVzY2FwaW5ncyBpbiBzdHJpbmcgdmFsdWVzOlxuICpcbiAqIGAmYCAtPiBgXFx1MDAyNmBcbiAqIGA8YCAtPiBgXFx1MDAzY2BcbiAqIGA+YCAtPiBgXFx1MDAzZWBcbiAqXG4gKiBTaW5jZSB0aG9zZSBjaGFyYWN0ZXJzIGRvIG5vdCBvY2N1ciBpbiBvdGhlciBwbGFjZXMgb2YgdGhlIEpTT04gZG9jdW1lbnQsIG9ubHlcbiAqIHN0cmluZyB2YWx1ZXMgYXJlIGFmZmVjdGVkLlxuICpcbiAqIElmIHRoZSBpbnB1dCBpcyBpbnZhbGlkIEpTT04sIHRoZSBiZWhhdmlvdXIgaXMgdW5kZWZpbmVkLlxuICovXG5mdW5jdGlvbiBlc2NhcGVDaGFyYWN0ZXJzKGlucHV0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAvLyBXaGVuIHdlIG1pZ3JhdGUgdG8gdGFyZ2V0IGVzMjAyMSBvciBhYm92ZSwgd2UgY2FuIHVzZSByZXBsYWNlQWxsIGluc3RlYWQgb2YgZ2xvYmFsIHBhdHRlcm5zLlxuICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvcmVwbGFjZUFsbFxuICBjb25zdCBhbXAgPSAvJi9nO1xuICBjb25zdCBsdCA9IC88L2c7XG4gIGNvbnN0IGd0ID0gLz4vZztcbiAgcmV0dXJuIGlucHV0XG4gICAgLnJlcGxhY2UoYW1wLCBcIlxcXFx1MDAyNlwiKVxuICAgIC5yZXBsYWNlKGx0LCBcIlxcXFx1MDAzY1wiKVxuICAgIC5yZXBsYWNlKGd0LCBcIlxcXFx1MDAzZVwiKTtcbn1cblxuZnVuY3Rpb24gc29ydGVkT2JqZWN0KG9iajogYW55KTogYW55IHtcbiAgaWYgKHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgfHwgb2JqID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgcmV0dXJuIG9iai5tYXAoc29ydGVkT2JqZWN0KTtcbiAgfVxuICBjb25zdCBzb3J0ZWRLZXlzID0gT2JqZWN0LmtleXMob2JqKS5zb3J0KCk7XG4gIGNvbnN0IHJlc3VsdDogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9O1xuICAvLyBOT1RFOiBVc2UgZm9yRWFjaCBpbnN0ZWFkIG9mIHJlZHVjZSBmb3IgcGVyZm9ybWFuY2Ugd2l0aCBsYXJnZSBvYmplY3RzIGVnIFdhc20gY29kZVxuICBzb3J0ZWRLZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgIHJlc3VsdFtrZXldID0gc29ydGVkT2JqZWN0KG9ialtrZXldKTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKiBSZXR1cm5zIGEgSlNPTiBzdHJpbmcgd2l0aCBvYmplY3RzIHNvcnRlZCBieSBrZXkgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtbW9kdWxlLWJvdW5kYXJ5LXR5cGVzXG5mdW5jdGlvbiBzb3J0ZWRKc29uU3RyaW5naWZ5KG9iajogYW55KTogc3RyaW5nIHtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNvcnRlZE9iamVjdChvYmopKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvQnl0ZXMob2JqOiBvYmplY3QpIHtcbiAgcmV0dXJuIGZyb21VdGY4KGVzY2FwZUNoYXJhY3RlcnMoc29ydGVkSnNvblN0cmluZ2lmeShvYmopKSk7XG59XG4iXSwibmFtZXMiOlsiZnJvbVV0ZjgiLCJlc2NhcGVDaGFyYWN0ZXJzIiwiaW5wdXQiLCJhbXAiLCJsdCIsImd0IiwicmVwbGFjZSIsInNvcnRlZE9iamVjdCIsIm9iaiIsIl90eXBlb2YiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJzb3J0ZWRLZXlzIiwiT2JqZWN0Iiwia2V5cyIsInNvcnQiLCJyZXN1bHQiLCJmb3JFYWNoIiwia2V5Iiwic29ydGVkSnNvblN0cmluZ2lmeSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b0J5dGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cosmos/src/utils/json.ts\n");

/***/ }),

/***/ "../cosmos/src/utils/parser.ts":
/*!*************************************!*\
  !*** ../cosmos/src/utils/parser.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toParserArgs\": () => (/* binding */ toParserArgs)\n/* harmony export */ });\nfunction toParserArgs(data) {\n  var typeUrl = data.typeUrl,\n    aminoType = data.aminoType,\n    encode = data.encode,\n    decode = data.decode,\n    fromAmino = data.fromAmino,\n    toAmino = data.toAmino,\n    fromPartial = data.fromPartial;\n  return {\n    protoType: typeUrl,\n    proto: {\n      encode: encode,\n      decode: decode,\n      fromPartial: fromPartial\n    },\n    aminoType: aminoType,\n    converter: {\n      toAmino: toAmino,\n      toProto: fromAmino\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy91dGlscy9wYXJzZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUVPLFNBQVNBLFlBQVlBLENBQWlCQyxJQUEwQixFQUFFO0VBQ3ZFLElBQ0VDLE9BQU8sR0FPTEQsSUFBSSxDQVBOQyxPQUFPO0lBQ1BDLFNBQVMsR0FNUEYsSUFBSSxDQU5ORSxTQUFTO0lBQ1RDLE1BQU0sR0FLSkgsSUFBSSxDQUxORyxNQUFNO0lBQ05DLE1BQU0sR0FJSkosSUFBSSxDQUpOSSxNQUFNO0lBQ05DLFNBQVMsR0FHUEwsSUFBSSxDQUhOSyxTQUFTO0lBQ1RDLE9BQU8sR0FFTE4sSUFBSSxDQUZOTSxPQUFPO0lBQ1BDLFdBQVcsR0FDVFAsSUFBSSxDQUROTyxXQUFXO0VBRWIsT0FBTztJQUNMQyxTQUFTLEVBQUVQLE9BQU87SUFDbEJRLEtBQUssRUFBRTtNQUFFTixNQUFNLEVBQU5BLE1BQU07TUFBRUMsTUFBTSxFQUFOQSxNQUFNO01BQUVHLFdBQVcsRUFBWEE7SUFBWSxDQUFDO0lBQ3RDTCxTQUFTLEVBQUVBLFNBQVM7SUFDcEJRLFNBQVMsRUFBRTtNQUNUSixPQUFPLEVBQVBBLE9BQU87TUFDUEssT0FBTyxFQUFFTjtJQUNYO0VBQ0YsQ0FBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL3V0aWxzL3BhcnNlci50cz85M2M0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1ldGEgfSBmcm9tIFwiLi4vdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHRvUGFyc2VyQXJnczxQcm90b1QsIEFtaW5vVD4oZGF0YTogTWV0YTxQcm90b1QsIEFtaW5vVD4pIHtcbiAgY29uc3Qge1xuICAgIHR5cGVVcmwsXG4gICAgYW1pbm9UeXBlLFxuICAgIGVuY29kZSxcbiAgICBkZWNvZGUsXG4gICAgZnJvbUFtaW5vLFxuICAgIHRvQW1pbm8sXG4gICAgZnJvbVBhcnRpYWwsXG4gIH0gPSBkYXRhO1xuICByZXR1cm4ge1xuICAgIHByb3RvVHlwZTogdHlwZVVybCxcbiAgICBwcm90bzogeyBlbmNvZGUsIGRlY29kZSwgZnJvbVBhcnRpYWwgfSxcbiAgICBhbWlub1R5cGU6IGFtaW5vVHlwZSxcbiAgICBjb252ZXJ0ZXI6IHtcbiAgICAgIHRvQW1pbm8sXG4gICAgICB0b1Byb3RvOiBmcm9tQW1pbm8sXG4gICAgfSxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJ0b1BhcnNlckFyZ3MiLCJkYXRhIiwidHlwZVVybCIsImFtaW5vVHlwZSIsImVuY29kZSIsImRlY29kZSIsImZyb21BbWlubyIsInRvQW1pbm8iLCJmcm9tUGFydGlhbCIsInByb3RvVHlwZSIsInByb3RvIiwiY29udmVydGVyIiwidG9Qcm90byJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cosmos/src/utils/parser.ts\n");

/***/ }),

/***/ "../cosmos/src/utils/random-id.ts":
/*!****************************************!*\
  !*** ../cosmos/src/utils/random-id.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomId\": () => (/* binding */ randomId)\n/* harmony export */ });\nvar numbersWithoutZero = \"123456789\";\n\n/** generates a random numeric character  */\nfunction randomNumericChar() {\n  return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];\n}\n\n/**\n * An (absolutely not cryptographically secure) random integer > 0.\n */\nfunction randomId() {\n  return parseInt(Array.from({\n    length: 12\n  }).map(function () {\n    return randomNumericChar();\n  }).join(\"\"), 10);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY29zbW9zL3NyYy91dGlscy9yYW5kb20taWQudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQU1BLGtCQUFrQixHQUFHLFdBQVc7O0FBRXRDO0FBQ0EsU0FBU0MsaUJBQWlCQSxDQUFBLEVBQVc7RUFDbkMsT0FBT0Qsa0JBQWtCLENBQ3ZCRSxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLENBQUMsQ0FBQyxHQUFHSixrQkFBa0IsQ0FBQ0ssTUFBTSxDQUFDLENBQ3REO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ08sU0FBU0MsUUFBUUEsQ0FBQSxFQUFXO0VBQ2pDLE9BQU9DLFFBQVEsQ0FDYkMsS0FBSyxDQUFDQyxJQUFJLENBQUM7SUFBRUosTUFBTSxFQUFFO0VBQUcsQ0FBQyxDQUFDLENBQ3ZCSyxHQUFHLENBQUM7SUFBQSxPQUFNVCxpQkFBaUIsQ0FBQyxDQUFDO0VBQUEsRUFBQyxDQUM5QlUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUNYLEVBQ0YsQ0FBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uLi9jb3Ntb3Mvc3JjL3V0aWxzL3JhbmRvbS1pZC50cz8wZjZiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG51bWJlcnNXaXRob3V0WmVybyA9IFwiMTIzNDU2Nzg5XCI7XG5cbi8qKiBnZW5lcmF0ZXMgYSByYW5kb20gbnVtZXJpYyBjaGFyYWN0ZXIgICovXG5mdW5jdGlvbiByYW5kb21OdW1lcmljQ2hhcigpOiBzdHJpbmcge1xuICByZXR1cm4gbnVtYmVyc1dpdGhvdXRaZXJvW1xuICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG51bWJlcnNXaXRob3V0WmVyby5sZW5ndGgpXG4gIF07XG59XG5cbi8qKlxuICogQW4gKGFic29sdXRlbHkgbm90IGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZSkgcmFuZG9tIGludGVnZXIgPiAwLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tSWQoKTogbnVtYmVyIHtcbiAgcmV0dXJuIHBhcnNlSW50KFxuICAgIEFycmF5LmZyb20oeyBsZW5ndGg6IDEyIH0pXG4gICAgICAubWFwKCgpID0+IHJhbmRvbU51bWVyaWNDaGFyKCkpXG4gICAgICAuam9pbihcIlwiKSxcbiAgICAxMFxuICApO1xufVxuIl0sIm5hbWVzIjpbIm51bWJlcnNXaXRob3V0WmVybyIsInJhbmRvbU51bWVyaWNDaGFyIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwicmFuZG9tSWQiLCJwYXJzZUludCIsIkFycmF5IiwiZnJvbSIsIm1hcCIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cosmos/src/utils/random-id.ts\n");

/***/ }),

/***/ "../cosmos/src/utils/request.ts":
/*!**************************************!*\
  !*** ../cosmos/src/utils/request.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"requestTx\": () => (/* binding */ requestTx)\n/* harmony export */ });\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_sign_core__WEBPACK_IMPORTED_MODULE_0__]);\n_sign_core__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _requestTx;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return { value: void 0, done: !0 }; } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable || \"\" === iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } throw new TypeError(_typeof(iterable) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction requestTx(_x, _x2, _x3) {\n  return (_requestTx = _requestTx || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(endpoint, method, tx) {\n    var resp, json, error;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(endpoint, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: 992919398242,\n              jsonrpc: \"2.0\",\n              method: method,\n              params: {\n                tx: (0,_sign_core__WEBPACK_IMPORTED_MODULE_0__.toBase64)(tx)\n              }\n            })\n          });\n        case 2:\n          resp = _context.sent;\n          _context.next = 5;\n          return resp.json();\n        case 5:\n          json = _context.sent;\n          error = json[\"error\"];\n          if (!error) {\n            _context.next = 9;\n            break;\n          }\n          throw new Error(\"\".concat(error[\"message\"], \": \").concat(error[\"data\"]));\n        case 9:\n          return _context.abrupt(\"return\", json[\"result\"]);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))).apply(this, arguments);\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/src/utils/request.ts\n");

/***/ }),

/***/ "../../test-data.ts":
/*!**************************!*\
  !*** ../../test-data.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosmoshubAddress\": () => (/* binding */ cosmoshubAddress),\n/* harmony export */   \"mnemonic\": () => (/* binding */ mnemonic),\n/* harmony export */   \"privkey\": () => (/* binding */ privkey),\n/* harmony export */   \"pubkey\": () => (/* binding */ pubkey),\n/* harmony export */   \"rpcEndpoint\": () => (/* binding */ rpcEndpoint),\n/* harmony export */   \"seed\": () => (/* binding */ seed)\n/* harmony export */ });\n// june-3\nvar mnemonic = \"math inject initial situate baby shy chest hover song chaos good spoon\";\nvar seed = \"MXMR41NIJWHSmOWYZXYTbwErIx/AC+5IpocVaIuSvGWlKihDFxqSHYs9Q0NXuA1RFkErIrSfyaEntXs7VgQX5w==\";\nvar privkey = \"ND1nkaGJF5kNb6v1aX7el1vYUBjoWTeEB3O09WPRNCs=\";\nvar pubkey = \"Az/x3a7M/natRkRFb4jMPKob5mGlpcxhYDLcqH31Y2qw\";\nvar cosmoshubAddress = \"cosmos14e9mjsgpwm5fz6ghyculpe8cqgjfw6r69xn0yz\";\n\n// export const rpcEndpoint = \"https://rpc-cosmoshub.blockapsis.com\";\nvar rpcEndpoint = \"https://cosmos-rpc.quickapi.com:443\";\n// export const rpcEndpoint = \"https://rpc.cosmos.directory/cosmoshub\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vdGVzdC1kYXRhLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ08sSUFBTUEsUUFBUSxHQUNuQix3RUFBd0U7QUFDbkUsSUFBTUMsSUFBSSxHQUNmLDBGQUEwRjtBQUNyRixJQUFNQyxPQUFPLEdBQUcsOENBQThDO0FBQzlELElBQU1DLE1BQU0sR0FBRyw4Q0FBOEM7QUFDN0QsSUFBTUMsZ0JBQWdCLEdBQUcsK0NBQStDOztBQUUvRTtBQUNPLElBQU1DLFdBQVcsR0FBRyxxQ0FBcUM7QUFDaEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4uLy4uL3Rlc3QtZGF0YS50cz8zNTAyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGp1bmUtM1xuZXhwb3J0IGNvbnN0IG1uZW1vbmljID1cbiAgXCJtYXRoIGluamVjdCBpbml0aWFsIHNpdHVhdGUgYmFieSBzaHkgY2hlc3QgaG92ZXIgc29uZyBjaGFvcyBnb29kIHNwb29uXCI7XG5leHBvcnQgY29uc3Qgc2VlZCA9XG4gIFwiTVhNUjQxTklKV0hTbU9XWVpYWVRid0VySXgvQUMrNUlwb2NWYUl1U3ZHV2xLaWhERnhxU0hZczlRME5YdUExUkZrRXJJclNmeWFFbnRYczdWZ1FYNXc9PVwiO1xuZXhwb3J0IGNvbnN0IHByaXZrZXkgPSBcIk5EMW5rYUdKRjVrTmI2djFhWDdlbDF2WVVCam9XVGVFQjNPMDlXUFJOQ3M9XCI7XG5leHBvcnQgY29uc3QgcHVia2V5ID0gXCJBei94M2E3TS9uYXRSa1JGYjRqTVBLb2I1bUdscGN4aFlETGNxSDMxWTJxd1wiO1xuZXhwb3J0IGNvbnN0IGNvc21vc2h1YkFkZHJlc3MgPSBcImNvc21vczE0ZTltanNncHdtNWZ6NmdoeWN1bHBlOGNxZ2pmdzZyNjl4bjB5elwiO1xuXG4vLyBleHBvcnQgY29uc3QgcnBjRW5kcG9pbnQgPSBcImh0dHBzOi8vcnBjLWNvc21vc2h1Yi5ibG9ja2Fwc2lzLmNvbVwiO1xuZXhwb3J0IGNvbnN0IHJwY0VuZHBvaW50ID0gXCJodHRwczovL2Nvc21vcy1ycGMucXVpY2thcGkuY29tOjQ0M1wiO1xuLy8gZXhwb3J0IGNvbnN0IHJwY0VuZHBvaW50ID0gXCJodHRwczovL3JwYy5jb3Ntb3MuZGlyZWN0b3J5L2Nvc21vc2h1YlwiO1xuIl0sIm5hbWVzIjpbIm1uZW1vbmljIiwic2VlZCIsInByaXZrZXkiLCJwdWJrZXkiLCJjb3Ntb3NodWJBZGRyZXNzIiwicnBjRW5kcG9pbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../test-data.ts\n");

/***/ }),

/***/ "./components/index.ts":
/*!*****************************!*\
  !*** ./components/index.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _model_receipt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./model-receipt */ \"./components/model-receipt.tsx\");\n/* harmony import */ var _model_tx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model-tx */ \"./components/model-tx.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_model_receipt__WEBPACK_IMPORTED_MODULE_0__, _model_tx__WEBPACK_IMPORTED_MODULE_1__]);\n([_model_receipt__WEBPACK_IMPORTED_MODULE_0__, _model_tx__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _model_receipt__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _model_receipt__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _model_tx__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _model_tx__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUMwQjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uL2NvbXBvbmVudHMvaW5kZXgudHM/ZjJjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9tb2RlbC1yZWNlaXB0XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tb2RlbC10eFwiOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/index.ts\n");

/***/ }),

/***/ "./components/model-receipt.tsx":
/*!**************************************!*\
  !*** ./components/model-receipt.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ModalReceiptView\": () => (/* binding */ ModalReceiptView)\n/* harmony export */ });\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _loadable_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @loadable/component */ \"@loadable/component\");\n/* harmony import */ var _loadable_component__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_loadable_component__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__]);\n_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nvar ReactJson = _loadable_component__WEBPACK_IMPORTED_MODULE_1___default()(function() {\n    return Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! react-json-view */ \"react-json-view\", 23));\n});\nvar ModalReceiptView = function ModalReceiptView(_ref) {\n    var receipt = _ref.receipt;\n    if (receipt == void 0) {\n        return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalContent, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalHeader, {\n                    children: \"Sign & Broadcast\"\n                }),\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalCloseButton, {}),\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalBody, {\n                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.Center, {\n                        minH: 300,\n                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.Spinner, {\n                            thickness: \"4px\",\n                            speed: \"0.65s\",\n                            emptyColor: \"gray.200\",\n                            color: \"teal.500\",\n                            size: \"xl\"\n                        })\n                    })\n                })\n            ]\n        });\n    }\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalContent, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalHeader, {\n                children: \"Sign & Broadcast\"\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalCloseButton, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.ModalBody, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.Heading, {\n                        as: \"h6\",\n                        size: \"xs\",\n                        marginBottom: 5,\n                        children: \"Response of Broadcasting\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(ReactJson, {\n                        src: receipt,\n                        iconStyle: \"square\",\n                        displayDataTypes: false,\n                        enableClipboard: false,\n                        displayObjectSize: false,\n                        collapseStringsAfterLength: 60\n                    })\n                ]\n            })\n        ]\n    });\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL21vZGVsLXJlY2VpcHQudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBUzBDO0FBRWpCO0FBQUM7QUFBQTtBQUVDO0FBQUEsSUFBQWEsU0FBTSxHQUFPTiwwREFBQSxZQUFrQjtJQUFDO0FBRTNEO0FBQW1DLElBQUFPLGdCQUFBLEdBQU8sU0FBQUEsZ0JBQUEsQ0FBQUMsSUFBQTtJQUN4QyxJQUFJQyxPQUFPLEdBQUFELElBQUksQ0FBQUMsT0FBUTtJQUFBLElBQ3JCQSxPQUFBLFlBQ0U7UUFBYSxxQkFBQUosdURBQUEsQ0FDWFIsMERBQUM7WUFBV2EsUUFBQTtnQkFBQSxXQUFDLEdBQUFQLHNEQUFBLENBQUFMLHlEQUFBO29CQUE4QlksUUFBQSxvQkFDMUM7aUJBQ1M7Z0JBQUEsY0FBQVAsc0RBQUEsQ0FBQVAsOERBQ0Q7Z0JBQUEsY0FBQU8sc0RBQUEsQ0FBQVIsdURBQUE7b0JBQUFlLFFBQU8sYUFBSSxHQUFBUCxzREFBQSxDQUFBVixvREFBQTt3QkFBQWtCLElBQUE7d0JBQ1JELFFBQ04sYUFBZSxHQUFBUCxzREFBQSxDQUFBSixxREFBQTs0QkFDZmEsU0FBTSxPQUFPOzRCQUNiQyxLQUFBLFNBQVc7NEJBQ1hDLFVBQU0sWUFBVTs0QkFDaEJDLEtBQUksRUFBQzs0QkFDTkMsSUFBQTt5QkFDSztxQkFDRTtpQkFDQzthQUFBO1NBRW5CO0lBQ0E7SUFDZSxxQkFBQVgsdURBQUEsQ0FDWFIsMERBQUM7UUFBV2EsUUFBQTtZQUFBLFdBQUMsR0FBQVAsc0RBQUEsQ0FBQUwseURBQUE7Z0JBQThCWSxRQUFBLG9CQUMxQzthQUNTO1lBQUEsY0FBQVAsc0RBQUEsQ0FBQVAsOERBQ0E7WUFBQSxjQUFBUyx1REFBQSxDQUFBVix1REFBQTtnQkFBQWUsUUFBSSxFQUFJO29CQUFBLGNBQUFQLHNEQUFBLENBQUFULHFEQUFBO3dCQUFDdUIsRUFBQSxFQUFJLElBQUM7d0JBQUtELElBQUE7d0JBQWdCRSxZQUFDO3dCQUVsQ1IsUUFBQSw0QkFDQTtxQkFBQSxDQUNSO29CQUFBLFdBQWEsR0FBQVAsc0RBQUEsQ0FBQUcsU0FBQTt3QkFDYmEsR0FBQSxFQUFBVixPQUFVO3dCQUNWVyxTQUFBLFVBQWtCO3dCQUNsQkMsZ0JBQWUsRUFBRSxLQUFNO3dCQUN2QkMsZUFBQSxFQUFpQixLQUFFO3dCQUNuQkMsaUJBQUE7d0JBQ0FDLDBCQUFBO3FCQUNRO2lCQUFBO2FBQ0M7U0FBQTtLQUVsQjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNpZ24vZXhhbXBsZS8uL2NvbXBvbmVudHMvbW9kZWwtcmVjZWlwdC50c3g/OTI2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDZW50ZXIsIEhlYWRpbmcsIE1vZGFsQm9keSwgTW9kYWxDbG9zZUJ1dHRvbiwgTW9kYWxDb250ZW50LCBNb2RhbEhlYWRlciwgU3Bpbm5lciB9IGZyb20gXCJAY2hha3JhLXVpL3JlYWN0XCI7XG5pbXBvcnQgbG9hZGFibGUgZnJvbSBcIkBsb2FkYWJsZS9jb21wb25lbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgUmVhY3RKc29uID0gbG9hZGFibGUoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gaW1wb3J0KFwicmVhY3QtanNvbi12aWV3XCIpO1xufSk7XG5leHBvcnQgdmFyIE1vZGFsUmVjZWlwdFZpZXcgPSBmdW5jdGlvbiBNb2RhbFJlY2VpcHRWaWV3KF9yZWYpIHtcbiAgdmFyIHJlY2VpcHQgPSBfcmVmLnJlY2VpcHQ7XG4gIGlmIChyZWNlaXB0ID09IHZvaWQgMCkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoTW9kYWxDb250ZW50LCB7XG4gICAgICBjaGlsZHJlbjogWy8qI19fUFVSRV9fKi9fanN4KE1vZGFsSGVhZGVyLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIlNpZ24gJiBCcm9hZGNhc3RcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KE1vZGFsQ2xvc2VCdXR0b24sIHt9KSwgLyojX19QVVJFX18qL19qc3goTW9kYWxCb2R5LCB7XG4gICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeChDZW50ZXIsIHtcbiAgICAgICAgICBtaW5IOiAzMDAsXG4gICAgICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KFNwaW5uZXIsIHtcbiAgICAgICAgICAgIHRoaWNrbmVzczogXCI0cHhcIixcbiAgICAgICAgICAgIHNwZWVkOiBcIjAuNjVzXCIsXG4gICAgICAgICAgICBlbXB0eUNvbG9yOiBcImdyYXkuMjAwXCIsXG4gICAgICAgICAgICBjb2xvcjogXCJ0ZWFsLjUwMFwiLFxuICAgICAgICAgICAgc2l6ZTogXCJ4bFwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pXVxuICAgIH0pO1xuICB9XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoTW9kYWxDb250ZW50LCB7XG4gICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChNb2RhbEhlYWRlciwge1xuICAgICAgY2hpbGRyZW46IFwiU2lnbiAmIEJyb2FkY2FzdFwiXG4gICAgfSksIC8qI19fUFVSRV9fKi9fanN4KE1vZGFsQ2xvc2VCdXR0b24sIHt9KSwgLyojX19QVVJFX18qL19qc3hzKE1vZGFsQm9keSwge1xuICAgICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChIZWFkaW5nLCB7XG4gICAgICAgIGFzOiBcImg2XCIsXG4gICAgICAgIHNpemU6IFwieHNcIixcbiAgICAgICAgbWFyZ2luQm90dG9tOiA1LFxuICAgICAgICBjaGlsZHJlbjogXCJSZXNwb25zZSBvZiBCcm9hZGNhc3RpbmdcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KFJlYWN0SnNvbiwge1xuICAgICAgICBzcmM6IHJlY2VpcHQsXG4gICAgICAgIGljb25TdHlsZTogXCJzcXVhcmVcIixcbiAgICAgICAgZGlzcGxheURhdGFUeXBlczogZmFsc2UsXG4gICAgICAgIGVuYWJsZUNsaXBib2FyZDogZmFsc2UsXG4gICAgICAgIGRpc3BsYXlPYmplY3RTaXplOiBmYWxzZSxcbiAgICAgICAgY29sbGFwc2VTdHJpbmdzQWZ0ZXJMZW5ndGg6IDYwXG4gICAgICB9KV1cbiAgICB9KV1cbiAgfSk7XG59OyJdLCJuYW1lcyI6WyJDZW50ZXIiLCJIZWFkaW5nIiwiTW9kYWxCb2R5IiwiTW9kYWxDbG9zZUJ1dHRvbiIsIk1vZGFsQ29udGVudCIsIk1vZGFsSGVhZGVyIiwiU3Bpbm5lciIsImxvYWRhYmxlIiwiUmVhY3QiLCJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiUmVhY3RKc29uIiwiTW9kYWxSZWNlaXB0VmlldyIsIl9yZWYiLCJyZWNlaXB0IiwiY2hpbGRyZW4iLCJtaW5IIiwidGhpY2tuZXNzIiwic3BlZWQiLCJlbXB0eUNvbG9yIiwiY29sb3IiLCJzaXplIiwiYXMiLCJtYXJnaW5Cb3R0b20iLCJzcmMiLCJpY29uU3R5bGUiLCJkaXNwbGF5RGF0YVR5cGVzIiwiZW5hYmxlQ2xpcGJvYXJkIiwiZGlzcGxheU9iamVjdFNpemUiLCJjb2xsYXBzZVN0cmluZ3NBZnRlckxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/model-receipt.tsx\n");

/***/ }),

/***/ "./components/model-tx.tsx":
/*!*********************************!*\
  !*** ./components/model-tx.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ModalTxView\": () => (/* binding */ ModalTxView)\n/* harmony export */ });\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/icons */ \"@chakra-ui/icons\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _loadable_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @loadable/component */ \"@loadable/component\");\n/* harmony import */ var _loadable_component__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_loadable_component__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__, _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__]);\n([_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__, _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nvar ReactJson = _loadable_component__WEBPACK_IMPORTED_MODULE_2___default()(function() {\n    return Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! react-json-view */ \"react-json-view\", 23));\n});\nvar ModalTxView = function ModalTxView(_ref) {\n    var _fee$amount, _fee$denom;\n    var msgs = _ref.msgs, gas = _ref.gas, fee = _ref.fee, gasPrice = _ref.gasPrice, onClick = _ref.onClick;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.ModalContent, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.ModalHeader, {\n                children: \"Transaction\"\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.ModalCloseButton, {}),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.ModalBody, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Heading, {\n                        as: \"h6\",\n                        size: \"xs\",\n                        marginBottom: 5,\n                        children: \"Messages\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(ReactJson, {\n                        src: msgs,\n                        iconStyle: \"square\",\n                        displayDataTypes: false,\n                        enableClipboard: false,\n                        displayObjectSize: false,\n                        collapseStringsAfterLength: 60\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Heading, {\n                        as: \"h6\",\n                        size: \"xs\",\n                        marginY: 5,\n                        children: \"Estimated Fee\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Stack, {\n                        direction: \"row\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Code, {\n                                colorScheme: \"green\",\n                                children: \"\".concat(gas, \" gas\")\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Code, {\n                                colorScheme: \"yellow\",\n                                children: \"~ \".concat((_fee$amount = fee === null || fee === void 0 ? void 0 : fee.amount) !== null && _fee$amount !== void 0 ? _fee$amount : \"--\", \" \").concat((_fee$denom = fee === null || fee === void 0 ? void 0 : fee.denom) !== null && _fee$denom !== void 0 ? _fee$denom : \"\")\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                fontSize: \"xs\",\n                                color: \"grey\",\n                                children: \"(1 gas = \".concat(gasPrice.amount, \" \").concat(gasPrice.denom, \")\")\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.ModalFooter, {\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                    colorScheme: \"twitter\",\n                    size: \"sm\",\n                    rightIcon: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__.ArrowForwardIcon, {}),\n                    onClick: onClick,\n                    children: \"Sign & Broadcast\"\n                })\n            })\n        ]\n    });\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL21vZGVsLXR4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFNRTtBQU93QztBQUVqQjtBQUFDO0FBQUE7QUFFQztBQUFBLElBQUFpQixTQUFNLEdBQU9OLDBEQUFBLFlBQWtCO0lBQUM7QUFFM0Q7QUFZTSxJQUFBTyxXQUFBLFlBQUFBLFdBQUEsQ0FBQUMsSUFBQTtJQUFBLElBWEpDLFdBQUksRUFBSkMsVUFBSTtJQUFBLElBQ0pDLElBQUcsR0FBQUgsSUFBSCxDQUFHRyxJQUFBLEVBQ0hDLEdBQUcsR0FBQUosSUFBQSxDQUFISSxHQUFHLEVBQ0hDLEdBQUEsR0FBQUwsSUFBUSxDQUFBSyxHQUFBLEVBQ1JDLFFBQU8sR0FBQU4sSUFBUCxDQUFBTSxRQUFPLEVBUVBDLE9BQUEsR0FBQVAsSUFBQSxDQUFBTyxPQUNFO0lBQWEscUJBQUFWLHVEQUFBLENBQ1hWLDBEQUFDO1FBQVdxQixRQUFBO1lBQUEsV0FBQyxHQUFBYixzREFBQSxDQUFBTix5REFBQTtnQkFBeUJtQixRQUFBLGVBQ3JDO2FBQ1M7WUFBQSxjQUFBYixzREFBQSxDQUFBVCw4REFDQTtZQUFBLGNBQUFXLHVEQUFBLENBQUFaLHVEQUFBO2dCQUFBdUIsUUFBSSxFQUFJO29CQUFBLGNBQUFiLHNEQUFBLENBQUFYLHFEQUFBO3dCQUFDeUIsRUFBQSxFQUFJLElBQUM7d0JBQUtDLElBQUE7d0JBQWdCQyxZQUFDO3dCQUVsQ0gsUUFBQSxZQUNUO3FCQUFTLENBQ1I7b0JBQUEsV0FBVSxHQUFBYixzREFBQSxDQUFBRyxTQUFBO3dCQUNWYyxHQUFBLEVBQUFULElBQVM7d0JBQ1RVLFNBQUEsVUFBa0I7d0JBQ2xCQyxnQkFBZSxFQUFFLEtBQU07d0JBQ3ZCQyxlQUFBLEVBQWlCLEtBQUU7d0JBQ25CQyxpQkFBQTt3QkFDQUMsMEJBQ0QsRUFBTztxQkFBQSxDQUFDO29CQUFFLFdBQUssR0FBQXRCLHNEQUFBLENBQUFYLHFEQUFBO3dCQUFDeUIsRUFBQSxFQUFJLElBQUM7d0JBQUtDLElBQUEsTUFBVzt3QkFBQVEsT0FBQSxHQUFDO3dCQUU3QlYsUUFBQSxpQkFDVDtxQkFBSyxDQUFDO29CQUFBLFdBQVUsR0FBQVgsdURBQUssQ0FBQVAsbURBQUE7d0JBQUE2QixTQUFBO3dCQUNmWCxRQUFDOzRCQUFBLFdBQW1CLEdBQUFiLHNEQUFBLENBQUFaLGtEQUFBO2dDQUFDcUMsV0FBUSxTQUFLO2dDQUFhWixRQUFBLEtBQUFhLE1BQ3BELENBQUNqQixHQUFBLEVBQUk7NkJBQUEsQ0FDSDs0QkFBQSxXQUFZLEdBQUFULHNEQUFBLENBQUFaLGtEQUFRO2dDQUNwQnFDLFdBQVE7Z0NBQ1JaLFFBQUEsT0FDRmEsTUFBQyxFQUFBcEIsV0FBSSxHQUFBSSxHQUFBLGFBQUFBLEdBQUEsdUJBQUFBLEdBQUEsQ0FBQWlCLE1BQUEsY0FBQXJCLFdBQUEsY0FBQUEsV0FBQSxjQUFBb0IsTUFBQSxFQUFBbkIsVUFBQSxHQUFBRyxHQUFBLGFBQUFBLEdBQUEsdUJBQUFBLEdBQUEsQ0FBQWtCLEtBQUEsY0FBQXJCLFVBQUEsY0FBQUEsVUFBQTs2QkFBQSxDQUFDOzRCQUFBLFdBQVMsR0FBSVAsc0RBQUEsQ0FBQUosa0RBQUE7Z0NBQUNpQyxRQUFNLE1BQU07Z0NBQUFDLEtBQUE7Z0NBRXpCakIsUUFBQSxjQUFBYSxNQUFBLENBQUFmLFFBQUEsQ0FBQWdCLE1BQUEsT0FBQUQsTUFBQSxDQUFBZixRQUFBLENBQUFpQixLQUFBOzZCQUNEO3lCQUFBO3FCQUNFO2lCQUFBO2FBQ0E7WUFBQSxjQUFBNUIsc0RBQUEsQ0FBQVAseURBQ1Q7Z0JBQU1vQixRQUNMLGFBQVksR0FBQWIsc0RBQVMsQ0FBQWIsb0RBQUE7b0JBQ3JCc0MsV0FBVztvQkFDWFYsSUFBQSxNQUFTO29CQUNUZ0IsU0FBUyxhQUFRLEdBQUEvQixzREFBQSxDQUFBZCw4REFBQTtvQkFBQTBCLE9BQUEsRUFBQUEsT0FDbEI7b0JBRU9DLFFBQUE7aUJBQ0k7YUFDRDtTQUFBO0tBRWxCO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2lnbi9leGFtcGxlLy4vY29tcG9uZW50cy9tb2RlbC10eC50c3g/YjM5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcnJvd0ZvcndhcmRJY29uIH0gZnJvbSBcIkBjaGFrcmEtdWkvaWNvbnNcIjtcbmltcG9ydCB7IEJ1dHRvbiwgQ29kZSwgSGVhZGluZywgTW9kYWxCb2R5LCBNb2RhbENsb3NlQnV0dG9uLCBNb2RhbENvbnRlbnQsIE1vZGFsRm9vdGVyLCBNb2RhbEhlYWRlciwgU3RhY2ssIFRleHQgfSBmcm9tIFwiQGNoYWtyYS11aS9yZWFjdFwiO1xuaW1wb3J0IGxvYWRhYmxlIGZyb20gXCJAbG9hZGFibGUvY29tcG9uZW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsganN4cyBhcyBfanN4cyB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIFJlYWN0SnNvbiA9IGxvYWRhYmxlKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGltcG9ydChcInJlYWN0LWpzb24tdmlld1wiKTtcbn0pO1xuZXhwb3J0IHZhciBNb2RhbFR4VmlldyA9IGZ1bmN0aW9uIE1vZGFsVHhWaWV3KF9yZWYpIHtcbiAgdmFyIF9mZWUkYW1vdW50LCBfZmVlJGRlbm9tO1xuICB2YXIgbXNncyA9IF9yZWYubXNncyxcbiAgICBnYXMgPSBfcmVmLmdhcyxcbiAgICBmZWUgPSBfcmVmLmZlZSxcbiAgICBnYXNQcmljZSA9IF9yZWYuZ2FzUHJpY2UsXG4gICAgb25DbGljayA9IF9yZWYub25DbGljaztcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4cyhNb2RhbENvbnRlbnQsIHtcbiAgICBjaGlsZHJlbjogWy8qI19fUFVSRV9fKi9fanN4KE1vZGFsSGVhZGVyLCB7XG4gICAgICBjaGlsZHJlbjogXCJUcmFuc2FjdGlvblwiXG4gICAgfSksIC8qI19fUFVSRV9fKi9fanN4KE1vZGFsQ2xvc2VCdXR0b24sIHt9KSwgLyojX19QVVJFX18qL19qc3hzKE1vZGFsQm9keSwge1xuICAgICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChIZWFkaW5nLCB7XG4gICAgICAgIGFzOiBcImg2XCIsXG4gICAgICAgIHNpemU6IFwieHNcIixcbiAgICAgICAgbWFyZ2luQm90dG9tOiA1LFxuICAgICAgICBjaGlsZHJlbjogXCJNZXNzYWdlc1wiXG4gICAgICB9KSwgLyojX19QVVJFX18qL19qc3goUmVhY3RKc29uLCB7XG4gICAgICAgIHNyYzogbXNncyxcbiAgICAgICAgaWNvblN0eWxlOiBcInNxdWFyZVwiLFxuICAgICAgICBkaXNwbGF5RGF0YVR5cGVzOiBmYWxzZSxcbiAgICAgICAgZW5hYmxlQ2xpcGJvYXJkOiBmYWxzZSxcbiAgICAgICAgZGlzcGxheU9iamVjdFNpemU6IGZhbHNlLFxuICAgICAgICBjb2xsYXBzZVN0cmluZ3NBZnRlckxlbmd0aDogNjBcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChIZWFkaW5nLCB7XG4gICAgICAgIGFzOiBcImg2XCIsXG4gICAgICAgIHNpemU6IFwieHNcIixcbiAgICAgICAgbWFyZ2luWTogNSxcbiAgICAgICAgY2hpbGRyZW46IFwiRXN0aW1hdGVkIEZlZVwiXG4gICAgICB9KSwgLyojX19QVVJFX18qL19qc3hzKFN0YWNrLCB7XG4gICAgICAgIGRpcmVjdGlvbjogXCJyb3dcIixcbiAgICAgICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChDb2RlLCB7XG4gICAgICAgICAgY29sb3JTY2hlbWU6IFwiZ3JlZW5cIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJcIi5jb25jYXQoZ2FzLCBcIiBnYXNcIilcbiAgICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KENvZGUsIHtcbiAgICAgICAgICBjb2xvclNjaGVtZTogXCJ5ZWxsb3dcIixcbiAgICAgICAgICBjaGlsZHJlbjogXCJ+IFwiLmNvbmNhdCgoX2ZlZSRhbW91bnQgPSBmZWUgPT09IG51bGwgfHwgZmVlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmZWUuYW1vdW50KSAhPT0gbnVsbCAmJiBfZmVlJGFtb3VudCAhPT0gdm9pZCAwID8gX2ZlZSRhbW91bnQgOiBcIi0tXCIsIFwiIFwiKS5jb25jYXQoKF9mZWUkZGVub20gPSBmZWUgPT09IG51bGwgfHwgZmVlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmZWUuZGVub20pICE9PSBudWxsICYmIF9mZWUkZGVub20gIT09IHZvaWQgMCA/IF9mZWUkZGVub20gOiBcIlwiKVxuICAgICAgICB9KSwgLyojX19QVVJFX18qL19qc3goVGV4dCwge1xuICAgICAgICAgIGZvbnRTaXplOiBcInhzXCIsXG4gICAgICAgICAgY29sb3I6IFwiZ3JleVwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIigxIGdhcyA9IFwiLmNvbmNhdChnYXNQcmljZS5hbW91bnQsIFwiIFwiKS5jb25jYXQoZ2FzUHJpY2UuZGVub20sIFwiKVwiKVxuICAgICAgICB9KV1cbiAgICAgIH0pXVxuICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChNb2RhbEZvb3Rlciwge1xuICAgICAgY2hpbGRyZW46IC8qI19fUFVSRV9fKi9fanN4KEJ1dHRvbiwge1xuICAgICAgICBjb2xvclNjaGVtZTogXCJ0d2l0dGVyXCIsXG4gICAgICAgIHNpemU6IFwic21cIixcbiAgICAgICAgcmlnaHRJY29uOiAvKiNfX1BVUkVfXyovX2pzeChBcnJvd0ZvcndhcmRJY29uLCB7fSksXG4gICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2ssXG4gICAgICAgIGNoaWxkcmVuOiBcIlNpZ24gJiBCcm9hZGNhc3RcIlxuICAgICAgfSlcbiAgICB9KV1cbiAgfSk7XG59OyJdLCJuYW1lcyI6WyJBcnJvd0ZvcndhcmRJY29uIiwiQnV0dG9uIiwiQ29kZSIsIkhlYWRpbmciLCJNb2RhbEJvZHkiLCJNb2RhbENsb3NlQnV0dG9uIiwiTW9kYWxDb250ZW50IiwiTW9kYWxGb290ZXIiLCJNb2RhbEhlYWRlciIsIlN0YWNrIiwiVGV4dCIsImxvYWRhYmxlIiwiUmVhY3QiLCJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiUmVhY3RKc29uIiwiTW9kYWxUeFZpZXciLCJfcmVmIiwiX2ZlZSRhbW91bnQiLCJfZmVlJGRlbm9tIiwibXNncyIsImdhcyIsImZlZSIsImdhc1ByaWNlIiwib25DbGljayIsImNoaWxkcmVuIiwiYXMiLCJzaXplIiwibWFyZ2luQm90dG9tIiwic3JjIiwiaWNvblN0eWxlIiwiZGlzcGxheURhdGFUeXBlcyIsImVuYWJsZUNsaXBib2FyZCIsImRpc3BsYXlPYmplY3RTaXplIiwiY29sbGFwc2VTdHJpbmdzQWZ0ZXJMZW5ndGgiLCJtYXJnaW5ZIiwiZGlyZWN0aW9uIiwiY29sb3JTY2hlbWUiLCJjb25jYXQiLCJhbW91bnQiLCJkZW5vbSIsImZvbnRTaXplIiwiY29sb3IiLCJyaWdodEljb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/model-tx.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/icons */ \"@chakra-ui/icons\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\n/* harmony import */ var _sign_cosmos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sign/cosmos */ \"../cosmos/index.ts\");\n/* harmony import */ var _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sign/cosmos-const */ \"../cosmos-const/index.ts\");\n/* harmony import */ var interchain_query_cosmos_bank_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! interchain-query/cosmos/bank/v1beta1/query.rpc.Query */ \"interchain-query/cosmos/bank/v1beta1/query.rpc.Query\");\n/* harmony import */ var interchain_query_cosmos_bank_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(interchain_query_cosmos_bank_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _test_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../test-data */ \"../../test-data.ts\");\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components */ \"./components/index.ts\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__, _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__, _sign_core__WEBPACK_IMPORTED_MODULE_2__, _sign_cosmos__WEBPACK_IMPORTED_MODULE_3__, _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__, _components__WEBPACK_IMPORTED_MODULE_8__]);\n([_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__, _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__, _sign_core__WEBPACK_IMPORTED_MODULE_2__, _sign_cosmos__WEBPACK_IMPORTED_MODULE_3__, _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__, _components__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _regeneratorRuntime() {\n    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n    _regeneratorRuntime = function _regeneratorRuntime() {\n        return exports;\n    };\n    var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n        obj[key] = desc.value;\n    }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key, value) {\n        return Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), obj[key];\n    }\n    try {\n        define({}, \"\");\n    } catch (err) {\n        define = function define(obj, key, value) {\n            return obj[key] = value;\n        };\n    }\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n        return defineProperty(generator, \"_invoke\", {\n            value: makeInvokeMethod(innerFn, self, context)\n        }), generator;\n    }\n    function tryCatch(fn, obj, arg) {\n        try {\n            return {\n                type: \"normal\",\n                arg: fn.call(obj, arg)\n            };\n        } catch (err) {\n            return {\n                type: \"throw\",\n                arg: err\n            };\n        }\n    }\n    exports.wrap = wrap;\n    var ContinueSentinel = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function() {\n        return this;\n    });\n    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    function defineIteratorMethods(prototype) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(method) {\n            define(prototype, method, function(arg) {\n                return this._invoke(method, arg);\n            });\n        });\n    }\n    function AsyncIterator(generator, PromiseImpl) {\n        function invoke(method, arg, resolve, reject) {\n            var record = tryCatch(generator[method], generator, arg);\n            if (\"throw\" !== record.type) {\n                var result = record.arg, value = result.value;\n                return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value) {\n                    invoke(\"next\", value, resolve, reject);\n                }, function(err) {\n                    invoke(\"throw\", err, resolve, reject);\n                }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n                    result.value = unwrapped, resolve(result);\n                }, function(error) {\n                    return invoke(\"throw\", error, resolve, reject);\n                });\n            }\n            reject(record.arg);\n        }\n        var previousPromise;\n        defineProperty(this, \"_invoke\", {\n            value: function value(method, arg) {\n                function callInvokeWithMethodAndArg() {\n                    return new PromiseImpl(function(resolve, reject) {\n                        invoke(method, arg, resolve, reject);\n                    });\n                }\n                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    }\n    function makeInvokeMethod(innerFn, self, context) {\n        var state = \"suspendedStart\";\n        return function(method, arg) {\n            if (\"executing\" === state) throw new Error(\"Generator is already running\");\n            if (\"completed\" === state) {\n                if (\"throw\" === method) throw arg;\n                return {\n                    value: void 0,\n                    done: !0\n                };\n            }\n            for(context.method = method, context.arg = arg;;){\n                var delegate = context.delegate;\n                if (delegate) {\n                    var delegateResult = maybeInvokeDelegate(delegate, context);\n                    if (delegateResult) {\n                        if (delegateResult === ContinueSentinel) continue;\n                        return delegateResult;\n                    }\n                }\n                if (\"next\" === context.method) context.sent = context._sent = context.arg;\n                else if (\"throw\" === context.method) {\n                    if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n                    context.dispatchException(context.arg);\n                } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n                state = \"executing\";\n                var record = tryCatch(innerFn, self, context);\n                if (\"normal\" === record.type) {\n                    if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n                    return {\n                        value: record.arg,\n                        done: context.done\n                    };\n                }\n                \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n            }\n        };\n    }\n    function maybeInvokeDelegate(delegate, context) {\n        var methodName = context.method, method = delegate.iterator[methodName];\n        if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n        var record = tryCatch(method, delegate.iterator, context.arg);\n        if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n        var info = record.arg;\n        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n    }\n    function pushTryEntry(locs) {\n        var entry = {\n            tryLoc: locs[0]\n        };\n        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n        var record = entry.completion || {};\n        record.type = \"normal\", delete record.arg, entry.completion = record;\n    }\n    function Context(tryLocsList) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n    }\n    function values(iterable) {\n        if (iterable || \"\" === iterable) {\n            var iteratorMethod = iterable[iteratorSymbol];\n            if (iteratorMethod) return iteratorMethod.call(iterable);\n            if (\"function\" == typeof iterable.next) return iterable;\n            if (!isNaN(iterable.length)) {\n                var i = -1, next = function next() {\n                    for(; ++i < iterable.length;)if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n                    return next.value = undefined, next.done = !0, next;\n                };\n                return next.next = next;\n            }\n        }\n        throw new TypeError(_typeof(iterable) + \" is not iterable\");\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function(genFun) {\n        var ctor = \"function\" == typeof genFun && genFun.constructor;\n        return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n    }, exports.mark = function(genFun) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n    }, exports.awrap = function(arg) {\n        return {\n            __await: arg\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n        return this;\n    }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n        void 0 === PromiseImpl && (PromiseImpl = Promise);\n        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n        return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n            return result.done ? result.value : iter.next();\n        });\n    }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function() {\n        return this;\n    }), define(Gp, \"toString\", function() {\n        return \"[object Generator]\";\n    }), exports.keys = function(val) {\n        var object = Object(val), keys = [];\n        for(var key in object)keys.push(key);\n        return keys.reverse(), function next() {\n            for(; keys.length;){\n                var key = keys.pop();\n                if (key in object) return next.value = key, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, exports.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(skipTempReset) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for(var name in this)\"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n        },\n        stop: function stop() {\n            this.done = !0;\n            var rootRecord = this.tryEntries[0].completion;\n            if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n            return this.rval;\n        },\n        dispatchException: function dispatchException(exception) {\n            if (this.done) throw exception;\n            var context = this;\n            function handle(loc, caught) {\n                return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n            }\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i], record = entry.completion;\n                if (\"root\" === entry.tryLoc) return handle(\"end\");\n                if (entry.tryLoc <= this.prev) {\n                    var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                    if (hasCatch && hasFinally) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    } else if (hasCatch) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                    } else {\n                        if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function abrupt(type, arg) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                    var finallyEntry = entry;\n                    break;\n                }\n            }\n            finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n            var record = finallyEntry ? finallyEntry.completion : {};\n            return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n        },\n        complete: function complete(record, afterLoc) {\n            if (\"throw\" === record.type) throw record.arg;\n            return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n        },\n        finish: function finish(finallyLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n            }\n        },\n        \"catch\": function _catch(tryLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc === tryLoc) {\n                    var record = entry.completion;\n                    if (\"throw\" === record.type) {\n                        var thrown = record.arg;\n                        resetTryEntry(entry);\n                    }\n                    return thrown;\n                }\n            }\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n            return this.delegate = {\n                iterator: values(iterable),\n                resultName: resultName,\n                nextLoc: nextLoc\n            }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n        }\n    }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n        try {\n            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                if (Object(_i) !== _i) return;\n                _n = !1;\n            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n        } catch (err) {\n            _d = !0, _e = err;\n        } finally{\n            try {\n                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar sendMsgs = [\n    {\n        typeUrl: \"/cosmos.bank.v1beta1.MsgSend\",\n        value: {\n            amount: [\n                {\n                    amount: \"1\",\n                    denom: \"uatom\"\n                }\n            ],\n            fromAddress: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress,\n            toAddress: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress\n        }\n    }\n];\n// const rpcEndpoint = \"https://rpc-cosmoshub.blockapsis.com\";\n// const rpcEndpoint = \"https://cosmos-rpc.quickapi.com:443\";\nvar rpcEndpoint = \"https://rpc.cosmos.directory/cosmoshub\";\nvar auth = _sign_core__WEBPACK_IMPORTED_MODULE_2__.Secp256k1Auth.fromMnemonic(_test_data__WEBPACK_IMPORTED_MODULE_7__.mnemonic);\n_sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__.stargateSigner.on(rpcEndpoint).by(auth);\nvar gasPrice = _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__.stargateSigner.getGasPrice(\"cosmoshub-4\");\nfunction Page() {\n    var _balance$amount, _balance$denom;\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(\"tx\"), _useState2 = _slicedToArray(_useState, 2), modalView = _useState2[0], setModeView = _useState2[1];\n    var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(), _useState4 = _slicedToArray(_useState3, 2), balance = _useState4[0], setBalance = _useState4[1];\n    var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(), _useState6 = _slicedToArray(_useState5, 2), fee = _useState6[0], setFee = _useState6[1];\n    var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(\"--\"), _useState8 = _slicedToArray(_useState7, 2), gas = _useState8[0], setGas = _useState8[1];\n    var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(), _useState10 = _slicedToArray(_useState9, 2), receipt = _useState10[0], setReceipt = _useState10[1];\n    var updateBalance = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(/*#__PURE__*/ _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee() {\n        var query, resp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    query = new _sign_cosmos__WEBPACK_IMPORTED_MODULE_3__.Server(rpcEndpoint);\n                    _context.next = 3;\n                    return query.about(interchain_query_cosmos_bank_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_5__.QueryClientImpl).balance({\n                        address: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress,\n                        denom: \"uatom\"\n                    });\n                case 3:\n                    resp = _context.sent;\n                    setBalance(resp.balance);\n                case 5:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    })), []);\n    var updateFee = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(/*#__PURE__*/ _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee2() {\n        var resp;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while(1)switch(_context2.prev = _context2.next){\n                case 0:\n                    _context2.next = 2;\n                    return _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__.stargateSigner.estimateFee({\n                        msgs: sendMsgs\n                    });\n                case 2:\n                    resp = _context2.sent;\n                    setFee(resp.amount[0]);\n                    setGas(resp.gasLimit.toString());\n                case 5:\n                case \"end\":\n                    return _context2.stop();\n            }\n        }, _callee2);\n    })), []);\n    (0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)(function() {\n        updateBalance();\n    }, []);\n    var openModal = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(function() {\n        setModeView(\"tx\");\n        onOpen();\n        updateFee();\n    }, []);\n    var signAndBroadcast = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(/*#__PURE__*/ _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee3() {\n        var resp;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while(1)switch(_context3.prev = _context3.next){\n                case 0:\n                    setModeView(\"receipt\");\n                    _context3.next = 3;\n                    return _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__.stargateSigner.sign({\n                        msgs: sendMsgs\n                    }).broadcast();\n                case 3:\n                    resp = _context3.sent;\n                    setReceipt(resp);\n                case 5:\n                case \"end\":\n                    return _context3.stop();\n            }\n        }, _callee3);\n    })), []);\n    var _useDisclosure = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.useDisclosure)(), isOpen = _useDisclosure.isOpen, onOpen = _useDisclosure.onOpen, onClose = _useDisclosure.onClose;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Tabs, {\n        variant: \"enclosed\",\n        colorScheme: \"teal\",\n        marginY: 10,\n        marginX: 100,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.TabList, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Tab, {\n                        children: \"MsgSend\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Tab, {\n                        children: \"MsgStake\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Tab, {\n                        children: \"MsgVote\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Tab, {\n                        children: \"MsgIBC\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.TabPanels, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Stack, {\n                                direction: \"row\",\n                                marginTop: 2,\n                                marginBottom: 8,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Code, {\n                                        colorScheme: \"teal\",\n                                        children: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Code, {\n                                        colorScheme: \"yellow\",\n                                        children: \"\".concat((_balance$amount = balance === null || balance === void 0 ? void 0 : balance.amount) !== null && _balance$amount !== void 0 ? _balance$amount : \"--\", \" \").concat((_balance$denom = balance === null || balance === void 0 ? void 0 : balance.denom) !== null && _balance$denom !== void 0 ? _balance$denom : \"\")\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_0__.RepeatIcon, {\n                                        onClick: updateBalance,\n                                        _hover: {\n                                            cursor: \"pointer\"\n                                        },\n                                        color: \"gray\"\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.UnorderedList, {\n                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.ListItem, {\n                                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Stack, {\n                                        direction: \"row\",\n                                        marginTop: 5,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                fontSize: \"l\",\n                                                children: \"Send 1 uatom to self\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                                                colorScheme: \"teal\",\n                                                variant: \"outline\",\n                                                size: \"xs\",\n                                                onClick: openModal,\n                                                children: \"Send\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Modal, {\n                                                isOpen: isOpen,\n                                                onClose: onClose,\n                                                size: \"xl\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.ModalOverlay, {}),\n                                                    modalView === \"tx\" ? /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_components__WEBPACK_IMPORTED_MODULE_8__.ModalTxView, {\n                                                        msgs: sendMsgs,\n                                                        gas: gas,\n                                                        fee: fee,\n                                                        gasPrice: gasPrice,\n                                                        onClick: signAndBroadcast\n                                                    }) : /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_components__WEBPACK_IMPORTED_MODULE_8__.ModalReceiptView, {\n                                                        receipt: receipt\n                                                    })\n                                                ]\n                                            })\n                                        ]\n                                    })\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"p\", {\n                            children: \"MsgStake!\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"p\", {\n                            children: \"MsgVote!\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"p\", {\n                            children: \"MsgIBC!\"\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "../cosmos/node_modules/bech32/dist/index.js":
/*!***************************************************!*\
  !*** ../cosmos/node_modules/bech32/dist/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cosmos/node_modules/bech32/dist/index.js\n");

/***/ }),

/***/ "@loadable/component":
/*!**************************************!*\
  !*** external "@loadable/component" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("@loadable/component");

/***/ }),

/***/ "bn.js":
/*!************************!*\
  !*** external "bn.js" ***!
  \************************/
/***/ ((module) => {

module.exports = require("bn.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "elliptic":
/*!***************************!*\
  !*** external "elliptic" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("elliptic");

/***/ }),

/***/ "interchain-query/cosmos/auth/v1beta1/query.rpc.Query":
/*!***********************************************************************!*\
  !*** external "interchain-query/cosmos/auth/v1beta1/query.rpc.Query" ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/auth/v1beta1/query.rpc.Query");

/***/ }),

/***/ "interchain-query/cosmos/authz/v1beta1/tx":
/*!***********************************************************!*\
  !*** external "interchain-query/cosmos/authz/v1beta1/tx" ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/authz/v1beta1/tx");

/***/ }),

/***/ "interchain-query/cosmos/bank/v1beta1/query.rpc.Query":
/*!***********************************************************************!*\
  !*** external "interchain-query/cosmos/bank/v1beta1/query.rpc.Query" ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/bank/v1beta1/query.rpc.Query");

/***/ }),

/***/ "interchain-query/cosmos/bank/v1beta1/tx":
/*!**********************************************************!*\
  !*** external "interchain-query/cosmos/bank/v1beta1/tx" ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/bank/v1beta1/tx");

/***/ }),

/***/ "interchain-query/cosmos/distribution/v1beta1/tx":
/*!******************************************************************!*\
  !*** external "interchain-query/cosmos/distribution/v1beta1/tx" ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/distribution/v1beta1/tx");

/***/ }),

/***/ "interchain-query/cosmos/feegrant/v1beta1/tx":
/*!**************************************************************!*\
  !*** external "interchain-query/cosmos/feegrant/v1beta1/tx" ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/feegrant/v1beta1/tx");

/***/ }),

/***/ "interchain-query/cosmos/gov/v1/tx":
/*!****************************************************!*\
  !*** external "interchain-query/cosmos/gov/v1/tx" ***!
  \****************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/gov/v1/tx");

/***/ }),

/***/ "interchain-query/cosmos/gov/v1beta1/tx":
/*!*********************************************************!*\
  !*** external "interchain-query/cosmos/gov/v1beta1/tx" ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/gov/v1beta1/tx");

/***/ }),

/***/ "interchain-query/cosmos/group/v1/tx":
/*!******************************************************!*\
  !*** external "interchain-query/cosmos/group/v1/tx" ***!
  \******************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/group/v1/tx");

/***/ }),

/***/ "interchain-query/cosmos/staking/v1beta1/tx":
/*!*************************************************************!*\
  !*** external "interchain-query/cosmos/staking/v1beta1/tx" ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/staking/v1beta1/tx");

/***/ }),

/***/ "interchain-query/cosmos/vesting/v1beta1/tx":
/*!*************************************************************!*\
  !*** external "interchain-query/cosmos/vesting/v1beta1/tx" ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmos/vesting/v1beta1/tx");

/***/ }),

/***/ "interchain-query/cosmwasm/wasm/v1/tx":
/*!*******************************************************!*\
  !*** external "interchain-query/cosmwasm/wasm/v1/tx" ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/cosmwasm/wasm/v1/tx");

/***/ }),

/***/ "interchain-query/ibc/applications/transfer/v1/tx":
/*!*******************************************************************!*\
  !*** external "interchain-query/ibc/applications/transfer/v1/tx" ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/ibc/applications/transfer/v1/tx");

/***/ }),

/***/ "interchain-query/ibc/core/channel/v1/tx":
/*!**********************************************************!*\
  !*** external "interchain-query/ibc/core/channel/v1/tx" ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/ibc/core/channel/v1/tx");

/***/ }),

/***/ "interchain-query/ibc/core/client/v1/tx":
/*!*********************************************************!*\
  !*** external "interchain-query/ibc/core/client/v1/tx" ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/ibc/core/client/v1/tx");

/***/ }),

/***/ "interchain-query/ibc/core/connection/v1/tx":
/*!*************************************************************!*\
  !*** external "interchain-query/ibc/core/connection/v1/tx" ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = require("interchain-query/ibc/core/connection/v1/tx");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "react-json-view":
/*!**********************************!*\
  !*** external "react-json-view" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("react-json-view");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "@chakra-ui/icons":
/*!***********************************!*\
  !*** external "@chakra-ui/icons" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("@chakra-ui/icons");;

/***/ }),

/***/ "@chakra-ui/react":
/*!***********************************!*\
  !*** external "@chakra-ui/react" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("@chakra-ui/react");;

/***/ }),

/***/ "@noble/hashes/hmac":
/*!*************************************!*\
  !*** external "@noble/hashes/hmac" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("@noble/hashes/hmac");;

/***/ }),

/***/ "@noble/hashes/pbkdf2":
/*!***************************************!*\
  !*** external "@noble/hashes/pbkdf2" ***!
  \***************************************/
/***/ ((module) => {

module.exports = import("@noble/hashes/pbkdf2");;

/***/ }),

/***/ "@noble/hashes/ripemd160":
/*!******************************************!*\
  !*** external "@noble/hashes/ripemd160" ***!
  \******************************************/
/***/ ((module) => {

module.exports = import("@noble/hashes/ripemd160");;

/***/ }),

/***/ "@noble/hashes/sha256":
/*!***************************************!*\
  !*** external "@noble/hashes/sha256" ***!
  \***************************************/
/***/ ((module) => {

module.exports = import("@noble/hashes/sha256");;

/***/ }),

/***/ "@noble/hashes/sha512":
/*!***************************************!*\
  !*** external "@noble/hashes/sha512" ***!
  \***************************************/
/***/ ((module) => {

module.exports = import("@noble/hashes/sha512");;

/***/ }),

/***/ "../cosmos/src/config/fee-tokens.json":
/*!********************************************!*\
  !*** ../cosmos/src/config/fee-tokens.json ***!
  \********************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"acre_9052-1":[{"denom":"aacre","fixed_min_gas_price":250000000,"low_gas_price":20000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"agoric-3":[{"denom":"ubld","low_gas_price":0.03,"average_gas_price":0.05,"high_gas_price":0.07},{"denom":"uist","low_gas_price":0.0034,"average_gas_price":0.007,"high_gas_price":0.02}],"aioz_168-1":[{"denom":"attoaioz","fixed_min_gas_price":1000000000,"low_gas_price":1000000000,"average_gas_price":1000000000,"high_gas_price":1500000000}],"akashnet-2":[{"denom":"uakt","fixed_min_gas_price":0}],"Antora":[{"denom":"idep","fixed_min_gas_price":0}],"arabica-9":[{"denom":"utia","fixed_min_gas_price":0}],"archway-1":[{"denom":"aarch","fixed_min_gas_price":900000000000,"low_gas_price":1000000000000,"average_gas_price":1500000000000,"high_gas_price":2000000000000}],"ares-1":[{"denom":"umars","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0,"high_gas_price":0.025}],"arkh":[{"denom":"arkh","fixed_min_gas_price":0.01,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"atlantic-1":[{"denom":"usei","fixed_min_gas_price":0}],"atlantic-2":[{"denom":"usei","fixed_min_gas_price":0}],"axelar-dojo-1":[{"denom":"uaxl","fixed_min_gas_price":0.007,"low_gas_price":0.007,"average_gas_price":0.007,"high_gas_price":0.01}],"axelar-testnet-lisbon-3":[{"denom":"uaxl","low_gas_price":0.007,"average_gas_price":0.007,"high_gas_price":0.01}],"babajaga-1":[{"denom":"uc4e","fixed_min_gas_price":0,"low_gas_price":0.02,"average_gas_price":0.03,"high_gas_price":0.06}],"banksy-testnet-3":[{"denom":"ppica","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0,"high_gas_price":0}],"bbn-test1":[{"denom":"ubbn"}],"beezee-1":[{"denom":"ubze","fixed_min_gas_price":0}],"bitcanna-1":[{"denom":"ubcna","fixed_min_gas_price":0.001,"low_gas_price":0.001,"average_gas_price":0.0025,"high_gas_price":0.01}],"bitcanna-dev-1":[{"denom":"ubcna","fixed_min_gas_price":0.001}],"bitcanna-dev-6":[{"denom":"ubcna","fixed_min_gas_price":0.001}],"bitsong-2b":[{"denom":"ubtsg","fixed_min_gas_price":0,"low_gas_price":3,"average_gas_price":10,"high_gas_price":20}],"blockspacerace-0":[{"denom":"utia","fixed_min_gas_price":0}],"bluzelle-9":[{"denom":"ubnt","fixed_min_gas_price":0.002,"low_gas_price":0.002,"average_gas_price":0.002,"high_gas_price":0.025}],"bostrom":[{"denom":"boot","low_gas_price":0,"average_gas_price":0,"high_gas_price":0.01}],"canine-1":[{"denom":"ujkl","fixed_min_gas_price":0}],"canto_7700-1":[{"denom":"acanto","fixed_min_gas_price":1000000000000,"low_gas_price":1000000000000,"average_gas_price":2000000000000,"high_gas_price":3000000000000}],"carbon-1":[{"denom":"swth","fixed_min_gas_price":0,"low_gas_price":1,"average_gas_price":1,"high_gas_price":1,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"usc","fixed_min_gas_price":0,"low_gas_price":0.0001,"average_gas_price":0.0001,"high_gas_price":0.0001,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"bnb.1.6.773edb","fixed_min_gas_price":0,"low_gas_price":1000000,"average_gas_price":1000000,"high_gas_price":1000000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"bneo.1.14.e2e5f6","fixed_min_gas_price":0,"low_gas_price":0.0015,"average_gas_price":0.0015,"high_gas_price":0.0015,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"busd.1.6.754a80","fixed_min_gas_price":0,"low_gas_price":100000000,"average_gas_price":100000000,"high_gas_price":100000000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"cglp.1.19.1698d3","fixed_min_gas_price":0,"low_gas_price":100000000,"average_gas_price":100000000,"high_gas_price":100000000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"cgt/1","fixed_min_gas_price":0,"low_gas_price":100000000,"average_gas_price":100000000,"high_gas_price":100000000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"eth.1.19.c3b805","fixed_min_gas_price":0,"low_gas_price":100000,"average_gas_price":100000,"high_gas_price":100000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"eth.1.2.942d87","fixed_min_gas_price":0,"low_gas_price":100000,"average_gas_price":100000,"high_gas_price":100000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/07FA7831E1920D0C87C9388F86B0108677F6ED0C9DE7E4063F05ED675192405C","fixed_min_gas_price":0,"low_gas_price":0.0035,"average_gas_price":0.0035,"high_gas_price":0.0035,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/2B58B8C147E8718EECCB3713271DF46DEE8A3A00A27242628604E31C2F370EF5","fixed_min_gas_price":0,"low_gas_price":0.00005,"average_gas_price":0.00005,"high_gas_price":0.00005,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/3552CECB7BCE1891DB6070D37EC6E954C972B1400141308FCD85FD148BD06DE5","fixed_min_gas_price":0,"low_gas_price":0.00032,"average_gas_price":0.00032,"high_gas_price":0.00032,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/662914D0C1CEBCB070C68F061D035E8B10A07C79AB286E7342C85F3BE74612C5","fixed_min_gas_price":0,"low_gas_price":0.00015,"average_gas_price":0.00015,"high_gas_price":0.00015,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/75249A18DEFBEFE55F83B1C70CAD234DF164F174C6BC51682EE92C2C81C18C93","fixed_min_gas_price":0,"low_gas_price":0.00015,"average_gas_price":0.00015,"high_gas_price":0.00015,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/92E974290AF9E2BC3AEEEC35305C8FD76AC5A22A74CF8D91270FDF5A1C41E861","fixed_min_gas_price":0,"low_gas_price":200000000,"average_gas_price":200000000,"high_gas_price":200000000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/A4DB47A9D3CF9A068D454513891B526702455D3EF08FB9EB558C561F9DC2B701","fixed_min_gas_price":0,"low_gas_price":0.00001,"average_gas_price":0.00001,"high_gas_price":0.00001,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/B7864B03E1B9FD4F049243E92ABD691586F682137037A9F3FCA5222815620B3C","fixed_min_gas_price":0,"low_gas_price":0.00001,"average_gas_price":0.00001,"high_gas_price":0.00001,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518","fixed_min_gas_price":0,"low_gas_price":0.00015,"average_gas_price":0.00015,"high_gas_price":0.00015,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"usdc.1.2.343151","fixed_min_gas_price":0,"low_gas_price":0.0001,"average_gas_price":0.0001,"high_gas_price":0.0001,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}},{"denom":"usdc.1.6.53ff75","fixed_min_gas_price":0,"low_gas_price":100000000,"average_gas_price":100000000,"high_gas_price":100000000,"gas_costs":{"cosmos_send":100000000,"ibc_transfer":100000000}}],"cascadia_6102-1":[{"denom":"aCC","fixed_min_gas_price":0,"low_gas_price":7,"average_gas_price":10,"high_gas_price":15}],"centauri-1":[{"denom":"ppica","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0,"high_gas_price":0}],"cerberus-chain-1":[{"denom":"ucrbrus","fixed_min_gas_price":0}],"cheqd-mainnet-1":[{"denom":"ncheq","fixed_min_gas_price":25,"low_gas_price":50,"average_gas_price":75,"high_gas_price":100}],"cheqd-testnet-6":[{"denom":"ncheq","fixed_min_gas_price":25,"low_gas_price":50,"average_gas_price":75,"high_gas_price":100}],"chihuahua-1":[{"denom":"uhuahua","fixed_min_gas_price":0,"low_gas_price":1,"average_gas_price":5,"high_gas_price":10}],"chimba":[{"denom":"ucmba","fixed_min_gas_price":0.25,"low_gas_price":1,"average_gas_price":5,"high_gas_price":10}],"chimba-testnet":[{"denom":"ucmba","fixed_min_gas_price":0.25,"low_gas_price":1,"average_gas_price":5,"high_gas_price":10}],"circulus-1":[{"denom":"umpwr","fixed_min_gas_price":0}],"colosseum-1":[{"denom":"ufct","fixed_min_gas_price":0.1}],"columbus-5":[{"denom":"uluna","low_gas_price":28.325,"average_gas_price":28.325,"high_gas_price":50},{"denom":"usdr","low_gas_price":0.52469,"average_gas_price":0.52469,"high_gas_price":0.52469},{"denom":"uusd","low_gas_price":0.75,"average_gas_price":0.75,"high_gas_price":0.75},{"denom":"ukrw","low_gas_price":850,"average_gas_price":850,"high_gas_price":850},{"denom":"umnt","low_gas_price":2142.855,"average_gas_price":2142.855,"high_gas_price":2142.855},{"denom":"ueur","low_gas_price":0.625,"average_gas_price":0.625,"high_gas_price":0.625},{"denom":"ucny","low_gas_price":4.9,"average_gas_price":4.9,"high_gas_price":4.9},{"denom":"ujpy","low_gas_price":81.85,"average_gas_price":81.85,"high_gas_price":81.85},{"denom":"ugbp","low_gas_price":0.55,"average_gas_price":0.55,"high_gas_price":0.55},{"denom":"uinr","low_gas_price":54.4,"average_gas_price":54.4,"high_gas_price":54.4},{"denom":"ucad","low_gas_price":0.95,"average_gas_price":0.95,"high_gas_price":0.95},{"denom":"uchf","low_gas_price":0.7,"average_gas_price":0.7,"high_gas_price":0.7},{"denom":"uaud","low_gas_price":0.95,"average_gas_price":0.95,"high_gas_price":0.95},{"denom":"usgd","low_gas_price":1,"average_gas_price":1,"high_gas_price":1},{"denom":"uthb","low_gas_price":23.1,"average_gas_price":23.1,"high_gas_price":23.1},{"denom":"usek","low_gas_price":6.25,"average_gas_price":6.25,"high_gas_price":6.25},{"denom":"unok","low_gas_price":6.25,"average_gas_price":6.25,"high_gas_price":6.25},{"denom":"udkk","low_gas_price":4.5,"average_gas_price":4.5,"high_gas_price":4.5},{"denom":"uidr","low_gas_price":10900,"average_gas_price":10900,"high_gas_price":10900},{"denom":"uphp","low_gas_price":38,"average_gas_price":38,"high_gas_price":38},{"denom":"uhkd","low_gas_price":5.85,"average_gas_price":5.85,"high_gas_price":5.85},{"denom":"umyr","low_gas_price":3,"average_gas_price":3,"high_gas_price":3},{"denom":"utwd","low_gas_price":20,"average_gas_price":20,"high_gas_price":20}],"comdex-1":[{"denom":"ucmdx","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0.025,"high_gas_price":0.04}],"commercio-3":[{"denom":"ucommercio"}],"constantine-3":[{"denom":"aconst","low_gas_price":0,"average_gas_price":0.025,"high_gas_price":0.05}],"core-1":[{"denom":"uxprt","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0.025,"high_gas_price":0.04}],"coreum-mainnet-1":[{"denom":"ucore","fixed_min_gas_price":0.03125,"low_gas_price":0.0625,"average_gas_price":0.0625,"high_gas_price":62.5}],"coreum-testnet-1":[{"denom":"utestcore","fixed_min_gas_price":0.03125,"low_gas_price":0.0625,"average_gas_price":0.0625,"high_gas_price":62.5}],"cosmoshub-4":[{"denom":"uatom","fixed_min_gas_price":0,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"crescent-1":[{"denom":"ucre","fixed_min_gas_price":0,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"cronosmainnet_25-1":[{"denom":"basecro"}],"crypto-org-chain-mainnet-1":[{"denom":"basecro","low_gas_price":0.025,"average_gas_price":0.03,"high_gas_price":0.04}],"cudos-1":[{"denom":"acudos","low_gas_price":5000000000000,"average_gas_price":10000000000000,"high_gas_price":20000000000000}],"darchub":[{"denom":"udarc","fixed_min_gas_price":0}],"desmos-mainnet":[{"denom":"udsm","fixed_min_gas_price":0.001,"low_gas_price":0.01,"average_gas_price":0.03,"high_gas_price":0.05}],"devnet-1":[{"denom":"uixo","fixed_min_gas_price":0.015,"low_gas_price":0.015,"average_gas_price":0.025,"high_gas_price":0.04}],"dig-1":[{"denom":"udig","low_gas_price":0.025,"average_gas_price":0.03,"high_gas_price":0.035}],"dimension_37-1":[{"denom":"axpla","fixed_min_gas_price":850000000000}],"dorado-1":[{"denom":"atestfet","low_gas_price":0.025,"average_gas_price":0.025,"high_gas_price":0.035}],"dyson-mainnet-01":[{"denom":"dys","low_gas_price":0.0001,"average_gas_price":0.0002,"high_gas_price":0.0003}],"echelon_3000-3":[{"denom":"aechelon","low_gas_price":10000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"eightball-1":[{"denom":"uebl","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0.025,"high_gas_price":0.04}],"elgafar-1":[{"denom":"ustars","low_gas_price":0.03,"average_gas_price":0.04,"high_gas_price":0.05}],"emoney-3":[{"denom":"ungm","low_gas_price":1,"average_gas_price":1,"high_gas_price":1},{"denom":"eeur","low_gas_price":1,"average_gas_price":1,"high_gas_price":1},{"denom":"echf","low_gas_price":1,"average_gas_price":1,"high_gas_price":1},{"denom":"enok","low_gas_price":1,"average_gas_price":1,"high_gas_price":1},{"denom":"esek","low_gas_price":1,"average_gas_price":1,"high_gas_price":1},{"denom":"edkk","low_gas_price":1,"average_gas_price":1,"high_gas_price":1}],"empowerchain-1":[{"denom":"umpwr","fixed_min_gas_price":0,"low_gas_price":0.025,"average_gas_price":0.025,"high_gas_price":0.03}],"ethos_7003-1":[{"denom":"aRYT"}],"evmos_9000-4":[{"denom":"atevmos","low_gas_price":20000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"evmos_9001-2":[{"denom":"aevmos","fixed_min_gas_price":250000000,"low_gas_price":20000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"exchain-66":[{"denom":"wei","low_gas_price":200000000,"average_gas_price":250000000,"high_gas_price":400000000}],"fetchhub-4":[{"denom":"afet","low_gas_price":0.025,"average_gas_price":0.025,"high_gas_price":0.035}],"fivenet":[{"denom":"usix","fixed_min_gas_price":1.25,"low_gas_price":1.25,"average_gas_price":1.5,"high_gas_price":1.75}],"FUND-MainNet-2":[{"denom":"nund","fixed_min_gas_price":25,"low_gas_price":100,"average_gas_price":200,"high_gas_price":300}],"fxcore":[{"denom":"FX","fixed_min_gas_price":4200000000000,"low_gas_price":400000000000,"average_gas_price":4200000000000,"high_gas_price":500000000000}],"galaxy-1":[{"denom":"uglx","low_gas_price":0.025,"average_gas_price":0.025,"high_gas_price":0.035}],"genesis_29-2":[{"denom":"el1","low_gas_price":51000000000,"average_gas_price":52000000000,"high_gas_price":53000000000}],"gitopia":[{"denom":"ulore","fixed_min_gas_price":0.001,"low_gas_price":0.0012,"average_gas_price":0.0016,"high_gas_price":0.0024}],"gitopia-janus-testnet-2":[{"denom":"utlore","fixed_min_gas_price":0}],"grand-1":[{"denom":"uusdc","fixed_min_gas_price":0,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"gravity-bridge-3":[{"denom":"ugraviton","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0,"high_gas_price":0.035},{"denom":"gravity0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","low_gas_price":0.0002,"average_gas_price":0.0005,"high_gas_price":0.0008},{"denom":"gravity0xdAC17F958D2ee523a2206206994597C13D831ec7","low_gas_price":0.0002,"average_gas_price":0.0005,"high_gas_price":0.0008}],"haqq_11235-1":[{"denom":"aISLM","fixed_min_gas_price":250000000,"low_gas_price":20000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"harpoon-4":[{"denom":"ukuji","fixed_min_gas_price":0}],"higgs-boson-1":[{"denom":"uqwoyn"}],"imversed_5555555-1":[{"denom":"aimv","fixed_min_gas_price":250000000,"low_gas_price":20000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"imversed-test-1":[{"denom":"nimv","fixed_min_gas_price":0.001}],"injective-1":[{"denom":"inj","fixed_min_gas_price":500000000,"low_gas_price":500000000,"average_gas_price":700000000,"high_gas_price":900000000}],"injective-888":[{"denom":"inj","fixed_min_gas_price":500000000,"low_gas_price":500000000,"average_gas_price":700000000,"high_gas_price":900000000}],"iov-mainnet-ibc":[{"denom":"uiov","low_gas_price":1,"average_gas_price":2,"high_gas_price":3}],"irishub-1":[{"denom":"uiris","low_gas_price":0.2,"average_gas_price":0.3,"high_gas_price":0.4}],"ixo-5":[{"denom":"uixo","fixed_min_gas_price":0.015,"low_gas_price":0.015,"average_gas_price":0.025,"high_gas_price":0.04}],"jackal-1":[{"denom":"ujkl","fixed_min_gas_price":0,"low_gas_price":0.002,"average_gas_price":0.002,"high_gas_price":0.02}],"jagrat":[{"denom":"uhid","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0.02,"high_gas_price":0.05}],"juno-1":[{"denom":"ujuno","fixed_min_gas_price":0.075,"low_gas_price":0.075,"average_gas_price":0.1,"high_gas_price":0.125},{"denom":"ibc/C4CFF46FD6DE35CA4CF4CE031E643C8FDC9BA4B99AE598E9B0ED98FE3A2319F9","fixed_min_gas_price":0.003,"low_gas_price":0.003,"average_gas_price":0.0035,"high_gas_price":0.004}],"kaiyo-1":[{"denom":"ukuji","fixed_min_gas_price":0.00119,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"kaon-1":[{"denom":"tkyve","fixed_min_gas_price":0.02,"low_gas_price":0.02,"average_gas_price":0.03,"high_gas_price":0.06}],"kava_2222-10":[{"denom":"ukava","low_gas_price":0.05,"average_gas_price":0.1,"high_gas_price":0.25}],"kichain-2":[{"denom":"uxki","fixed_min_gas_price":0.025,"low_gas_price":0.025,"average_gas_price":0.03,"high_gas_price":0.05}],"kichain-t-4":[{"denom":"utki","fixed_min_gas_price":0.025}],"kitten-04":[{"denom":"uccat","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":1,"high_gas_price":2}],"korellia":[{"denom":"tkyve","fixed_min_gas_price":0}],"kyve-1":[{"denom":"ukyve","fixed_min_gas_price":0.02}],"lambda_92000-1":[{"denom":"ulamb","low_gas_price":10000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"laozi-mainnet":[{"denom":"uband"}],"lava-testnet-1":[{"denom":"ulava","fixed_min_gas_price":0.0025,"low_gas_price":0.0025,"average_gas_price":0.025,"high_gas_price":0.04}],"likecoin-mainnet-2":[{"denom":"nanolike","fixed_min_gas_price":0,"low_gas_price":1,"average_gas_price":10,"high_gas_price":1000}],"logos_7002-1":[{"denom":"aLYT"}],"loyal-main-02":[{"denom":"ulyl","fixed_min_gas_price":0}],"lum-network-1":[{"denom":"ulum","fixed_min_gas_price":0.001,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.04}],"LumenX":[{"denom":"ulumen","fixed_min_gas_price":0.0025,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"lumenx-test":[{"denom":"ulumen","fixed_min_gas_price":0.0025,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"mainnet":[{"denom":"umis","fixed_min_gas_price":0}],"mainnet-3":[{"denom":"udec","fixed_min_gas_price":0.025}],"malaga-420":[{"denom":"umlg","low_gas_price":0.03,"average_gas_price":0.04,"high_gas_price":0.05}],"mantle-1":[{"denom":"umntl","low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.04}],"mars-1":[{"denom":"umars","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0,"high_gas_price":0.01}],"medasdigital-1":[{"denom":"umedas","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0.0001,"high_gas_price":0.00025}],"meme-1":[{"denom":"umeme","fixed_min_gas_price":0.025,"low_gas_price":0.025,"average_gas_price":0.035,"high_gas_price":0.045}],"microtick-1":[{"denom":"utick"}],"migaloo-1":[{"denom":"uwhale","fixed_min_gas_price":0.25,"low_gas_price":0.25,"average_gas_price":0.5,"high_gas_price":0.75}],"mocha-3":[{"denom":"utia","fixed_min_gas_price":0}],"morocco-1":[{"denom":"ucgas","fixed_min_gas_price":0.001}],"mythos_7001-1":[{"denom":"aMYT"}],"narwhal-1":[{"denom":"uwhale","fixed_min_gas_price":0.25,"low_gas_price":0.25,"average_gas_price":0.5,"high_gas_price":0.75}],"neutron-1":[{"denom":"untrn","low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.05}],"noble-1":[{"denom":"uusdc","fixed_min_gas_price":0,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03},{"denom":"ibc/EF48E6B1A1A19F47ECAEA62F5670C37C0580E86A9E88498B7E393EB6F49F33C0","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0.002,"high_gas_price":0.003}],"nois-1":[{"denom":"unois","fixed_min_gas_price":0,"low_gas_price":0.05,"average_gas_price":0.05,"high_gas_price":0.1}],"nois-testnet-005":[{"denom":"unois","fixed_min_gas_price":0,"low_gas_price":0.05,"average_gas_price":0.05,"high_gas_price":0.1}],"nyx":[{"denom":"unym","fixed_min_gas_price":0.25}],"octa":[{"denom":"uocta","fixed_min_gas_price":0}],"odin-mainnet-freya":[{"denom":"loki","fixed_min_gas_price":0.0125,"low_gas_price":0.025,"average_gas_price":0.05,"high_gas_price":0.06}],"okp4-nemeton-1":[{"denom":"uknow","fixed_min_gas_price":0,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"omniflixhub-1":[{"denom":"uflix","fixed_min_gas_price":0,"low_gas_price":0.001,"average_gas_price":0.0025,"high_gas_price":0.025}],"onomy-mainnet-1":[{"denom":"anom","low_gas_price":0,"average_gas_price":0.03,"high_gas_price":0.06}],"Oraichain":[{"denom":"orai","fixed_min_gas_price":0,"low_gas_price":0.003,"average_gas_price":0.005,"high_gas_price":0.007}],"osmo-test-4":[{"denom":"uosmo","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0.025,"high_gas_price":0.04}],"osmo-test-5":[{"denom":"uosmo","fixed_min_gas_price":0,"low_gas_price":0.0025,"average_gas_price":0.025,"high_gas_price":0.04}],"osmosis-1":[{"denom":"uosmo","fixed_min_gas_price":0.0025,"low_gas_price":0.0025,"average_gas_price":0.025,"high_gas_price":0.04}],"panacea-3":[{"denom":"umed","fixed_min_gas_price":5,"low_gas_price":5,"average_gas_price":7,"high_gas_price":9}],"pandora-8":[{"denom":"uixo","fixed_min_gas_price":0.015,"low_gas_price":0.015,"average_gas_price":0.025,"high_gas_price":0.04}],"passage-1":[{"denom":"upasg","fixed_min_gas_price":0}],"perun-1":[{"denom":"uc4e","fixed_min_gas_price":0}],"phoenix-1":[{"denom":"uluna","fixed_min_gas_price":0.0125,"low_gas_price":0.0125,"average_gas_price":0.015,"high_gas_price":0.04}],"pio-mainnet-1":[{"denom":"nhash","fixed_min_gas_price":1905,"low_gas_price":1905,"average_gas_price":2100,"high_gas_price":2500}],"pion-1":[{"denom":"untrn","low_gas_price":0,"average_gas_price":0.025,"high_gas_price":0.05}],"pirin-1":[{"denom":"unls","low_gas_price":0,"average_gas_price":0.025,"high_gas_price":0.05}],"pisco-1":[{"denom":"uluna","fixed_min_gas_price":0.0125,"low_gas_price":0.0125,"average_gas_price":0.015,"high_gas_price":0.04}],"planq_7070-2":[{"denom":"aplanq","fixed_min_gas_price":20000000000,"low_gas_price":30000000000,"average_gas_price":35000000000,"high_gas_price":40000000000}],"point_10687-1":[{"denom":"apoint","low_gas_price":5000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"pulsar-2":[{"denom":"uscrt","fixed_min_gas_price":0.1}],"quasar-1":[{"denom":"ibc/0471F1C4E7AFD3F07702BEF6DC365268D64570F7C1FDC98EA6098DD6DE59817B","fixed_min_gas_price":0.01,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03},{"denom":"ibc/FA0006F056DB6719B8C16C551FC392B62F5729978FC0B125AC9A432DBB2AA1A5","fixed_min_gas_price":0.01,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03},{"denom":"ibc/FA7775734CC73176B7425910DE001A1D2AD9B6D9E93129A5D0750EAD13E4E63A","fixed_min_gas_price":0.01,"low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.03}],"quicksilver-2":[{"denom":"uqck","fixed_min_gas_price":0.0001,"low_gas_price":0.0001,"average_gas_price":0.0001,"high_gas_price":0.00025}],"qwoyn-1":[{"denom":"uqwoyn"}],"realionetwork_3301-1":[{"denom":"ario","fixed_min_gas_price":1000000000,"low_gas_price":4000000000,"average_gas_price":5000000000,"high_gas_price":8000000000}],"reb_1111-1":[{"denom":"arebus","fixed_min_gas_price":0}],"regen-1":[{"denom":"uregen","low_gas_price":0.015,"average_gas_price":0.025,"high_gas_price":0.04}],"rhye-1":[{"denom":"uqck","low_gas_price":0.0001,"average_gas_price":0.0001,"high_gas_price":0.00025}],"rila-1":[{"denom":"unls","low_gas_price":0.01,"average_gas_price":0.025,"high_gas_price":0.05}],"saage-internal-testnet-1.3":[{"denom":"usaage","fixed_min_gas_price":0}],"sandbox-01":[{"denom":"uakt","fixed_min_gas_price":0,"low_gas_price":0.025,"average_gas_price":0.025,"high_gas_price":0.04}],"secret-4":[{"denom":"uscrt","fixed_min_gas_price":0.0125,"low_gas_price":0.0125,"average_gas_price":0.1,"high_gas_price":0.25}],"sei-devnet-3":[{"denom":"usei","fixed_min_gas_price":0}],"sentinelhub-2":[{"denom":"udvpn","low_gas_price":0.1,"average_gas_price":0.25,"high_gas_price":0.4}],"ShareRing-VoyagerNet":[{"denom":"nshr","fixed_min_gas_price":0,"low_gas_price":2000,"average_gas_price":3000,"high_gas_price":4000}],"shentu-2.2":[{"denom":"uctk"}],"sifchain-1":[{"denom":"rowan","low_gas_price":1000000000000,"average_gas_price":1500000000000,"high_gas_price":2000000000000}],"sommelier-3":[{"denom":"usomm"}],"source-testnet":[{"denom":"usource","low_gas_price":0.03,"average_gas_price":0.04,"high_gas_price":0.05}],"stafihub-1":[{"denom":"ufis","fixed_min_gas_price":0}],"stargaze-1":[{"denom":"ustars","fixed_min_gas_price":1,"low_gas_price":1,"average_gas_price":1.1,"high_gas_price":1.2}],"stateset-1-testnet":[{"denom":"ustate","fixed_min_gas_price":0}],"stride-1":[{"denom":"ustrd","fixed_min_gas_price":0,"low_gas_price":0,"average_gas_price":0,"high_gas_price":0.04}],"stride-testnet-1":[{"denom":"ustrd","fixed_min_gas_price":0}],"tenet_1559-1":[{"denom":"atenet","fixed_min_gas_price":250000000,"low_gas_price":20000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"teritori-1":[{"denom":"utori","low_gas_price":0,"average_gas_price":0.25,"high_gas_price":0.5}],"test-core-1":[{"denom":"uxprt","fixed_min_gas_price":0}],"test-core-2":[{"denom":"uxprt","fixed_min_gas_price":0}],"testnet-1":[{"denom":"uwahax","low_gas_price":0.0025,"average_gas_price":0.0025,"high_gas_price":0.0024}],"tgrade-mainnet-1":[{"denom":"utgd","fixed_min_gas_price":0.05,"low_gas_price":0.05,"average_gas_price":0.075,"high_gas_price":0.1}],"theta-testnet-001":[{"denom":"uatom","fixed_min_gas_price":0.0025}],"titan-1":[{"denom":"uatolo","low_gas_price":0.025,"average_gas_price":0.025,"high_gas_price":0.035}],"umee-1":[{"denom":"uumee","fixed_min_gas_price":0.1,"low_gas_price":0.1,"average_gas_price":0.12,"high_gas_price":0.2}],"uni-6":[{"denom":"ujunox","low_gas_price":0.003,"average_gas_price":0.0045,"high_gas_price":0.006}],"ununifi-beta-v1":[{"denom":"uguu","fixed_min_gas_price":0.0025,"low_gas_price":0.0025,"average_gas_price":0.025,"high_gas_price":0.04}],"uptick_117-1":[{"denom":"auptick","fixed_min_gas_price":10000000000,"low_gas_price":10000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"uptick_7000-2":[{"denom":"auptick","low_gas_price":0,"average_gas_price":0,"high_gas_price":0}],"vidulum-1":[{"denom":"uvdl","fixed_min_gas_price":0}],"vince_1903-1":[{"denom":"avce","fixed_min_gas_price":250000000,"low_gas_price":10000000000,"average_gas_price":25000000000,"high_gas_price":40000000000}],"xstaxy-1":[{"denom":"uaura"}]}');

/***/ }),

/***/ "../cosmos/src/config/prefix.json":
/*!****************************************!*\
  !*** ../cosmos/src/config/prefix.json ***!
  \****************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"acre_9052-1":"acre","agoric-3":"agoric","aioz_168-1":"aioz","akashnet-2":"akash","Antora":"idep","arabica-9":"celestia","archway-1":"archway","ares-1":"mars","arkh":"arkh","athena-4":"terp","atlantic-1":"sei","atlantic-2":"sei","axelar-dojo-1":"axelar","axelar-testnet-lisbon-3":"axelar","babajaga-1":"c4e","banksy-testnet-3":"centauri","bbn-test1":"bbn","beezee-1":"bze","bitcanna-1":"bcna","bitcanna-dev-1":"bcna","bitcanna-dev-6":"bcna","bitsong-2b":"bitsong","blockspacerace-0":"celestia","bluzelle-9":"bluzelle","bostrom":"bostrom","canine-1":"jkl","canto_7700-1":"canto","carbon-1":"swth","cascadia_6102-1":"cascadia","centauri-1":"centauri","cerberus-chain-1":"cerberus","cheqd-mainnet-1":"cheqd","cheqd-testnet-6":"cheqd","chihuahua-1":"chihuahua","chimba":"chimba","chimba-testnet":"chimba","circulus-1":"empower","colosseum-1":"firma","columbus-5":"terra","comdex-1":"comdex","commercio-3":"did:com:","constantine-3":"archway","core-1":"persistence","coreum-mainnet-1":"core","coreum-testnet-1":"testcore","cosmoshub-4":"cosmos","crescent-1":"cre","cronosmainnet_25-1":"crc","crypto-org-chain-mainnet-1":"cro","cudos-1":"cudos","cudos-testnet-public-3":"cudos","darchub":"darc","desmos-mainnet":"desmos","devnet-1":"ixo","dig-1":"dig","dimension_37-1":"xpla","dorado-1":"fetch","dyson-mainnet-01":"dys","echelon_3000-3":"echelon","eightball-1":"8ball","elgafar-1":"stars","elystestnet-1":"elys","emoney-3":"emoney","empowerchain-1":"empower","ethos_7003-1":"ethos","evmos_9000-4":"evmos","evmos_9001-2":"evmos","exchain-66":"ex","fetchhub-4":"fetch","fivenet":"6x","FUND-MainNet-2":"und","fxcore":"fx","galaxy-1":"galaxy","genesis_29-2":"genesis","gitopia":"gitopia","gitopia-janus-testnet-2":"gitopia","grand-1":"noble","gravity-bridge-3":"gravity","haqq_11235-1":"haqq","harpoon-4":"kujira","higgs-boson-1":"qwoyn","imversed_5555555-1":"imv","imversed-test-1":"imv","injective-1":"inj","injective-888":"inj","iov-mainnet-ibc":"star","irishub-1":"iaa","ixo-5":"ixo","jackal-1":"jkl","jagrat":"hid","juno-1":"juno","kaiyo-1":"kujira","kaon-1":"kyve","kava_2222-10":"kava","kichain-2":"ki","kichain-t-4":"tki","kitten-04":"ccat","korellia":"kyve","kyve-1":"kyve","lambda_92000-1":"lamb","laozi-mainnet":"band","lava-testnet-1":"lava@","likecoin-mainnet-2":"like","logos_7002-1":"logos","loyal-main-02":"loyal","lum-network-1":"lum","LumenX":"lumen","lumenx-test":"lumen","mainnet":"mises","mainnet-3":"decentr","malaga-420":"wasm","mantle-1":"mantle","mars-1":"mars","mayachain-mainnet-v1":"maya","medasdigital-1":"medas","meme-1":"meme","microtick-1":"micro","migaloo-1":"migaloo","mocha-3":"celestia","morocco-1":"terp","mythos_7001-1":"mythos","narwhal-1":"migaloo","neutron-1":"neutron","noble-1":"noble","nois-1":"nois","nois-testnet-005":"nois","nomic-stakenet-3":"nomic","nyx":"n","octa":"octa","odin-mainnet-freya":"odin","okp4-nemeton-1":"okp4","omniflixhub-1":"omniflix","onomy-mainnet-1":"onomy","Oraichain":"orai","osmo-test-4":"osmo","osmo-test-5":"osmo","osmosis-1":"osmo","panacea-3":"panacea","pandora-8":"ixo","passage-1":"pasg","perun-1":"c4e","phoenix-1":"terra","pio-mainnet-1":"pb","pion-1":"neutron","pirin-1":"nolus","pisco-1":"terra","planq_7070-2":"plq","point_10687-1":"point","pulsar-2":"secret","qsr-questnet-04":"quasar","quasar-1":"quasar","quicksilver-2":"quick","qwoyn-1":"qwoyn","realionetwork_3301-1":"realio","reb_1111-1":"rebus","regen-1":"regen","rhye-1":"quick","rila-1":"nolus","saage-internal-testnet-1.3":"saage","sandbox-01":"akash","secret-4":"secret","sei-devnet-3":"sei","sentinelhub-2":"sent","ShareRing-VoyagerNet":"shareledger","shentu-2.2":"certik","sifchain-1":"sif","sommelier-3":"somm","source-testnet":"source","stafihub-1":"stafi","stargaze-1":"stars","stateset-1-testnet":"stateset","stride-1":"stride","stride-testnet-1":"stride","tenet_1559-1":"tenet","teritori-1":"tori","test-core-1":"persistence","test-core-2":"persistence","testnet-1":"wavehash","tgrade-mainnet-1":"tgrade","theta-testnet-001":"cosmos","thorchain-mainnet-v1":"thor","titan-1":"rizon","ulas":"ulas","umee-1":"umee","uni-6":"juno","ununifi-beta-v1":"ununifi","uptick_117-1":"uptick","uptick_7000-2":"uptick","vidulum-1":"vdl","vince_1903-1":"vce","xstaxy-1":"aura"}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();