"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Page; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_instanceof_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/src/_instanceof.mjs */ \"../../node_modules/@swc/helpers/src/_instanceof.mjs\");\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @chakra-ui/icons */ \"../../node_modules/@chakra-ui/icons/dist/index.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/react */ \"../../node_modules/@chakra-ui/react/dist/index.mjs\");\n/* harmony import */ var _loadable_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @loadable/component */ \"../../node_modules/@loadable/component/dist/loadable.esm.js\");\n/* harmony import */ var _sign_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sign/core */ \"../core/index.ts\");\n/* harmony import */ var _sign_cosmos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sign/cosmos */ \"../cosmos/index.ts\");\n/* harmony import */ var _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sign/cosmos-const */ \"../cosmos-const/index.ts\");\n/* harmony import */ var interchain_query_cosmos_bank_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! interchain-query/cosmos/bank/v1beta1/query.rpc.Query */ \"../../node_modules/interchain-query/cosmos/bank/v1beta1/query.rpc.Query.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _test_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../test-data */ \"../../test-data.ts\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ \"../../node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__);\n\nvar _s = $RefreshSig$();\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function _typeof(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _regeneratorRuntime() {\n    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n    var define = function define(obj, key, value) {\n        return Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), obj[key];\n    };\n    var wrap = function wrap(innerFn, outerFn, self, tryLocsList) {\n        var protoGenerator = outerFn && (0,_swc_helpers_src_instanceof_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(outerFn.prototype, Generator) ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n        return defineProperty(generator, \"_invoke\", {\n            value: makeInvokeMethod(innerFn, self, context)\n        }), generator;\n    };\n    var tryCatch = function tryCatch(fn, obj, arg) {\n        try {\n            return {\n                type: \"normal\",\n                arg: fn.call(obj, arg)\n            };\n        } catch (err) {\n            return {\n                type: \"throw\",\n                arg: err\n            };\n        }\n    };\n    var Generator = function Generator() {};\n    var GeneratorFunction = function GeneratorFunction() {};\n    var GeneratorFunctionPrototype = function GeneratorFunctionPrototype() {};\n    var defineIteratorMethods = function defineIteratorMethods(prototype) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(method) {\n            define(prototype, method, function(arg) {\n                return this._invoke(method, arg);\n            });\n        });\n    };\n    var AsyncIterator = function AsyncIterator(generator, PromiseImpl) {\n        function invoke(method, arg, resolve, reject) {\n            var record = tryCatch(generator[method], generator, arg);\n            if (\"throw\" !== record.type) {\n                var result = record.arg, value = result.value;\n                return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value) {\n                    invoke(\"next\", value, resolve, reject);\n                }, function(err) {\n                    invoke(\"throw\", err, resolve, reject);\n                }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n                    result.value = unwrapped, resolve(result);\n                }, function(error) {\n                    return invoke(\"throw\", error, resolve, reject);\n                });\n            }\n            reject(record.arg);\n        }\n        var previousPromise;\n        defineProperty(this, \"_invoke\", {\n            value: function value(method, arg) {\n                function callInvokeWithMethodAndArg() {\n                    return new PromiseImpl(function(resolve, reject) {\n                        invoke(method, arg, resolve, reject);\n                    });\n                }\n                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    };\n    var makeInvokeMethod = function makeInvokeMethod(innerFn, self, context) {\n        var state = \"suspendedStart\";\n        return function(method, arg) {\n            if (\"executing\" === state) throw new Error(\"Generator is already running\");\n            if (\"completed\" === state) {\n                if (\"throw\" === method) throw arg;\n                return {\n                    value: void 0,\n                    done: !0\n                };\n            }\n            for(context.method = method, context.arg = arg;;){\n                var delegate = context.delegate;\n                if (delegate) {\n                    var delegateResult = maybeInvokeDelegate(delegate, context);\n                    if (delegateResult) {\n                        if (delegateResult === ContinueSentinel) continue;\n                        return delegateResult;\n                    }\n                }\n                if (\"next\" === context.method) context.sent = context._sent = context.arg;\n                else if (\"throw\" === context.method) {\n                    if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n                    context.dispatchException(context.arg);\n                } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n                state = \"executing\";\n                var record = tryCatch(innerFn, self, context);\n                if (\"normal\" === record.type) {\n                    if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n                    return {\n                        value: record.arg,\n                        done: context.done\n                    };\n                }\n                \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n            }\n        };\n    };\n    var pushTryEntry = function pushTryEntry(locs) {\n        var entry = {\n            tryLoc: locs[0]\n        };\n        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n    };\n    var resetTryEntry = function resetTryEntry(entry) {\n        var record = entry.completion || {};\n        record.type = \"normal\", delete record.arg, entry.completion = record;\n    };\n    var Context = function Context(tryLocsList) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n    };\n    var values = function values(iterable) {\n        if (iterable || \"\" === iterable) {\n            var iteratorMethod = iterable[iteratorSymbol];\n            if (iteratorMethod) return iteratorMethod.call(iterable);\n            if (\"function\" == typeof iterable.next) return iterable;\n            if (!isNaN(iterable.length)) {\n                var i = -1, next = function next() {\n                    for(; ++i < iterable.length;)if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n                    return next.value = undefined, next.done = !0, next;\n                };\n                return next.next = next;\n            }\n        }\n        throw new TypeError(_typeof(iterable) + \" is not iterable\");\n    };\n    _regeneratorRuntime = function _regeneratorRuntime() {\n        return exports;\n    };\n    var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n        obj[key] = desc.value;\n    }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    try {\n        define({}, \"\");\n    } catch (err) {\n        define = function define(obj, key, value) {\n            return obj[key] = value;\n        };\n    }\n    exports.wrap = wrap;\n    var ContinueSentinel = {};\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function() {\n        return this;\n    });\n    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    function maybeInvokeDelegate(delegate, context) {\n        var methodName = context.method, method = delegate.iterator[methodName];\n        if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n        var record = tryCatch(method, delegate.iterator, context.arg);\n        if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n        var info = record.arg;\n        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function(genFun) {\n        var ctor = \"function\" == typeof genFun && genFun.constructor;\n        return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n    }, exports.mark = function(genFun) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n    }, exports.awrap = function(arg) {\n        return {\n            __await: arg\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n        return this;\n    }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n        void 0 === PromiseImpl && (PromiseImpl = Promise);\n        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n        return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n            return result.done ? result.value : iter.next();\n        });\n    }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function() {\n        return this;\n    }), define(Gp, \"toString\", function() {\n        return \"[object Generator]\";\n    }), exports.keys = function(val) {\n        var object = Object(val), keys = [];\n        for(var key in object)keys.push(key);\n        return keys.reverse(), function next() {\n            for(; keys.length;){\n                var key = keys.pop();\n                if (key in object) return next.value = key, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, exports.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(skipTempReset) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for(var name in this)\"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n        },\n        stop: function stop() {\n            this.done = !0;\n            var rootRecord = this.tryEntries[0].completion;\n            if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n            return this.rval;\n        },\n        dispatchException: function dispatchException(exception) {\n            var handle = function handle(loc, caught) {\n                return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n            };\n            if (this.done) throw exception;\n            var context = this;\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i], record = entry.completion;\n                if (\"root\" === entry.tryLoc) return handle(\"end\");\n                if (entry.tryLoc <= this.prev) {\n                    var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                    if (hasCatch && hasFinally) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    } else if (hasCatch) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                    } else {\n                        if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function abrupt(type, arg) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                    var finallyEntry = entry;\n                    break;\n                }\n            }\n            finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n            var record = finallyEntry ? finallyEntry.completion : {};\n            return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n        },\n        complete: function complete(record, afterLoc) {\n            if (\"throw\" === record.type) throw record.arg;\n            return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n        },\n        finish: function finish(finallyLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n            }\n        },\n        \"catch\": function _catch(tryLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc === tryLoc) {\n                    var record = entry.completion;\n                    if (\"throw\" === record.type) {\n                        var thrown = record.arg;\n                        resetTryEntry(entry);\n                    }\n                    return thrown;\n                }\n            }\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n            return this.delegate = {\n                iterator: values(iterable),\n                resultName: resultName,\n                nextLoc: nextLoc\n            }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n        }\n    }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n        try {\n            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                if (Object(_i) !== _i) return;\n                _n = !1;\n            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n        } catch (err) {\n            _d = !0, _e = err;\n        } finally{\n            try {\n                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar ReactJson = (0,_loadable_component__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_c = function _c() {\n    return __webpack_require__.e(/*! import() */ \"node_modules_react-json-view_dist_main_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! react-json-view */ \"../../node_modules/react-json-view/dist/main.js\", 23));\n});\n_c1 = ReactJson;\nvar sendMsgs = [\n    {\n        typeUrl: \"/cosmos.bank.v1beta1.MsgSend\",\n        value: {\n            amount: [\n                {\n                    amount: \"1000\",\n                    denom: \"uatom\"\n                }\n            ],\n            fromAddress: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress,\n            toAddress: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress\n        }\n    }\n];\nvar auth = _sign_core__WEBPACK_IMPORTED_MODULE_2__.Secp256k1Auth.fromMnemonic(_test_data__WEBPACK_IMPORTED_MODULE_7__.mnemonic);\n_sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__.stargateSigner.on(_test_data__WEBPACK_IMPORTED_MODULE_7__.rpcEndpoint).by(auth);\nvar gasPrice = _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__.stargateSigner.getGasPrice(\"cosmoshub-4\");\nfunction Page() {\n    _s();\n    var _balance$amount, _balance$denom, _fee$amount, _fee$denom;\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(), _useState2 = _slicedToArray(_useState, 2), balance = _useState2[0], setBalance = _useState2[1];\n    var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(), _useState4 = _slicedToArray(_useState3, 2), fee = _useState4[0], setFee = _useState4[1];\n    var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(\"--\"), _useState6 = _slicedToArray(_useState5, 2), gas = _useState6[0], setGas = _useState6[1];\n    var updateAmount = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(/*#__PURE__*/ _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee() {\n        var query, resp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    query = new _sign_cosmos__WEBPACK_IMPORTED_MODULE_3__.Query(_test_data__WEBPACK_IMPORTED_MODULE_7__.rpcEndpoint);\n                    _context.next = 3;\n                    return query.about(interchain_query_cosmos_bank_v1beta1_query_rpc_Query__WEBPACK_IMPORTED_MODULE_5__.QueryClientImpl).balance({\n                        address: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress,\n                        denom: \"uatom\"\n                    });\n                case 3:\n                    resp = _context.sent;\n                    setBalance(resp.balance);\n                case 5:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    })), []);\n    var updateFee = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(/*#__PURE__*/ _asyncToGenerator(/*#__PURE__*/ _regeneratorRuntime().mark(function _callee2() {\n        var resp;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while(1)switch(_context2.prev = _context2.next){\n                case 0:\n                    _context2.next = 2;\n                    return _sign_cosmos_const__WEBPACK_IMPORTED_MODULE_4__.stargateSigner.estimateFee({\n                        msgs: sendMsgs\n                    });\n                case 2:\n                    resp = _context2.sent;\n                    setFee(resp.amount[0]);\n                    setGas(resp.gasLimit.toString());\n                case 5:\n                case \"end\":\n                    return _context2.stop();\n            }\n        }, _callee2);\n    })), []);\n    (0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)(function() {\n        updateAmount();\n    }, []);\n    var onClick = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(function() {\n        onOpen();\n        updateFee();\n    }, []);\n    var _useDisclosure = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.useDisclosure)(), isOpen = _useDisclosure.isOpen, onOpen = _useDisclosure.onOpen, onClose = _useDisclosure.onClose;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Tabs, {\n        variant: \"enclosed\",\n        colorScheme: \"teal\",\n        marginY: 10,\n        marginX: 100,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.TabList, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Tab, {\n                        children: \"MsgSend\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Tab, {\n                        children: \"MsgStake\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Tab, {\n                        children: \"MsgVote\"\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Tab, {\n                        children: \"MsgIBC\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.TabPanels, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.TabPanel, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Stack, {\n                                direction: \"row\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Code, {\n                                        colorScheme: \"teal\",\n                                        children: _test_data__WEBPACK_IMPORTED_MODULE_7__.cosmoshubAddress\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Code, {\n                                        colorScheme: \"yellow\",\n                                        children: \"\".concat((_balance$amount = balance === null || balance === void 0 ? void 0 : balance.amount) !== null && _balance$amount !== void 0 ? _balance$amount : \"--\", \" \").concat((_balance$denom = balance === null || balance === void 0 ? void 0 : balance.denom) !== null && _balance$denom !== void 0 ? _balance$denom : \"\")\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.UnorderedList, {\n                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.ListItem, {\n                                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Stack, {\n                                        direction: \"row\",\n                                        marginTop: 5,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Text, {\n                                                fontSize: \"l\",\n                                                children: \"Send 1 uatom to self\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Button, {\n                                                colorScheme: \"teal\",\n                                                variant: \"outline\",\n                                                size: \"xs\",\n                                                onClick: onClick,\n                                                children: \"Send\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Modal, {\n                                                isOpen: isOpen,\n                                                onClose: onClose,\n                                                size: \"xl\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.ModalOverlay, {}),\n                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.ModalContent, {\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.ModalHeader, {\n                                                                children: \"Transaction\"\n                                                            }),\n                                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.ModalCloseButton, {}),\n                                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.ModalBody, {\n                                                                children: [\n                                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Heading, {\n                                                                        as: \"h6\",\n                                                                        size: \"xs\",\n                                                                        marginBottom: 5,\n                                                                        children: \"Messages\"\n                                                                    }),\n                                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(ReactJson, {\n                                                                        src: sendMsgs,\n                                                                        iconStyle: \"square\",\n                                                                        displayDataTypes: false,\n                                                                        enableClipboard: false,\n                                                                        displayObjectSize: false,\n                                                                        collapseStringsAfterLength: 60\n                                                                    }),\n                                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Heading, {\n                                                                        as: \"h6\",\n                                                                        size: \"xs\",\n                                                                        marginY: 5,\n                                                                        children: \"Estimated Fee\"\n                                                                    }),\n                                                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Stack, {\n                                                                        direction: \"row\",\n                                                                        children: [\n                                                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Code, {\n                                                                                colorScheme: \"green\",\n                                                                                children: \"\".concat(gas, \" gas\")\n                                                                            }),\n                                                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Code, {\n                                                                                colorScheme: \"yellow\",\n                                                                                children: \"~ \".concat((_fee$amount = fee === null || fee === void 0 ? void 0 : fee.amount) !== null && _fee$amount !== void 0 ? _fee$amount : \"--\", \" \").concat((_fee$denom = fee === null || fee === void 0 ? void 0 : fee.denom) !== null && _fee$denom !== void 0 ? _fee$denom : \"\")\n                                                                            }),\n                                                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Text, {\n                                                                                fontSize: \"xs\",\n                                                                                color: \"grey\",\n                                                                                children: \"(1 gas = \".concat(gasPrice.amount, \" \").concat(gasPrice.denom, \")\")\n                                                                            })\n                                                                        ]\n                                                                    })\n                                                                ]\n                                                            }),\n                                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.ModalFooter, {\n                                                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Button, {\n                                                                    colorScheme: \"twitter\",\n                                                                    rightIcon: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_10__.ArrowForwardIcon, {}),\n                                                                    children: \"Twitter\"\n                                                                })\n                                                            })\n                                                        ]\n                                                    })\n                                                ]\n                                            })\n                                        ]\n                                    })\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"p\", {\n                            children: \"MsgStake!\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"p\", {\n                            children: \"MsgVote!\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(\"p\", {\n                            children: \"MsgIBC!\"\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n}\n_s(Page, \"A0ZAJLADfaVD06fE2uhuidxO2Ao=\", false, function() {\n    return [\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.useDisclosure,\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.useDisclosure,\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.useDisclosure,\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.useDisclosure\n    ];\n});\n_c2 = Page;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"ReactJson$loadable\");\n$RefreshReg$(_c1, \"ReactJson\");\n$RefreshReg$(_c2, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O29CQUFBLGNBQUF6RCxzREFBQSxDQUFBbkIsc0RBQ1A7d0JBQUE0RSxRQUFBLGFBQUcsR0FBQXpELHNEQUFBOzRCQUFZeUQsUUFBQTt5QkFDTjtxQkFDRjtvQkFBQSxjQUFBekQsc0RBQUEsQ0FBQW5CLHNEQUNQO3dCQUFBNEUsUUFBQSxhQUFHLEdBQUF6RCxzREFBQTs0QkFBV3lELFFBQUE7eUJBQ0w7cUJBQ0Y7b0JBQUEsY0FBQXpELHNEQUFBLENBQUFuQixzREFDUDt3QkFBQTRFLFFBQUEsYUFBRyxHQUFBekQsc0RBQUE7NEJBQVV5RCxRQUFBO3lCQUNKO3FCQUNEO2lCQUFBO2FBQ1A7U0FBQTtLQUVYO0FBQUE7R0F0SCtCekMsSUFBQTs7UUE0QmY5QiwyREFBQTtRQUFBQSwyREFBQTtRQUFBQSwyREFBQTtRQUFBQSwyREFBQTs7O0FBNUJlOEIsTUFBQUEsSUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9pbmRleC50c3g/MDdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfSwgX3R5cGVvZihvYmopOyB9XG5mdW5jdGlvbiBfcmVnZW5lcmF0b3JSdW50aW1lKCkgeyBcInVzZSBzdHJpY3RcIjsgLyohIHJlZ2VuZXJhdG9yLXJ1bnRpbWUgLS0gQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuIC0tIGxpY2Vuc2UgKE1JVCk6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vTElDRU5TRSAqLyBfcmVnZW5lcmF0b3JSdW50aW1lID0gZnVuY3Rpb24gX3JlZ2VuZXJhdG9yUnVudGltZSgpIHsgcmV0dXJuIGV4cG9ydHM7IH07IHZhciBleHBvcnRzID0ge30sIE9wID0gT2JqZWN0LnByb3RvdHlwZSwgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHksIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5IHx8IGZ1bmN0aW9uIChvYmosIGtleSwgZGVzYykgeyBvYmpba2V5XSA9IGRlc2MudmFsdWU7IH0sICRTeW1ib2wgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCA/IFN5bWJvbCA6IHt9LCBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCIsIGFzeW5jSXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIiwgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiOyBmdW5jdGlvbiBkZWZpbmUob2JqLCBrZXksIHZhbHVlKSB7IHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pLCBvYmpba2V5XTsgfSB0cnkgeyBkZWZpbmUoe30sIFwiXCIpOyB9IGNhdGNoIChlcnIpIHsgZGVmaW5lID0gZnVuY3Rpb24gZGVmaW5lKG9iaiwga2V5LCB2YWx1ZSkgeyByZXR1cm4gb2JqW2tleV0gPSB2YWx1ZTsgfTsgfSBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7IHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yLCBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSksIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7IHJldHVybiBkZWZpbmVQcm9wZXJ0eShnZW5lcmF0b3IsIFwiX2ludm9rZVwiLCB7IHZhbHVlOiBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIH0pLCBnZW5lcmF0b3I7IH0gZnVuY3Rpb24gdHJ5Q2F0Y2goZm4sIG9iaiwgYXJnKSB7IHRyeSB7IHJldHVybiB7IHR5cGU6IFwibm9ybWFsXCIsIGFyZzogZm4uY2FsbChvYmosIGFyZykgfTsgfSBjYXRjaCAoZXJyKSB7IHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiBlcnIgfTsgfSB9IGV4cG9ydHMud3JhcCA9IHdyYXA7IHZhciBDb250aW51ZVNlbnRpbmVsID0ge307IGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9IGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge30gZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fSB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTsgZGVmaW5lKEl0ZXJhdG9yUHJvdG90eXBlLCBpdGVyYXRvclN5bWJvbCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7IHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiwgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7IE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICYmIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJiBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpICYmIChJdGVyYXRvclByb3RvdHlwZSA9IE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlKTsgdmFyIEdwID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID0gR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpOyBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7IFtcIm5leHRcIiwgXCJ0aHJvd1wiLCBcInJldHVyblwiXS5mb3JFYWNoKGZ1bmN0aW9uIChtZXRob2QpIHsgZGVmaW5lKHByb3RvdHlwZSwgbWV0aG9kLCBmdW5jdGlvbiAoYXJnKSB7IHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpOyB9KTsgfSk7IH0gZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IsIFByb21pc2VJbXBsKSB7IGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KSB7IHZhciByZWNvcmQgPSB0cnlDYXRjaChnZW5lcmF0b3JbbWV0aG9kXSwgZ2VuZXJhdG9yLCBhcmcpOyBpZiAoXCJ0aHJvd1wiICE9PSByZWNvcmQudHlwZSkgeyB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZywgdmFsdWUgPSByZXN1bHQudmFsdWU7IHJldHVybiB2YWx1ZSAmJiBcIm9iamVjdFwiID09IF90eXBlb2YodmFsdWUpICYmIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikgPyBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7IGludm9rZShcIm5leHRcIiwgdmFsdWUsIHJlc29sdmUsIHJlamVjdCk7IH0sIGZ1bmN0aW9uIChlcnIpIHsgaW52b2tlKFwidGhyb3dcIiwgZXJyLCByZXNvbHZlLCByZWplY3QpOyB9KSA6IFByb21pc2VJbXBsLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24gKHVud3JhcHBlZCkgeyByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQsIHJlc29sdmUocmVzdWx0KTsgfSwgZnVuY3Rpb24gKGVycm9yKSB7IHJldHVybiBpbnZva2UoXCJ0aHJvd1wiLCBlcnJvciwgcmVzb2x2ZSwgcmVqZWN0KTsgfSk7IH0gcmVqZWN0KHJlY29yZC5hcmcpOyB9IHZhciBwcmV2aW91c1Byb21pc2U7IGRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2ludm9rZVwiLCB7IHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShtZXRob2QsIGFyZykgeyBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHsgcmV0dXJuIG5ldyBQcm9taXNlSW1wbChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KTsgfSk7IH0gcmV0dXJuIHByZXZpb3VzUHJvbWlzZSA9IHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLCBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZykgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpOyB9IH0pOyB9IGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkgeyB2YXIgc3RhdGUgPSBcInN1c3BlbmRlZFN0YXJ0XCI7IHJldHVybiBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHsgaWYgKFwiZXhlY3V0aW5nXCIgPT09IHN0YXRlKSB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpOyBpZiAoXCJjb21wbGV0ZWRcIiA9PT0gc3RhdGUpIHsgaWYgKFwidGhyb3dcIiA9PT0gbWV0aG9kKSB0aHJvdyBhcmc7IHJldHVybiB7IHZhbHVlOiB2b2lkIDAsIGRvbmU6ICEwIH07IH0gZm9yIChjb250ZXh0Lm1ldGhvZCA9IG1ldGhvZCwgY29udGV4dC5hcmcgPSBhcmc7OykgeyB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlOyBpZiAoZGVsZWdhdGUpIHsgdmFyIGRlbGVnYXRlUmVzdWx0ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7IGlmIChkZWxlZ2F0ZVJlc3VsdCkgeyBpZiAoZGVsZWdhdGVSZXN1bHQgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlOyByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7IH0gfSBpZiAoXCJuZXh0XCIgPT09IGNvbnRleHQubWV0aG9kKSBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7ZWxzZSBpZiAoXCJ0aHJvd1wiID09PSBjb250ZXh0Lm1ldGhvZCkgeyBpZiAoXCJzdXNwZW5kZWRTdGFydFwiID09PSBzdGF0ZSkgdGhyb3cgc3RhdGUgPSBcImNvbXBsZXRlZFwiLCBjb250ZXh0LmFyZzsgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7IH0gZWxzZSBcInJldHVyblwiID09PSBjb250ZXh0Lm1ldGhvZCAmJiBjb250ZXh0LmFicnVwdChcInJldHVyblwiLCBjb250ZXh0LmFyZyk7IHN0YXRlID0gXCJleGVjdXRpbmdcIjsgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpOyBpZiAoXCJub3JtYWxcIiA9PT0gcmVjb3JkLnR5cGUpIHsgaWYgKHN0YXRlID0gY29udGV4dC5kb25lID8gXCJjb21wbGV0ZWRcIiA6IFwic3VzcGVuZGVkWWllbGRcIiwgcmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7IHJldHVybiB7IHZhbHVlOiByZWNvcmQuYXJnLCBkb25lOiBjb250ZXh0LmRvbmUgfTsgfSBcInRocm93XCIgPT09IHJlY29yZC50eXBlICYmIChzdGF0ZSA9IFwiY29tcGxldGVkXCIsIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmcpOyB9IH07IH0gZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCkgeyB2YXIgbWV0aG9kTmFtZSA9IGNvbnRleHQubWV0aG9kLCBtZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvclttZXRob2ROYW1lXTsgaWYgKHVuZGVmaW5lZCA9PT0gbWV0aG9kKSByZXR1cm4gY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIFwidGhyb3dcIiA9PT0gbWV0aG9kTmFtZSAmJiBkZWxlZ2F0ZS5pdGVyYXRvcltcInJldHVyblwiXSAmJiAoY29udGV4dC5tZXRob2QgPSBcInJldHVyblwiLCBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZCwgbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCksIFwidGhyb3dcIiA9PT0gY29udGV4dC5tZXRob2QpIHx8IFwicmV0dXJuXCIgIT09IG1ldGhvZE5hbWUgJiYgKGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICdcIiArIG1ldGhvZE5hbWUgKyBcIicgbWV0aG9kXCIpKSwgQ29udGludWVTZW50aW5lbDsgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTsgaWYgKFwidGhyb3dcIiA9PT0gcmVjb3JkLnR5cGUpIHJldHVybiBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnLCBjb250ZXh0LmRlbGVnYXRlID0gbnVsbCwgQ29udGludWVTZW50aW5lbDsgdmFyIGluZm8gPSByZWNvcmQuYXJnOyByZXR1cm4gaW5mbyA/IGluZm8uZG9uZSA/IChjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZSwgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYywgXCJyZXR1cm5cIiAhPT0gY29udGV4dC5tZXRob2QgJiYgKGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkKSwgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIENvbnRpbnVlU2VudGluZWwpIDogaW5mbyA6IChjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIiksIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBDb250aW51ZVNlbnRpbmVsKTsgfSBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykgeyB2YXIgZW50cnkgPSB7IHRyeUxvYzogbG9jc1swXSB9OyAxIGluIGxvY3MgJiYgKGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXSksIDIgaW4gbG9jcyAmJiAoZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl0sIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXSksIHRoaXMudHJ5RW50cmllcy5wdXNoKGVudHJ5KTsgfSBmdW5jdGlvbiByZXNldFRyeUVudHJ5KGVudHJ5KSB7IHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9OyByZWNvcmQudHlwZSA9IFwibm9ybWFsXCIsIGRlbGV0ZSByZWNvcmQuYXJnLCBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkOyB9IGZ1bmN0aW9uIENvbnRleHQodHJ5TG9jc0xpc3QpIHsgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XSwgdHJ5TG9jc0xpc3QuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpLCB0aGlzLnJlc2V0KCEwKTsgfSBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHsgaWYgKGl0ZXJhYmxlIHx8IFwiXCIgPT09IGl0ZXJhYmxlKSB7IHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTsgaWYgKGl0ZXJhdG9yTWV0aG9kKSByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7IGlmIChcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGl0ZXJhYmxlLm5leHQpIHJldHVybiBpdGVyYWJsZTsgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7IHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkgeyBmb3IgKDsgKytpIDwgaXRlcmFibGUubGVuZ3RoOykgaWYgKGhhc093bi5jYWxsKGl0ZXJhYmxlLCBpKSkgcmV0dXJuIG5leHQudmFsdWUgPSBpdGVyYWJsZVtpXSwgbmV4dC5kb25lID0gITEsIG5leHQ7IHJldHVybiBuZXh0LnZhbHVlID0gdW5kZWZpbmVkLCBuZXh0LmRvbmUgPSAhMCwgbmV4dDsgfTsgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7IH0gfSB0aHJvdyBuZXcgVHlwZUVycm9yKF90eXBlb2YoaXRlcmFibGUpICsgXCIgaXMgbm90IGl0ZXJhYmxlXCIpOyB9IHJldHVybiBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgZGVmaW5lUHJvcGVydHkoR3AsIFwiY29uc3RydWN0b3JcIiwgeyB2YWx1ZTogR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGNvbmZpZ3VyYWJsZTogITAgfSksIGRlZmluZVByb3BlcnR5KEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBcImNvbnN0cnVjdG9yXCIsIHsgdmFsdWU6IEdlbmVyYXRvckZ1bmN0aW9uLCBjb25maWd1cmFibGU6ICEwIH0pLCBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IGRlZmluZShHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yRnVuY3Rpb25cIiksIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uIChnZW5GdW4pIHsgdmFyIGN0b3IgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGdlbkZ1biAmJiBnZW5GdW4uY29uc3RydWN0b3I7IHJldHVybiAhIWN0b3IgJiYgKGN0b3IgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8IFwiR2VuZXJhdG9yRnVuY3Rpb25cIiA9PT0gKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSk7IH0sIGV4cG9ydHMubWFyayA9IGZ1bmN0aW9uIChnZW5GdW4pIHsgcmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKSA6IChnZW5GdW4uX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGRlZmluZShnZW5GdW4sIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpKSwgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApLCBnZW5GdW47IH0sIGV4cG9ydHMuYXdyYXAgPSBmdW5jdGlvbiAoYXJnKSB7IHJldHVybiB7IF9fYXdhaXQ6IGFyZyB9OyB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpLCBkZWZpbmUoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUsIGFzeW5jSXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pLCBleHBvcnRzLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yLCBleHBvcnRzLmFzeW5jID0gZnVuY3Rpb24gKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0LCBQcm9taXNlSW1wbCkgeyB2b2lkIDAgPT09IFByb21pc2VJbXBsICYmIChQcm9taXNlSW1wbCA9IFByb21pc2UpOyB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpLCBQcm9taXNlSW1wbCk7IHJldHVybiBleHBvcnRzLmlzR2VuZXJhdG9yRnVuY3Rpb24ob3V0ZXJGbikgPyBpdGVyIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7IHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpOyB9KTsgfSwgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEdwKSwgZGVmaW5lKEdwLCB0b1N0cmluZ1RhZ1N5bWJvbCwgXCJHZW5lcmF0b3JcIiksIGRlZmluZShHcCwgaXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pLCBkZWZpbmUoR3AsIFwidG9TdHJpbmdcIiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjsgfSksIGV4cG9ydHMua2V5cyA9IGZ1bmN0aW9uICh2YWwpIHsgdmFyIG9iamVjdCA9IE9iamVjdCh2YWwpLCBrZXlzID0gW107IGZvciAodmFyIGtleSBpbiBvYmplY3QpIGtleXMucHVzaChrZXkpOyByZXR1cm4ga2V5cy5yZXZlcnNlKCksIGZ1bmN0aW9uIG5leHQoKSB7IGZvciAoOyBrZXlzLmxlbmd0aDspIHsgdmFyIGtleSA9IGtleXMucG9wKCk7IGlmIChrZXkgaW4gb2JqZWN0KSByZXR1cm4gbmV4dC52YWx1ZSA9IGtleSwgbmV4dC5kb25lID0gITEsIG5leHQ7IH0gcmV0dXJuIG5leHQuZG9uZSA9ICEwLCBuZXh0OyB9OyB9LCBleHBvcnRzLnZhbHVlcyA9IHZhbHVlcywgQ29udGV4dC5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBDb250ZXh0LCByZXNldDogZnVuY3Rpb24gcmVzZXQoc2tpcFRlbXBSZXNldCkgeyBpZiAodGhpcy5wcmV2ID0gMCwgdGhpcy5uZXh0ID0gMCwgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHVuZGVmaW5lZCwgdGhpcy5kb25lID0gITEsIHRoaXMuZGVsZWdhdGUgPSBudWxsLCB0aGlzLm1ldGhvZCA9IFwibmV4dFwiLCB0aGlzLmFyZyA9IHVuZGVmaW5lZCwgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSksICFza2lwVGVtcFJlc2V0KSBmb3IgKHZhciBuYW1lIGluIHRoaXMpIFwidFwiID09PSBuYW1lLmNoYXJBdCgwKSAmJiBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJiAhaXNOYU4oK25hbWUuc2xpY2UoMSkpICYmICh0aGlzW25hbWVdID0gdW5kZWZpbmVkKTsgfSwgc3RvcDogZnVuY3Rpb24gc3RvcCgpIHsgdGhpcy5kb25lID0gITA7IHZhciByb290UmVjb3JkID0gdGhpcy50cnlFbnRyaWVzWzBdLmNvbXBsZXRpb247IGlmIChcInRocm93XCIgPT09IHJvb3RSZWNvcmQudHlwZSkgdGhyb3cgcm9vdFJlY29yZC5hcmc7IHJldHVybiB0aGlzLnJ2YWw7IH0sIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbiBkaXNwYXRjaEV4Y2VwdGlvbihleGNlcHRpb24pIHsgaWYgKHRoaXMuZG9uZSkgdGhyb3cgZXhjZXB0aW9uOyB2YXIgY29udGV4dCA9IHRoaXM7IGZ1bmN0aW9uIGhhbmRsZShsb2MsIGNhdWdodCkgeyByZXR1cm4gcmVjb3JkLnR5cGUgPSBcInRocm93XCIsIHJlY29yZC5hcmcgPSBleGNlcHRpb24sIGNvbnRleHQubmV4dCA9IGxvYywgY2F1Z2h0ICYmIChjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiLCBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZCksICEhY2F1Z2h0OyB9IGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldLCByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uOyBpZiAoXCJyb290XCIgPT09IGVudHJ5LnRyeUxvYykgcmV0dXJuIGhhbmRsZShcImVuZFwiKTsgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHsgdmFyIGhhc0NhdGNoID0gaGFzT3duLmNhbGwoZW50cnksIFwiY2F0Y2hMb2NcIiksIGhhc0ZpbmFsbHkgPSBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpOyBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkgeyBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsICEwKTsgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7IH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHsgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCAhMCk7IH0gZWxzZSB7IGlmICghaGFzRmluYWxseSkgdGhyb3cgbmV3IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7IGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpOyB9IH0gfSB9LCBhYnJ1cHQ6IGZ1bmN0aW9uIGFicnVwdCh0eXBlLCBhcmcpIHsgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgeyB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07IGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiYgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykgeyB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7IGJyZWFrOyB9IH0gZmluYWxseUVudHJ5ICYmIChcImJyZWFrXCIgPT09IHR5cGUgfHwgXCJjb250aW51ZVwiID09PSB0eXBlKSAmJiBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJiBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MgJiYgKGZpbmFsbHlFbnRyeSA9IG51bGwpOyB2YXIgcmVjb3JkID0gZmluYWxseUVudHJ5ID8gZmluYWxseUVudHJ5LmNvbXBsZXRpb24gOiB7fTsgcmV0dXJuIHJlY29yZC50eXBlID0gdHlwZSwgcmVjb3JkLmFyZyA9IGFyZywgZmluYWxseUVudHJ5ID8gKHRoaXMubWV0aG9kID0gXCJuZXh0XCIsIHRoaXMubmV4dCA9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jLCBDb250aW51ZVNlbnRpbmVsKSA6IHRoaXMuY29tcGxldGUocmVjb3JkKTsgfSwgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHJlY29yZCwgYWZ0ZXJMb2MpIHsgaWYgKFwidGhyb3dcIiA9PT0gcmVjb3JkLnR5cGUpIHRocm93IHJlY29yZC5hcmc7IHJldHVybiBcImJyZWFrXCIgPT09IHJlY29yZC50eXBlIHx8IFwiY29udGludWVcIiA9PT0gcmVjb3JkLnR5cGUgPyB0aGlzLm5leHQgPSByZWNvcmQuYXJnIDogXCJyZXR1cm5cIiA9PT0gcmVjb3JkLnR5cGUgPyAodGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnLCB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCIsIHRoaXMubmV4dCA9IFwiZW5kXCIpIDogXCJub3JtYWxcIiA9PT0gcmVjb3JkLnR5cGUgJiYgYWZ0ZXJMb2MgJiYgKHRoaXMubmV4dCA9IGFmdGVyTG9jKSwgQ29udGludWVTZW50aW5lbDsgfSwgZmluaXNoOiBmdW5jdGlvbiBmaW5pc2goZmluYWxseUxvYykgeyBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7IHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTsgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHJldHVybiB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKSwgcmVzZXRUcnlFbnRyeShlbnRyeSksIENvbnRpbnVlU2VudGluZWw7IH0gfSwgXCJjYXRjaFwiOiBmdW5jdGlvbiBfY2F0Y2godHJ5TG9jKSB7IGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldOyBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHsgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247IGlmIChcInRocm93XCIgPT09IHJlY29yZC50eXBlKSB7IHZhciB0aHJvd24gPSByZWNvcmQuYXJnOyByZXNldFRyeUVudHJ5KGVudHJ5KTsgfSByZXR1cm4gdGhyb3duOyB9IH0gdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpOyB9LCBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbiBkZWxlZ2F0ZVlpZWxkKGl0ZXJhYmxlLCByZXN1bHROYW1lLCBuZXh0TG9jKSB7IHJldHVybiB0aGlzLmRlbGVnYXRlID0geyBpdGVyYXRvcjogdmFsdWVzKGl0ZXJhYmxlKSwgcmVzdWx0TmFtZTogcmVzdWx0TmFtZSwgbmV4dExvYzogbmV4dExvYyB9LCBcIm5leHRcIiA9PT0gdGhpcy5tZXRob2QgJiYgKHRoaXMuYXJnID0gdW5kZWZpbmVkKSwgQ29udGludWVTZW50aW5lbDsgfSB9LCBleHBvcnRzOyB9XG5mdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7IHRyeSB7IHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsgfSBjYXRjaCAoZXJyb3IpIHsgcmVqZWN0KGVycm9yKTsgcmV0dXJuOyB9IGlmIChpbmZvLmRvbmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0gZWxzZSB7IFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsgfSB9XG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsgZnVuY3Rpb24gX25leHQodmFsdWUpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpOyB9IGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH1cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIGFycjJbaV0gPSBhcnJbaV07IHJldHVybiBhcnIyOyB9XG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IG51bGwgPT0gYXJyID8gbnVsbCA6IFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIFN5bWJvbCAmJiBhcnJbU3ltYm9sLml0ZXJhdG9yXSB8fCBhcnJbXCJAQGl0ZXJhdG9yXCJdOyBpZiAobnVsbCAhPSBfaSkgeyB2YXIgX3MsIF9lLCBfeCwgX3IsIF9hcnIgPSBbXSwgX24gPSAhMCwgX2QgPSAhMTsgdHJ5IHsgaWYgKF94ID0gKF9pID0gX2kuY2FsbChhcnIpKS5uZXh0LCAwID09PSBpKSB7IGlmIChPYmplY3QoX2kpICE9PSBfaSkgcmV0dXJuOyBfbiA9ICExOyB9IGVsc2UgZm9yICg7ICEoX24gPSAoX3MgPSBfeC5jYWxsKF9pKSkuZG9uZSkgJiYgKF9hcnIucHVzaChfcy52YWx1ZSksIF9hcnIubGVuZ3RoICE9PSBpKTsgX24gPSAhMCk7IH0gY2F0Y2ggKGVycikgeyBfZCA9ICEwLCBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBudWxsICE9IF9pW1wicmV0dXJuXCJdICYmIChfciA9IF9pW1wicmV0dXJuXCJdKCksIE9iamVjdChfcikgIT09IF9yKSkgcmV0dXJuOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gfVxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5pbXBvcnQgeyBBcnJvd0ZvcndhcmRJY29uIH0gZnJvbSBcIkBjaGFrcmEtdWkvaWNvbnNcIjtcbmltcG9ydCB7IEJ1dHRvbiwgQ29kZSwgSGVhZGluZywgTGlzdEl0ZW0sIE1vZGFsLCBNb2RhbEJvZHksIE1vZGFsQ2xvc2VCdXR0b24sIE1vZGFsQ29udGVudCwgTW9kYWxGb290ZXIsIE1vZGFsSGVhZGVyLCBNb2RhbE92ZXJsYXksIFN0YWNrLCBUYWIsIFRhYkxpc3QsIFRhYlBhbmVsLCBUYWJQYW5lbHMsIFRhYnMsIFRleHQsIFVub3JkZXJlZExpc3QsIHVzZURpc2Nsb3N1cmUgfSBmcm9tIFwiQGNoYWtyYS11aS9yZWFjdFwiO1xuaW1wb3J0IGxvYWRhYmxlIGZyb20gXCJAbG9hZGFibGUvY29tcG9uZW50XCI7XG5pbXBvcnQgeyBTZWNwMjU2azFBdXRoIH0gZnJvbSBcIkBzaWduL2NvcmVcIjtcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSBcIkBzaWduL2Nvc21vc1wiO1xuaW1wb3J0IHsgc3RhcmdhdGVTaWduZXIgfSBmcm9tIFwiQHNpZ24vY29zbW9zLWNvbnN0XCI7XG5pbXBvcnQgeyBRdWVyeUNsaWVudEltcGwgYXMgQmFuayB9IGZyb20gXCJpbnRlcmNoYWluLXF1ZXJ5L2Nvc21vcy9iYW5rL3YxYmV0YTEvcXVlcnkucnBjLlF1ZXJ5XCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29zbW9zaHViQWRkcmVzcywgbW5lbW9uaWMsIHJwY0VuZHBvaW50IH0gZnJvbSBcIi4uLy4uLy4uL3Rlc3QtZGF0YVwiO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBSZWFjdEpzb24gPSBsb2FkYWJsZShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBpbXBvcnQoXCJyZWFjdC1qc29uLXZpZXdcIik7XG59KTtcbnZhciBzZW5kTXNncyA9IFt7XG4gIHR5cGVVcmw6IFwiL2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZFwiLFxuICB2YWx1ZToge1xuICAgIGFtb3VudDogW3tcbiAgICAgIGFtb3VudDogXCIxMDAwXCIsXG4gICAgICBkZW5vbTogXCJ1YXRvbVwiXG4gICAgfV0sXG4gICAgZnJvbUFkZHJlc3M6IGNvc21vc2h1YkFkZHJlc3MsXG4gICAgdG9BZGRyZXNzOiBjb3Ntb3NodWJBZGRyZXNzXG4gIH1cbn1dO1xudmFyIGF1dGggPSBTZWNwMjU2azFBdXRoLmZyb21NbmVtb25pYyhtbmVtb25pYyk7XG5zdGFyZ2F0ZVNpZ25lci5vbihycGNFbmRwb2ludCkuYnkoYXV0aCk7XG52YXIgZ2FzUHJpY2UgPSBzdGFyZ2F0ZVNpZ25lci5nZXRHYXNQcmljZShcImNvc21vc2h1Yi00XCIpO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGFnZSgpIHtcbiAgdmFyIF9iYWxhbmNlJGFtb3VudCwgX2JhbGFuY2UkZGVub20sIF9mZWUkYW1vdW50LCBfZmVlJGRlbm9tO1xuICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoKSxcbiAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSxcbiAgICBiYWxhbmNlID0gX3VzZVN0YXRlMlswXSxcbiAgICBzZXRCYWxhbmNlID0gX3VzZVN0YXRlMlsxXTtcbiAgdmFyIF91c2VTdGF0ZTMgPSB1c2VTdGF0ZSgpLFxuICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSxcbiAgICBmZWUgPSBfdXNlU3RhdGU0WzBdLFxuICAgIHNldEZlZSA9IF91c2VTdGF0ZTRbMV07XG4gIHZhciBfdXNlU3RhdGU1ID0gdXNlU3RhdGUoXCItLVwiKSxcbiAgICBfdXNlU3RhdGU2ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlNSwgMiksXG4gICAgZ2FzID0gX3VzZVN0YXRlNlswXSxcbiAgICBzZXRHYXMgPSBfdXNlU3RhdGU2WzFdO1xuICB2YXIgdXBkYXRlQW1vdW50ID0gdXNlQ2FsbGJhY2soIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7XG4gICAgdmFyIHF1ZXJ5LCByZXNwO1xuICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIHF1ZXJ5ID0gbmV3IFF1ZXJ5KHJwY0VuZHBvaW50KTtcbiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMztcbiAgICAgICAgICByZXR1cm4gcXVlcnkuYWJvdXQoQmFuaykuYmFsYW5jZSh7XG4gICAgICAgICAgICBhZGRyZXNzOiBjb3Ntb3NodWJBZGRyZXNzLFxuICAgICAgICAgICAgZGVub206IFwidWF0b21cIlxuICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgcmVzcCA9IF9jb250ZXh0LnNlbnQ7XG4gICAgICAgICAgc2V0QmFsYW5jZShyZXNwLmJhbGFuY2UpO1xuICAgICAgICBjYXNlIDU6XG4gICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgfVxuICAgIH0sIF9jYWxsZWUpO1xuICB9KSksIFtdKTtcbiAgdmFyIHVwZGF0ZUZlZSA9IHVzZUNhbGxiYWNrKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHtcbiAgICB2YXIgcmVzcDtcbiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0Mikge1xuICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkge1xuICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyO1xuICAgICAgICAgIHJldHVybiBzdGFyZ2F0ZVNpZ25lci5lc3RpbWF0ZUZlZSh7XG4gICAgICAgICAgICBtc2dzOiBzZW5kTXNnc1xuICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgcmVzcCA9IF9jb250ZXh0Mi5zZW50O1xuICAgICAgICAgIHNldEZlZShyZXNwLmFtb3VudFswXSk7XG4gICAgICAgICAgc2V0R2FzKHJlc3AuZ2FzTGltaXQudG9TdHJpbmcoKSk7XG4gICAgICAgIGNhc2UgNTpcbiAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpO1xuICAgICAgfVxuICAgIH0sIF9jYWxsZWUyKTtcbiAgfSkpLCBbXSk7XG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdXBkYXRlQW1vdW50KCk7XG4gIH0sIFtdKTtcbiAgdmFyIG9uQ2xpY2sgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgb25PcGVuKCk7XG4gICAgdXBkYXRlRmVlKCk7XG4gIH0sIFtdKTtcbiAgdmFyIF91c2VEaXNjbG9zdXJlID0gdXNlRGlzY2xvc3VyZSgpLFxuICAgIGlzT3BlbiA9IF91c2VEaXNjbG9zdXJlLmlzT3BlbixcbiAgICBvbk9wZW4gPSBfdXNlRGlzY2xvc3VyZS5vbk9wZW4sXG4gICAgb25DbG9zZSA9IF91c2VEaXNjbG9zdXJlLm9uQ2xvc2U7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeHMoVGFicywge1xuICAgIHZhcmlhbnQ6IFwiZW5jbG9zZWRcIixcbiAgICBjb2xvclNjaGVtZTogXCJ0ZWFsXCIsXG4gICAgbWFyZ2luWTogMTAsXG4gICAgbWFyZ2luWDogMTAwLFxuICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3hzKFRhYkxpc3QsIHtcbiAgICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3goVGFiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIk1zZ1NlbmRcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KFRhYiwge1xuICAgICAgICBjaGlsZHJlbjogXCJNc2dTdGFrZVwiXG4gICAgICB9KSwgLyojX19QVVJFX18qL19qc3goVGFiLCB7XG4gICAgICAgIGNoaWxkcmVuOiBcIk1zZ1ZvdGVcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KFRhYiwge1xuICAgICAgICBjaGlsZHJlbjogXCJNc2dJQkNcIlxuICAgICAgfSldXG4gICAgfSksIC8qI19fUFVSRV9fKi9fanN4cyhUYWJQYW5lbHMsIHtcbiAgICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3hzKFRhYlBhbmVsLCB7XG4gICAgICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3hzKFN0YWNrLCB7XG4gICAgICAgICAgZGlyZWN0aW9uOiBcInJvd1wiLFxuICAgICAgICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3goQ29kZSwge1xuICAgICAgICAgICAgY29sb3JTY2hlbWU6IFwidGVhbFwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IGNvc21vc2h1YkFkZHJlc3NcbiAgICAgICAgICB9KSwgLyojX19QVVJFX18qL19qc3goQ29kZSwge1xuICAgICAgICAgICAgY29sb3JTY2hlbWU6IFwieWVsbG93XCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJcIi5jb25jYXQoKF9iYWxhbmNlJGFtb3VudCA9IGJhbGFuY2UgPT09IG51bGwgfHwgYmFsYW5jZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogYmFsYW5jZS5hbW91bnQpICE9PSBudWxsICYmIF9iYWxhbmNlJGFtb3VudCAhPT0gdm9pZCAwID8gX2JhbGFuY2UkYW1vdW50IDogXCItLVwiLCBcIiBcIikuY29uY2F0KChfYmFsYW5jZSRkZW5vbSA9IGJhbGFuY2UgPT09IG51bGwgfHwgYmFsYW5jZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogYmFsYW5jZS5kZW5vbSkgIT09IG51bGwgJiYgX2JhbGFuY2UkZGVub20gIT09IHZvaWQgMCA/IF9iYWxhbmNlJGRlbm9tIDogXCJcIilcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KFVub3JkZXJlZExpc3QsIHtcbiAgICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goTGlzdEl0ZW0sIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeHMoU3RhY2ssIHtcbiAgICAgICAgICAgICAgZGlyZWN0aW9uOiBcInJvd1wiLFxuICAgICAgICAgICAgICBtYXJnaW5Ub3A6IDUsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBbLyojX19QVVJFX18qL19qc3goVGV4dCwge1xuICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcImxcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTZW5kIDEgdWF0b20gdG8gc2VsZlwiXG4gICAgICAgICAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICBjb2xvclNjaGVtZTogXCJ0ZWFsXCIsXG4gICAgICAgICAgICAgICAgdmFyaWFudDogXCJvdXRsaW5lXCIsXG4gICAgICAgICAgICAgICAgc2l6ZTogXCJ4c1wiLFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2ssXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiU2VuZFwiXG4gICAgICAgICAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeHMoTW9kYWwsIHtcbiAgICAgICAgICAgICAgICBpc09wZW46IGlzT3BlbixcbiAgICAgICAgICAgICAgICBvbkNsb3NlOiBvbkNsb3NlLFxuICAgICAgICAgICAgICAgIHNpemU6IFwieGxcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogWy8qI19fUFVSRV9fKi9fanN4KE1vZGFsT3ZlcmxheSwge30pLCAvKiNfX1BVUkVfXyovX2pzeHMoTW9kYWxDb250ZW50LCB7XG4gICAgICAgICAgICAgICAgICBjaGlsZHJlbjogWy8qI19fUFVSRV9fKi9fanN4KE1vZGFsSGVhZGVyLCB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlRyYW5zYWN0aW9uXCJcbiAgICAgICAgICAgICAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChNb2RhbENsb3NlQnV0dG9uLCB7fSksIC8qI19fUFVSRV9fKi9fanN4cyhNb2RhbEJvZHksIHtcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChIZWFkaW5nLCB7XG4gICAgICAgICAgICAgICAgICAgICAgYXM6IFwiaDZcIixcbiAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcInhzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgbWFyZ2luQm90dG9tOiA1LFxuICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk1lc3NhZ2VzXCJcbiAgICAgICAgICAgICAgICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KFJlYWN0SnNvbiwge1xuICAgICAgICAgICAgICAgICAgICAgIHNyYzogc2VuZE1zZ3MsXG4gICAgICAgICAgICAgICAgICAgICAgaWNvblN0eWxlOiBcInNxdWFyZVwiLFxuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlEYXRhVHlwZXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZUNsaXBib2FyZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU9iamVjdFNpemU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgIGNvbGxhcHNlU3RyaW5nc0FmdGVyTGVuZ3RoOiA2MFxuICAgICAgICAgICAgICAgICAgICB9KSwgLyojX19QVVJFX18qL19qc3goSGVhZGluZywge1xuICAgICAgICAgICAgICAgICAgICAgIGFzOiBcImg2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJ4c1wiLFxuICAgICAgICAgICAgICAgICAgICAgIG1hcmdpblk6IDUsXG4gICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRXN0aW1hdGVkIEZlZVwiXG4gICAgICAgICAgICAgICAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeHMoU3RhY2ssIHtcbiAgICAgICAgICAgICAgICAgICAgICBkaXJlY3Rpb246IFwicm93XCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFsvKiNfX1BVUkVfXyovX2pzeChDb2RlLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvclNjaGVtZTogXCJncmVlblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiXCIuY29uY2F0KGdhcywgXCIgZ2FzXCIpXG4gICAgICAgICAgICAgICAgICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KENvZGUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yU2NoZW1lOiBcInllbGxvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwifiBcIi5jb25jYXQoKF9mZWUkYW1vdW50ID0gZmVlID09PSBudWxsIHx8IGZlZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZmVlLmFtb3VudCkgIT09IG51bGwgJiYgX2ZlZSRhbW91bnQgIT09IHZvaWQgMCA/IF9mZWUkYW1vdW50IDogXCItLVwiLCBcIiBcIikuY29uY2F0KChfZmVlJGRlbm9tID0gZmVlID09PSBudWxsIHx8IGZlZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZmVlLmRlbm9tKSAhPT0gbnVsbCAmJiBfZmVlJGRlbm9tICE9PSB2b2lkIDAgPyBfZmVlJGRlbm9tIDogXCJcIilcbiAgICAgICAgICAgICAgICAgICAgICB9KSwgLyojX19QVVJFX18qL19qc3goVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IFwieHNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcImdyZXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIigxIGdhcyA9IFwiLmNvbmNhdChnYXNQcmljZS5hbW91bnQsIFwiIFwiKS5jb25jYXQoZ2FzUHJpY2UuZGVub20sIFwiKVwiKVxuICAgICAgICAgICAgICAgICAgICAgIH0pXVxuICAgICAgICAgICAgICAgICAgICB9KV1cbiAgICAgICAgICAgICAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChNb2RhbEZvb3Rlciwge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgY29sb3JTY2hlbWU6IFwidHdpdHRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0SWNvbjogLyojX19QVVJFX18qL19qc3goQXJyb3dGb3J3YXJkSWNvbiwge30pLFxuICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlR3aXR0ZXJcIlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgfSldXG4gICAgICAgICAgICAgICAgfSldXG4gICAgICAgICAgICAgIH0pXVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KVxuICAgICAgICB9KV1cbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChUYWJQYW5lbCwge1xuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goXCJwXCIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJNc2dTdGFrZSFcIlxuICAgICAgICB9KVxuICAgICAgfSksIC8qI19fUFVSRV9fKi9fanN4KFRhYlBhbmVsLCB7XG4gICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovX2pzeChcInBcIiwge1xuICAgICAgICAgIGNoaWxkcmVuOiBcIk1zZ1ZvdGUhXCJcbiAgICAgICAgfSlcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovX2pzeChUYWJQYW5lbCwge1xuICAgICAgICBjaGlsZHJlbjogLyojX19QVVJFX18qL19qc3goXCJwXCIsIHtcbiAgICAgICAgICBjaGlsZHJlbjogXCJNc2dJQkMhXCJcbiAgICAgICAgfSlcbiAgICAgIH0pXVxuICAgIH0pXVxuICB9KTtcbn0iXSwibmFtZXMiOlsiX3R5cGVvZiIsIm9iaiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiZGVmaW5lIiwia2V5IiwidmFsdWUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJpbm5lckZuIiwib3V0ZXJGbiIsInNlbGYiLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiY3JlYXRlIiwiY29udGV4dCIsIkNvbnRleHQiLCJtYWtlSW52b2tlTWV0aG9kIiwidHJ5Q2F0Y2giLCJmbiIsImFyZyIsInR5cGUiLCJjYWxsIiwiZXJyIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJtZXRob2QiLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsIlByb21pc2VJbXBsIiwiaW52b2tlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlY29yZCIsInJlc3VsdCIsImhhc093biIsIl9fYXdhaXQiLCJ0aGVuIiwidW53cmFwcGVkIiwiZXJyb3IiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsInN0YXRlIiwiRXJyb3IiLCJkb25lIiwiZGVsZWdhdGUiLCJkZWxlZ2F0ZVJlc3VsdCIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJDb250aW51ZVNlbnRpbmVsIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiZW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJwdXNoIiwicmVzZXRUcnlFbnRyeSIsImNvbXBsZXRpb24iLCJyZXNldCIsInZhbHVlcyIsIml0ZXJhYmxlIiwiaXRlcmF0b3JNZXRob2QiLCJpdGVyYXRvclN5bWJvbCIsIm5leHQiLCJpc05hTiIsImxlbmd0aCIsImkiLCJ1bmRlZmluZWQiLCJUeXBlRXJyb3IiLCJleHBvcnRzIiwiT3AiLCJoYXNPd25Qcm9wZXJ0eSIsImRlc2MiLCIkU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsInRvU3RyaW5nVGFnIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJnZXRQcm90byIsImdldFByb3RvdHlwZU9mIiwiTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUiLCJHcCIsIm1ldGhvZE5hbWUiLCJpbmZvIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJnZW5GdW4iLCJjdG9yIiwibmFtZSIsIm1hcmsiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImF3cmFwIiwiYXN5bmMiLCJQcm9taXNlIiwiaXRlciIsImtleXMiLCJ2YWwiLCJvYmplY3QiLCJyZXZlcnNlIiwicG9wIiwic2tpcFRlbXBSZXNldCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwiX2NhdGNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsIl9uZXh0IiwiX3Rocm93IiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfc2xpY2VkVG9BcnJheSIsImFyciIsIl9hcnJheVdpdGhIb2xlcyIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVJlc3QiLCJvIiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJuIiwidG9TdHJpbmciLCJBcnJheSIsImZyb20iLCJ0ZXN0IiwibGVuIiwiYXJyMiIsIl9pIiwiX3MiLCJfZSIsIl94IiwiX3IiLCJfYXJyIiwiX24iLCJfZCIsImlzQXJyYXkiLCJBcnJvd0ZvcndhcmRJY29uIiwiQnV0dG9uIiwiQ29kZSIsIkhlYWRpbmciLCJMaXN0SXRlbSIsIk1vZGFsIiwiTW9kYWxCb2R5IiwiTW9kYWxDbG9zZUJ1dHRvbiIsIk1vZGFsQ29udGVudCIsIk1vZGFsRm9vdGVyIiwiTW9kYWxIZWFkZXIiLCJNb2RhbE92ZXJsYXkiLCJTdGFjayIsIlRhYiIsIlRhYkxpc3QiLCJUYWJQYW5lbCIsIlRhYlBhbmVscyIsIlRhYnMiLCJUZXh0IiwiVW5vcmRlcmVkTGlzdCIsInVzZURpc2Nsb3N1cmUiLCJsb2FkYWJsZSIsIlNlY3AyNTZrMUF1dGgiLCJRdWVyeSIsInN0YXJnYXRlU2lnbmVyIiwiUXVlcnlDbGllbnRJbXBsIiwiQmFuayIsInVzZUNhbGxiYWNrIiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJjb3Ntb3NodWJBZGRyZXNzIiwibW5lbW9uaWMiLCJycGNFbmRwb2ludCIsImpzeCIsIl9qc3giLCJqc3hzIiwiX2pzeHMiLCJSZWFjdEpzb24iLCJzZW5kTXNncyIsInR5cGVVcmwiLCJhbW91bnQiLCJkZW5vbSIsImZyb21BZGRyZXNzIiwidG9BZGRyZXNzIiwiYXV0aCIsImZyb21NbmVtb25pYyIsIm9uIiwiYnkiLCJnYXNQcmljZSIsImdldEdhc1ByaWNlIiwiUGFnZSIsIl9iYWxhbmNlJGFtb3VudCIsIl9iYWxhbmNlJGRlbm9tIiwiX2ZlZSRhbW91bnQiLCJfZmVlJGRlbm9tIiwiX3VzZVN0YXRlIiwiX3VzZVN0YXRlMiIsImJhbGFuY2UiLCJzZXRCYWxhbmNlIiwiX3VzZVN0YXRlMyIsIl91c2VTdGF0ZTQiLCJmZWUiLCJzZXRGZWUiLCJfdXNlU3RhdGU1IiwiX3VzZVN0YXRlNiIsImdhcyIsInNldEdhcyIsInVwZGF0ZUFtb3VudCIsIl9jYWxsZWUiLCJxdWVyeSIsInJlc3AiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwiYWJvdXQiLCJhZGRyZXNzIiwidXBkYXRlRmVlIiwiX2NhbGxlZTIiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJlc3RpbWF0ZUZlZSIsIm1zZ3MiLCJnYXNMaW1pdCIsIm9uQ2xpY2siLCJvbk9wZW4iLCJfdXNlRGlzY2xvc3VyZSIsImlzT3BlbiIsIm9uQ2xvc2UiLCJ2YXJpYW50IiwiY29sb3JTY2hlbWUiLCJtYXJnaW5ZIiwibWFyZ2luWCIsImNoaWxkcmVuIiwiZGlyZWN0aW9uIiwiY29uY2F0IiwibWFyZ2luVG9wIiwiZm9udFNpemUiLCJzaXplIiwiYXMiLCJtYXJnaW5Cb3R0b20iLCJzcmMiLCJpY29uU3R5bGUiLCJkaXNwbGF5RGF0YVR5cGVzIiwiZW5hYmxlQ2xpcGJvYXJkIiwiZGlzcGxheU9iamVjdFNpemUiLCJjb2xsYXBzZVN0cmluZ3NBZnRlckxlbmd0aCIsImNvbG9yIiwicmlnaHRJY29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ })

});